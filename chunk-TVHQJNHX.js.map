{
  "version": 3,
  "sources": ["src/app/theme.service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n    private darkMode = new BehaviorSubject<boolean>(false);\r\n    darkMode$ = this.darkMode.asObservable();\r\n\r\n    constructor() {\r\n      if (typeof window !== 'undefined' && window.localStorage){\r\n        // Initialize theme based on user preference or stored value\r\n        const savedTheme = localStorage.getItem('theme');\r\n        if (savedTheme) {\r\n            this.setDarkMode(savedTheme === 'dark');\r\n        } else {\r\n            // Optional: Check system preference\r\n            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n            this.setDarkMode(prefersDark);\r\n        }\r\n      }\r\n    }\r\n\r\n    setDarkMode(isDark: boolean) {\r\n        const html = document.querySelector('html');\r\n        if (isDark) {\r\n            html?.classList.add('dark-mode');\r\n        } else {\r\n            html?.classList.remove('dark-mode');\r\n        }\r\n        localStorage.setItem('theme', isDark ? 'dark' : 'light');\r\n        this.darkMode.next(isDark);\r\n    }\r\n\r\n    toggleDarkMode() {\r\n        this.setDarkMode(!this.darkMode.value);\r\n    }\r\n\r\n    isDarkMode() {\r\n        return this.darkMode;\r\n    }\r\n}\r\n"],
  "mappings": "+CAMA,IAAaA,GAAY,IAAA,CAAnB,MAAOA,CAAY,CACbC,SAAW,IAAIC,EAAyB,EAAK,EACrDC,UAAY,KAAKF,SAASG,aAAY,EAEtCC,aAAA,CACE,GAAI,OAAOC,OAAW,KAAeA,OAAOC,aAAa,CAEvD,IAAMC,EAAaD,aAAaE,QAAQ,OAAO,EAC/C,GAAID,EACA,KAAKE,YAAYF,IAAe,MAAM,MACnC,CAEH,IAAMG,EAAcL,OAAOM,WAAW,8BAA8B,EAAEC,QACtE,KAAKH,YAAYC,CAAW,CAChC,CACF,CACF,CAEAD,YAAYI,EAAe,CACvB,IAAMC,EAAOC,SAASC,cAAc,MAAM,EACtCH,EACAC,GAAMG,UAAUC,IAAI,WAAW,EAE/BJ,GAAMG,UAAUE,OAAO,WAAW,EAEtCb,aAAac,QAAQ,QAASP,EAAS,OAAS,OAAO,EACvD,KAAKb,SAASqB,KAAKR,CAAM,CAC7B,CAEAS,gBAAc,CACV,KAAKb,YAAY,CAAC,KAAKT,SAASuB,KAAK,CACzC,CAEAC,YAAU,CACN,OAAO,KAAKxB,QAChB,4CAnCSD,EAAY,6BAAZA,EAAY0B,QAAZ1B,EAAY2B,UAAAC,WAFT,MAAM,CAAA,SAET5B,CAAY,GAAA",
  "names": ["ThemeService", "darkMode", "BehaviorSubject", "darkMode$", "asObservable", "constructor", "window", "localStorage", "savedTheme", "getItem", "setDarkMode", "prefersDark", "matchMedia", "matches", "isDark", "html", "document", "querySelector", "classList", "add", "remove", "setItem", "next", "toggleDarkMode", "value", "isDarkMode", "factory", "\u0275fac", "providedIn"]
}
