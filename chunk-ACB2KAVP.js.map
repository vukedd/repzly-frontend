{"version":3,"sources":["node_modules/@angular/common/fesm2022/http.mjs","node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs","node_modules/@angular/router/fesm2022/router.mjs","node_modules/@angular/forms/fesm2022/forms.mjs","node_modules/primeng/fesm2022/primeng-dom.mjs","node_modules/primeng/fesm2022/primeng-autofocus.mjs","node_modules/primeng/fesm2022/primeng-badge.mjs","node_modules/primeng/fesm2022/primeng-icons-baseicon.mjs","node_modules/primeng/fesm2022/primeng-icons-angledown.mjs","node_modules/primeng/fesm2022/primeng-icons-angleright.mjs","node_modules/primeng/fesm2022/primeng-icons-check.mjs","node_modules/primeng/fesm2022/primeng-icons-chevrondown.mjs","node_modules/primeng/fesm2022/primeng-icons-chevronright.mjs","node_modules/primeng/fesm2022/primeng-icons-exclamationtriangle.mjs","node_modules/primeng/fesm2022/primeng-icons-infocircle.mjs","node_modules/primeng/fesm2022/primeng-icons-spinner.mjs","node_modules/primeng/fesm2022/primeng-icons-times.mjs","node_modules/primeng/fesm2022/primeng-icons-timescircle.mjs","node_modules/primeng/fesm2022/primeng-icons-windowmaximize.mjs","node_modules/primeng/fesm2022/primeng-icons-windowminimize.mjs","node_modules/primeng/fesm2022/primeng-ripple.mjs","node_modules/primeng/fesm2022/primeng-button.mjs","node_modules/primeng/fesm2022/primeng-inputtext.mjs","node_modules/primeng/fesm2022/primeng-utils.mjs","node_modules/primeng/fesm2022/primeng-toast.mjs","node_modules/primeng/fesm2022/primeng-tooltip.mjs","node_modules/primeng/fesm2022/primeng-menu.mjs","src/app/layout/toasts/toasts-position.service.ts","node_modules/primeng/fesm2022/primeng-focustrap.mjs","node_modules/primeng/fesm2022/primeng-dialog.mjs","node_modules/primeng/fesm2022/primeng-dynamicdialog.mjs","node_modules/primeng/fesm2022/primeng-toolbar.mjs","src/globals.ts","src/app/auth/refresh-token-request.ts","node_modules/jwt-decode/build/esm/index.js","src/app/auth/jwt/jwt.service.ts","node_modules/primeng/fesm2022/primeng-inputgroup.mjs","node_modules/primeng/fesm2022/primeng-inputgroupaddon.mjs","node_modules/primeng/fesm2022/primeng-message.mjs"],"sourcesContent":["/**\n * @license Angular v19.1.7\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵRuntimeError, Injectable, InjectionToken, inject, NgZone, runInInjectionContext, ɵPendingTasksInternal, PLATFORM_ID, ɵConsole, ɵformatRuntimeError, Inject, makeEnvironmentProviders, NgModule, TransferState, makeStateKey, ɵperformanceMarkFeature, APP_BOOTSTRAP_LISTENER, ApplicationRef, ɵtruncateMiddle } from '@angular/core';\nimport { of, Observable, from } from 'rxjs';\nimport { concatMap, filter, map, finalize, switchMap, tap } from 'rxjs/operators';\nimport * as i1 from '@angular/common';\nimport { isPlatformServer, DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nclass HttpHandler {}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nclass HttpBackend {}\n\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * @publicApi\n */\nclass HttpHeaders {\n  /**\n   * Internal map of lowercase header names to values.\n   */\n  // TODO(issue/24571): remove '!'.\n  headers;\n  /**\n   * Internal map of lowercased header names to the normalized\n   * form of the name (the form seen first).\n   */\n  normalizedNames = /*#__PURE__*/new Map();\n  /**\n   * Complete the lazy initialization of this object (needed before reading).\n   */\n  lazyInit;\n  /**\n   * Queued updates to be materialized the next initialization.\n   */\n  lazyUpdate = null;\n  /**  Constructs a new HTTP header object with the given values.*/\n  constructor(headers) {\n    if (!headers) {\n      this.headers = new Map();\n    } else if (typeof headers === 'string') {\n      this.lazyInit = () => {\n        this.headers = new Map();\n        headers.split('\\n').forEach(line => {\n          const index = line.indexOf(':');\n          if (index > 0) {\n            const name = line.slice(0, index);\n            const value = line.slice(index + 1).trim();\n            this.addHeaderEntry(name, value);\n          }\n        });\n      };\n    } else if (typeof Headers !== 'undefined' && headers instanceof Headers) {\n      this.headers = new Map();\n      headers.forEach((value, name) => {\n        this.addHeaderEntry(name, value);\n      });\n    } else {\n      this.lazyInit = () => {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          assertValidHeaders(headers);\n        }\n        this.headers = new Map();\n        Object.entries(headers).forEach(([name, values]) => {\n          this.setHeaderEntries(name, values);\n        });\n      };\n    }\n  }\n  /**\n   * Checks for existence of a given header.\n   *\n   * @param name The header name to check for existence.\n   *\n   * @returns True if the header exists, false otherwise.\n   */\n  has(name) {\n    this.init();\n    return this.headers.has(name.toLowerCase());\n  }\n  /**\n   * Retrieves the first value of a given header.\n   *\n   * @param name The header name.\n   *\n   * @returns The value string if the header exists, null otherwise\n   */\n  get(name) {\n    this.init();\n    const values = this.headers.get(name.toLowerCase());\n    return values && values.length > 0 ? values[0] : null;\n  }\n  /**\n   * Retrieves the names of the headers.\n   *\n   * @returns A list of header names.\n   */\n  keys() {\n    this.init();\n    return Array.from(this.normalizedNames.values());\n  }\n  /**\n   * Retrieves a list of values for a given header.\n   *\n   * @param name The header name from which to retrieve values.\n   *\n   * @returns A string of values if the header exists, null otherwise.\n   */\n  getAll(name) {\n    this.init();\n    return this.headers.get(name.toLowerCase()) || null;\n  }\n  /**\n   * Appends a new value to the existing set of values for a header\n   * and returns them in a clone of the original instance.\n   *\n   * @param name The header name for which to append the values.\n   * @param value The value to append.\n   *\n   * @returns A clone of the HTTP headers object with the value appended to the given header.\n   */\n  append(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 'a'\n    });\n  }\n  /**\n   * Sets or modifies a value for a given header in a clone of the original instance.\n   * If the header already exists, its value is replaced with the given value\n   * in the returned object.\n   *\n   * @param name The header name.\n   * @param value The value or values to set or override for the given header.\n   *\n   * @returns A clone of the HTTP headers object with the newly set header value.\n   */\n  set(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 's'\n    });\n  }\n  /**\n   * Deletes values for a given header in a clone of the original instance.\n   *\n   * @param name The header name.\n   * @param value The value or values to delete for the given header.\n   *\n   * @returns A clone of the HTTP headers object with the given value deleted.\n   */\n  delete(name, value) {\n    return this.clone({\n      name,\n      value,\n      op: 'd'\n    });\n  }\n  maybeSetNormalizedName(name, lcName) {\n    if (!this.normalizedNames.has(lcName)) {\n      this.normalizedNames.set(lcName, name);\n    }\n  }\n  init() {\n    if (!!this.lazyInit) {\n      if (this.lazyInit instanceof HttpHeaders) {\n        this.copyFrom(this.lazyInit);\n      } else {\n        this.lazyInit();\n      }\n      this.lazyInit = null;\n      if (!!this.lazyUpdate) {\n        this.lazyUpdate.forEach(update => this.applyUpdate(update));\n        this.lazyUpdate = null;\n      }\n    }\n  }\n  copyFrom(other) {\n    other.init();\n    Array.from(other.headers.keys()).forEach(key => {\n      this.headers.set(key, other.headers.get(key));\n      this.normalizedNames.set(key, other.normalizedNames.get(key));\n    });\n  }\n  clone(update) {\n    const clone = new HttpHeaders();\n    clone.lazyInit = !!this.lazyInit && this.lazyInit instanceof HttpHeaders ? this.lazyInit : this;\n    clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n    return clone;\n  }\n  applyUpdate(update) {\n    const key = update.name.toLowerCase();\n    switch (update.op) {\n      case 'a':\n      case 's':\n        let value = update.value;\n        if (typeof value === 'string') {\n          value = [value];\n        }\n        if (value.length === 0) {\n          return;\n        }\n        this.maybeSetNormalizedName(update.name, key);\n        const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n        base.push(...value);\n        this.headers.set(key, base);\n        break;\n      case 'd':\n        const toDelete = update.value;\n        if (!toDelete) {\n          this.headers.delete(key);\n          this.normalizedNames.delete(key);\n        } else {\n          let existing = this.headers.get(key);\n          if (!existing) {\n            return;\n          }\n          existing = existing.filter(value => toDelete.indexOf(value) === -1);\n          if (existing.length === 0) {\n            this.headers.delete(key);\n            this.normalizedNames.delete(key);\n          } else {\n            this.headers.set(key, existing);\n          }\n        }\n        break;\n    }\n  }\n  addHeaderEntry(name, value) {\n    const key = name.toLowerCase();\n    this.maybeSetNormalizedName(name, key);\n    if (this.headers.has(key)) {\n      this.headers.get(key).push(value);\n    } else {\n      this.headers.set(key, [value]);\n    }\n  }\n  setHeaderEntries(name, values) {\n    const headerValues = (Array.isArray(values) ? values : [values]).map(value => value.toString());\n    const key = name.toLowerCase();\n    this.headers.set(key, headerValues);\n    this.maybeSetNormalizedName(name, key);\n  }\n  /**\n   * @internal\n   */\n  forEach(fn) {\n    this.init();\n    Array.from(this.normalizedNames.keys()).forEach(key => fn(this.normalizedNames.get(key), this.headers.get(key)));\n  }\n}\n/**\n * Verifies that the headers object has the right shape: the values\n * must be either strings, numbers or arrays. Throws an error if an invalid\n * header value is present.\n */\nfunction assertValidHeaders(headers) {\n  for (const [key, value] of Object.entries(headers)) {\n    if (!(typeof value === 'string' || typeof value === 'number') && !Array.isArray(value)) {\n      throw new Error(`Unexpected value of the \\`${key}\\` header provided. ` + `Expecting either a string, a number or an array, but got: \\`${value}\\`.`);\n    }\n  }\n}\n\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * @publicApi\n */\nclass HttpUrlEncodingCodec {\n  /**\n   * Encodes a key name for a URL parameter or query-string.\n   * @param key The key name.\n   * @returns The encoded key name.\n   */\n  encodeKey(key) {\n    return standardEncoding(key);\n  }\n  /**\n   * Encodes the value of a URL parameter or query-string.\n   * @param value The value.\n   * @returns The encoded value.\n   */\n  encodeValue(value) {\n    return standardEncoding(value);\n  }\n  /**\n   * Decodes an encoded URL parameter or query-string key.\n   * @param key The encoded key name.\n   * @returns The decoded key name.\n   */\n  decodeKey(key) {\n    return decodeURIComponent(key);\n  }\n  /**\n   * Decodes an encoded URL parameter or query-string value.\n   * @param value The encoded value.\n   * @returns The decoded value.\n   */\n  decodeValue(value) {\n    return decodeURIComponent(value);\n  }\n}\nfunction paramParser(rawParams, codec) {\n  const map = new Map();\n  if (rawParams.length > 0) {\n    // The `window.location.search` can be used while creating an instance of the `HttpParams` class\n    // (e.g. `new HttpParams({ fromString: window.location.search })`). The `window.location.search`\n    // may start with the `?` char, so we strip it if it's present.\n    const params = rawParams.replace(/^\\?/, '').split('&');\n    params.forEach(param => {\n      const eqIdx = param.indexOf('=');\n      const [key, val] = eqIdx == -1 ? [codec.decodeKey(param), ''] : [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n      const list = map.get(key) || [];\n      list.push(val);\n      map.set(key, list);\n    });\n  }\n  return map;\n}\n/**\n * Encode input string with standard encodeURIComponent and then un-encode specific characters.\n */\nconst STANDARD_ENCODING_REGEX = /%(\\d[a-f0-9])/gi;\nconst STANDARD_ENCODING_REPLACEMENTS = {\n  '40': '@',\n  '3A': ':',\n  '24': '$',\n  '2C': ',',\n  '3B': ';',\n  '3D': '=',\n  '3F': '?',\n  '2F': '/'\n};\nfunction standardEncoding(v) {\n  return encodeURIComponent(v).replace(STANDARD_ENCODING_REGEX, (s, t) => STANDARD_ENCODING_REPLACEMENTS[t] ?? s);\n}\nfunction valueToString(value) {\n  return `${value}`;\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * @publicApi\n */\nclass HttpParams {\n  map;\n  encoder;\n  updates = null;\n  cloneFrom = null;\n  constructor(options = {}) {\n    this.encoder = options.encoder || new HttpUrlEncodingCodec();\n    if (options.fromString) {\n      if (options.fromObject) {\n        throw new ɵRuntimeError(2805 /* RuntimeErrorCode.CANNOT_SPECIFY_BOTH_FROM_STRING_AND_FROM_OBJECT */, ngDevMode && 'Cannot specify both fromString and fromObject.');\n      }\n      this.map = paramParser(options.fromString, this.encoder);\n    } else if (!!options.fromObject) {\n      this.map = new Map();\n      Object.keys(options.fromObject).forEach(key => {\n        const value = options.fromObject[key];\n        // convert the values to strings\n        const values = Array.isArray(value) ? value.map(valueToString) : [valueToString(value)];\n        this.map.set(key, values);\n      });\n    } else {\n      this.map = null;\n    }\n  }\n  /**\n   * Reports whether the body includes one or more values for a given parameter.\n   * @param param The parameter name.\n   * @returns True if the parameter has one or more values,\n   * false if it has no value or is not present.\n   */\n  has(param) {\n    this.init();\n    return this.map.has(param);\n  }\n  /**\n   * Retrieves the first value for a parameter.\n   * @param param The parameter name.\n   * @returns The first value of the given parameter,\n   * or `null` if the parameter is not present.\n   */\n  get(param) {\n    this.init();\n    const res = this.map.get(param);\n    return !!res ? res[0] : null;\n  }\n  /**\n   * Retrieves all values for a  parameter.\n   * @param param The parameter name.\n   * @returns All values in a string array,\n   * or `null` if the parameter not present.\n   */\n  getAll(param) {\n    this.init();\n    return this.map.get(param) || null;\n  }\n  /**\n   * Retrieves all the parameters for this body.\n   * @returns The parameter names in a string array.\n   */\n  keys() {\n    this.init();\n    return Array.from(this.map.keys());\n  }\n  /**\n   * Appends a new value to existing values for a parameter.\n   * @param param The parameter name.\n   * @param value The new value to add.\n   * @return A new body with the appended value.\n   */\n  append(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 'a'\n    });\n  }\n  /**\n   * Constructs a new body with appended values for the given parameter name.\n   * @param params parameters and values\n   * @return A new body with the new value.\n   */\n  appendAll(params) {\n    const updates = [];\n    Object.keys(params).forEach(param => {\n      const value = params[param];\n      if (Array.isArray(value)) {\n        value.forEach(_value => {\n          updates.push({\n            param,\n            value: _value,\n            op: 'a'\n          });\n        });\n      } else {\n        updates.push({\n          param,\n          value: value,\n          op: 'a'\n        });\n      }\n    });\n    return this.clone(updates);\n  }\n  /**\n   * Replaces the value for a parameter.\n   * @param param The parameter name.\n   * @param value The new value.\n   * @return A new body with the new value.\n   */\n  set(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 's'\n    });\n  }\n  /**\n   * Removes a given value or all values from a parameter.\n   * @param param The parameter name.\n   * @param value The value to remove, if provided.\n   * @return A new body with the given value removed, or with all values\n   * removed if no value is specified.\n   */\n  delete(param, value) {\n    return this.clone({\n      param,\n      value,\n      op: 'd'\n    });\n  }\n  /**\n   * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n   * separated by `&`s.\n   */\n  toString() {\n    this.init();\n    return this.keys().map(key => {\n      const eKey = this.encoder.encodeKey(key);\n      // `a: ['1']` produces `'a=1'`\n      // `b: []` produces `''`\n      // `c: ['1', '2']` produces `'c=1&c=2'`\n      return this.map.get(key).map(value => eKey + '=' + this.encoder.encodeValue(value)).join('&');\n    })\n    // filter out empty values because `b: []` produces `''`\n    // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n    .filter(param => param !== '').join('&');\n  }\n  clone(update) {\n    const clone = new HttpParams({\n      encoder: this.encoder\n    });\n    clone.cloneFrom = this.cloneFrom || this;\n    clone.updates = (this.updates || []).concat(update);\n    return clone;\n  }\n  init() {\n    if (this.map === null) {\n      this.map = new Map();\n    }\n    if (this.cloneFrom !== null) {\n      this.cloneFrom.init();\n      this.cloneFrom.keys().forEach(key => this.map.set(key, this.cloneFrom.map.get(key)));\n      this.updates.forEach(update => {\n        switch (update.op) {\n          case 'a':\n          case 's':\n            const base = (update.op === 'a' ? this.map.get(update.param) : undefined) || [];\n            base.push(valueToString(update.value));\n            this.map.set(update.param, base);\n            break;\n          case 'd':\n            if (update.value !== undefined) {\n              let base = this.map.get(update.param) || [];\n              const idx = base.indexOf(valueToString(update.value));\n              if (idx !== -1) {\n                base.splice(idx, 1);\n              }\n              if (base.length > 0) {\n                this.map.set(update.param, base);\n              } else {\n                this.map.delete(update.param);\n              }\n            } else {\n              this.map.delete(update.param);\n              break;\n            }\n        }\n      });\n      this.cloneFrom = this.updates = null;\n    }\n  }\n}\n\n/**\n * A token used to manipulate and access values stored in `HttpContext`.\n *\n * @publicApi\n */\nclass HttpContextToken {\n  defaultValue;\n  constructor(defaultValue) {\n    this.defaultValue = defaultValue;\n  }\n}\n/**\n * Http context stores arbitrary user defined values and ensures type safety without\n * actually knowing the types. It is backed by a `Map` and guarantees that keys do not clash.\n *\n * This context is mutable and is shared between cloned requests unless explicitly specified.\n *\n * @usageNotes\n *\n * ### Usage Example\n *\n * ```ts\n * // inside cache.interceptors.ts\n * export const IS_CACHE_ENABLED = new HttpContextToken<boolean>(() => false);\n *\n * export class CacheInterceptor implements HttpInterceptor {\n *\n *   intercept(req: HttpRequest<any>, delegate: HttpHandler): Observable<HttpEvent<any>> {\n *     if (req.context.get(IS_CACHE_ENABLED) === true) {\n *       return ...;\n *     }\n *     return delegate.handle(req);\n *   }\n * }\n *\n * // inside a service\n *\n * this.httpClient.get('/api/weather', {\n *   context: new HttpContext().set(IS_CACHE_ENABLED, true)\n * }).subscribe(...);\n * ```\n *\n * @publicApi\n */\nclass HttpContext {\n  map = /*#__PURE__*/new Map();\n  /**\n   * Store a value in the context. If a value is already present it will be overwritten.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   * @param value The value to store.\n   *\n   * @returns A reference to itself for easy chaining.\n   */\n  set(token, value) {\n    this.map.set(token, value);\n    return this;\n  }\n  /**\n   * Retrieve the value associated with the given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns The stored value or default if one is defined.\n   */\n  get(token) {\n    if (!this.map.has(token)) {\n      this.map.set(token, token.defaultValue());\n    }\n    return this.map.get(token);\n  }\n  /**\n   * Delete the value associated with the given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns A reference to itself for easy chaining.\n   */\n  delete(token) {\n    this.map.delete(token);\n    return this;\n  }\n  /**\n   * Checks for existence of a given token.\n   *\n   * @param token The reference to an instance of `HttpContextToken`.\n   *\n   * @returns True if the token exists, false otherwise.\n   */\n  has(token) {\n    return this.map.has(token);\n  }\n  /**\n   * @returns a list of tokens currently stored in the context.\n   */\n  keys() {\n    return this.map.keys();\n  }\n}\n\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n  switch (method) {\n    case 'DELETE':\n    case 'GET':\n    case 'HEAD':\n    case 'OPTIONS':\n    case 'JSONP':\n      return false;\n    default:\n      return true;\n  }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n  return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n  return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n  return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * Safely assert whether the given value is a URLSearchParams instance.\n *\n * In some execution environments URLSearchParams is not defined.\n */\nfunction isUrlSearchParams(value) {\n  return typeof URLSearchParams !== 'undefined' && value instanceof URLSearchParams;\n}\n/**\n * `Content-Type` is an HTTP header used to indicate the media type\n * (also known as MIME type) of the resource being sent to the client\n * or received from the server.\n */\nconst CONTENT_TYPE_HEADER = 'Content-Type';\n/**\n * The `Accept` header is an HTTP request header that indicates the media types\n * (or content types) the client is willing to receive from the server.\n */\nconst ACCEPT_HEADER = 'Accept';\n/**\n * `X-Request-URL` is a custom HTTP header used in older browser versions,\n * including Firefox (< 32), Chrome (< 37), Safari (< 8), and Internet Explorer,\n * to include the full URL of the request in cross-origin requests.\n */\nconst X_REQUEST_URL_HEADER = 'X-Request-URL';\n/**\n * `text/plain` is a content type used to indicate that the content being\n * sent is plain text with no special formatting or structured data\n * like HTML, XML, or JSON.\n */\nconst TEXT_CONTENT_TYPE = 'text/plain';\n/**\n * `application/json` is a content type used to indicate that the content\n * being sent is in the JSON format.\n */\nconst JSON_CONTENT_TYPE = 'application/json';\n/**\n * `application/json, text/plain, *\\/*` is a content negotiation string often seen in the\n * Accept header of HTTP requests. It indicates the types of content the client is willing\n * to accept from the server, with a preference for `application/json` and `text/plain`,\n * but also accepting any other type (*\\/*).\n */\nconst ACCEPT_HEADER_VALUE = `${JSON_CONTENT_TYPE}, ${TEXT_CONTENT_TYPE}, */*`;\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nclass HttpRequest {\n  url;\n  /**\n   * The request body, or `null` if one isn't set.\n   *\n   * Bodies are not enforced to be immutable, as they can include a reference to any\n   * user-defined data type. However, interceptors should take care to preserve\n   * idempotence by treating them as such.\n   */\n  body = null;\n  /**\n   * Outgoing headers for this request.\n   */\n  // TODO(issue/24571): remove '!'.\n  headers;\n  /**\n   * Shared and mutable context that can be used by interceptors\n   */\n  context;\n  /**\n   * Whether this request should be made in a way that exposes progress events.\n   *\n   * Progress events are expensive (change detection runs on each event) and so\n   * they should only be requested if the consumer intends to monitor them.\n   *\n   * Note: The `FetchBackend` doesn't support progress report on uploads.\n   */\n  reportProgress = false;\n  /**\n   * Whether this request should be sent with outgoing credentials (cookies).\n   */\n  withCredentials = false;\n  /**\n   * The expected response type of the server.\n   *\n   * This is used to parse the response appropriately before returning it to\n   * the requestee.\n   */\n  responseType = 'json';\n  /**\n   * The outgoing HTTP request method.\n   */\n  method;\n  /**\n   * Outgoing URL parameters.\n   *\n   * To pass a string representation of HTTP parameters in the URL-query-string format,\n   * the `HttpParamsOptions`' `fromString` may be used. For example:\n   *\n   * ```ts\n   * new HttpParams({fromString: 'angular=awesome'})\n   * ```\n   */\n  // TODO(issue/24571): remove '!'.\n  params;\n  /**\n   * The outgoing URL with all URL parameters set.\n   */\n  urlWithParams;\n  /**\n   * The HttpTransferCache option for the request\n   */\n  transferCache;\n  constructor(method, url, third, fourth) {\n    this.url = url;\n    this.method = method.toUpperCase();\n    // Next, need to figure out which argument holds the HttpRequestInit\n    // options, if any.\n    let options;\n    // Check whether a body argument is expected. The only valid way to omit\n    // the body argument is to use a known no-body method like GET.\n    if (mightHaveBody(this.method) || !!fourth) {\n      // Body is the third argument, options are the fourth.\n      this.body = third !== undefined ? third : null;\n      options = fourth;\n    } else {\n      // No body required, options are the third argument. The body stays null.\n      options = third;\n    }\n    // If options have been passed, interpret them.\n    if (options) {\n      // Normalize reportProgress and withCredentials.\n      this.reportProgress = !!options.reportProgress;\n      this.withCredentials = !!options.withCredentials;\n      // Override default response type of 'json' if one is provided.\n      if (!!options.responseType) {\n        this.responseType = options.responseType;\n      }\n      // Override headers if they're provided.\n      if (!!options.headers) {\n        this.headers = options.headers;\n      }\n      if (!!options.context) {\n        this.context = options.context;\n      }\n      if (!!options.params) {\n        this.params = options.params;\n      }\n      // We do want to assign transferCache even if it's falsy (false is valid value)\n      this.transferCache = options.transferCache;\n    }\n    // If no headers have been passed in, construct a new HttpHeaders instance.\n    this.headers ??= new HttpHeaders();\n    // If no context have been passed in, construct a new HttpContext instance.\n    this.context ??= new HttpContext();\n    // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n    if (!this.params) {\n      this.params = new HttpParams();\n      this.urlWithParams = url;\n    } else {\n      // Encode the parameters to a string in preparation for inclusion in the URL.\n      const params = this.params.toString();\n      if (params.length === 0) {\n        // No parameters, the visible URL is just the URL given at creation time.\n        this.urlWithParams = url;\n      } else {\n        // Does the URL already have query parameters? Look for '?'.\n        const qIdx = url.indexOf('?');\n        // There are 3 cases to handle:\n        // 1) No existing parameters -> append '?' followed by params.\n        // 2) '?' exists and is followed by existing query string ->\n        //    append '&' followed by params.\n        // 3) '?' exists at the end of the url -> append params directly.\n        // This basically amounts to determining the character, if any, with\n        // which to join the URL and parameters.\n        const sep = qIdx === -1 ? '?' : qIdx < url.length - 1 ? '&' : '';\n        this.urlWithParams = url + sep + params;\n      }\n    }\n  }\n  /**\n   * Transform the free-form body into a serialized format suitable for\n   * transmission to the server.\n   */\n  serializeBody() {\n    // If no body is present, no need to serialize it.\n    if (this.body === null) {\n      return null;\n    }\n    // Check whether the body is already in a serialized form. If so,\n    // it can just be returned directly.\n    if (typeof this.body === 'string' || isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) || isUrlSearchParams(this.body)) {\n      return this.body;\n    }\n    // Check whether the body is an instance of HttpUrlEncodedParams.\n    if (this.body instanceof HttpParams) {\n      return this.body.toString();\n    }\n    // Check whether the body is an object or array, and serialize with JSON if so.\n    if (typeof this.body === 'object' || typeof this.body === 'boolean' || Array.isArray(this.body)) {\n      return JSON.stringify(this.body);\n    }\n    // Fall back on toString() for everything else.\n    return this.body.toString();\n  }\n  /**\n   * Examine the body and attempt to infer an appropriate MIME type\n   * for it.\n   *\n   * If no such type can be inferred, this method will return `null`.\n   */\n  detectContentTypeHeader() {\n    // An empty body has no content type.\n    if (this.body === null) {\n      return null;\n    }\n    // FormData bodies rely on the browser's content type assignment.\n    if (isFormData(this.body)) {\n      return null;\n    }\n    // Blobs usually have their own content type. If it doesn't, then\n    // no type can be inferred.\n    if (isBlob(this.body)) {\n      return this.body.type || null;\n    }\n    // Array buffers have unknown contents and thus no type can be inferred.\n    if (isArrayBuffer(this.body)) {\n      return null;\n    }\n    // Technically, strings could be a form of JSON data, but it's safe enough\n    // to assume they're plain strings.\n    if (typeof this.body === 'string') {\n      return TEXT_CONTENT_TYPE;\n    }\n    // `HttpUrlEncodedParams` has its own content-type.\n    if (this.body instanceof HttpParams) {\n      return 'application/x-www-form-urlencoded;charset=UTF-8';\n    }\n    // Arrays, objects, boolean and numbers will be encoded as JSON.\n    if (typeof this.body === 'object' || typeof this.body === 'number' || typeof this.body === 'boolean') {\n      return JSON_CONTENT_TYPE;\n    }\n    // No type could be inferred.\n    return null;\n  }\n  clone(update = {}) {\n    // For method, url, and responseType, take the current value unless\n    // it is overridden in the update hash.\n    const method = update.method || this.method;\n    const url = update.url || this.url;\n    const responseType = update.responseType || this.responseType;\n    // Carefully handle the transferCache to differentiate between\n    // `false` and `undefined` in the update args.\n    const transferCache = update.transferCache ?? this.transferCache;\n    // The body is somewhat special - a `null` value in update.body means\n    // whatever current body is present is being overridden with an empty\n    // body, whereas an `undefined` value in update.body implies no\n    // override.\n    const body = update.body !== undefined ? update.body : this.body;\n    // Carefully handle the boolean options to differentiate between\n    // `false` and `undefined` in the update args.\n    const withCredentials = update.withCredentials ?? this.withCredentials;\n    const reportProgress = update.reportProgress ?? this.reportProgress;\n    // Headers and params may be appended to if `setHeaders` or\n    // `setParams` are used.\n    let headers = update.headers || this.headers;\n    let params = update.params || this.params;\n    // Pass on context if needed\n    const context = update.context ?? this.context;\n    // Check whether the caller has asked to add headers.\n    if (update.setHeaders !== undefined) {\n      // Set every requested header.\n      headers = Object.keys(update.setHeaders).reduce((headers, name) => headers.set(name, update.setHeaders[name]), headers);\n    }\n    // Check whether the caller has asked to set params.\n    if (update.setParams) {\n      // Set every requested param.\n      params = Object.keys(update.setParams).reduce((params, param) => params.set(param, update.setParams[param]), params);\n    }\n    // Finally, construct the new HttpRequest using the pieces from above.\n    return new HttpRequest(method, url, body, {\n      params,\n      headers,\n      context,\n      reportProgress,\n      responseType,\n      withCredentials,\n      transferCache\n    });\n  }\n}\n\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType = /*#__PURE__*/function (HttpEventType) {\n  /**\n   * The request was sent out over the wire.\n   */\n  HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n  /**\n   * An upload progress event was received.\n   *\n   * Note: The `FetchBackend` doesn't support progress report on uploads.\n   */\n  HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n  /**\n   * The response status code and headers were received.\n   */\n  HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n  /**\n   * A download progress event was received.\n   */\n  HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n  /**\n   * The full response including the body was received.\n   */\n  HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n  /**\n   * A custom event from an interceptor or a backend.\n   */\n  HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n  return HttpEventType;\n}(HttpEventType || {});\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nclass HttpResponseBase {\n  /**\n   * All response headers.\n   */\n  headers;\n  /**\n   * Response status code.\n   */\n  status;\n  /**\n   * Textual description of response status code, defaults to OK.\n   *\n   * Do not depend on this.\n   */\n  statusText;\n  /**\n   * URL of the resource retrieved, or null if not available.\n   */\n  url;\n  /**\n   * Whether the status code falls in the 2xx range.\n   */\n  ok;\n  /**\n   * Type of the response, narrowed to either the full response or the header.\n   */\n  // TODO(issue/24571): remove '!'.\n  type;\n  /**\n   * Super-constructor for all responses.\n   *\n   * The single parameter accepted is an initialization hash. Any properties\n   * of the response passed there will override the default values.\n   */\n  constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n    // If the hash has values passed, use them to initialize the response.\n    // Otherwise use the default values.\n    this.headers = init.headers || new HttpHeaders();\n    this.status = init.status !== undefined ? init.status : defaultStatus;\n    this.statusText = init.statusText || defaultStatusText;\n    this.url = init.url || null;\n    // Cache the ok value to avoid defining a getter.\n    this.ok = this.status >= 200 && this.status < 300;\n  }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n  /**\n   * Create a new `HttpHeaderResponse` with the given parameters.\n   */\n  constructor(init = {}) {\n    super(init);\n  }\n  type = HttpEventType.ResponseHeader;\n  /**\n   * Copy this `HttpHeaderResponse`, overriding its contents with the\n   * given parameter hash.\n   */\n  clone(update = {}) {\n    // Perform a straightforward initialization of the new HttpHeaderResponse,\n    // overriding the current parameters with new ones if given.\n    return new HttpHeaderResponse({\n      headers: update.headers || this.headers,\n      status: update.status !== undefined ? update.status : this.status,\n      statusText: update.statusText || this.statusText,\n      url: update.url || this.url || undefined\n    });\n  }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nclass HttpResponse extends HttpResponseBase {\n  /**\n   * The response body, or `null` if one was not returned.\n   */\n  body;\n  /**\n   * Construct a new `HttpResponse`.\n   */\n  constructor(init = {}) {\n    super(init);\n    this.body = init.body !== undefined ? init.body : null;\n  }\n  type = HttpEventType.Response;\n  clone(update = {}) {\n    return new HttpResponse({\n      body: update.body !== undefined ? update.body : this.body,\n      headers: update.headers || this.headers,\n      status: update.status !== undefined ? update.status : this.status,\n      statusText: update.statusText || this.statusText,\n      url: update.url || this.url || undefined\n    });\n  }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n  name = 'HttpErrorResponse';\n  message;\n  error;\n  /**\n   * Errors are never okay, even when the status code is in the 2xx success range.\n   */\n  ok = false;\n  constructor(init) {\n    // Initialize with a default status of 0 / Unknown Error.\n    super(init, 0, 'Unknown Error');\n    // If the response was successful, then this was a parse error. Otherwise, it was\n    // a protocol-level failure of some sort. Either the request failed in transit\n    // or the server returned an unsuccessful status code.\n    if (this.status >= 200 && this.status < 300) {\n      this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n    } else {\n      this.message = `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n    }\n    this.error = init.error || null;\n  }\n}\n/**\n * We use these constant to prevent pulling the whole HttpStatusCode enum\n * Those are the only ones referenced directly by the framework\n */\nconst HTTP_STATUS_CODE_OK = 200;\nconst HTTP_STATUS_CODE_NO_CONTENT = 204;\n/**\n * Http status codes.\n * As per https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml\n * @publicApi\n */\nvar HttpStatusCode = /*#__PURE__*/function (HttpStatusCode) {\n  HttpStatusCode[HttpStatusCode[\"Continue\"] = 100] = \"Continue\";\n  HttpStatusCode[HttpStatusCode[\"SwitchingProtocols\"] = 101] = \"SwitchingProtocols\";\n  HttpStatusCode[HttpStatusCode[\"Processing\"] = 102] = \"Processing\";\n  HttpStatusCode[HttpStatusCode[\"EarlyHints\"] = 103] = \"EarlyHints\";\n  HttpStatusCode[HttpStatusCode[\"Ok\"] = 200] = \"Ok\";\n  HttpStatusCode[HttpStatusCode[\"Created\"] = 201] = \"Created\";\n  HttpStatusCode[HttpStatusCode[\"Accepted\"] = 202] = \"Accepted\";\n  HttpStatusCode[HttpStatusCode[\"NonAuthoritativeInformation\"] = 203] = \"NonAuthoritativeInformation\";\n  HttpStatusCode[HttpStatusCode[\"NoContent\"] = 204] = \"NoContent\";\n  HttpStatusCode[HttpStatusCode[\"ResetContent\"] = 205] = \"ResetContent\";\n  HttpStatusCode[HttpStatusCode[\"PartialContent\"] = 206] = \"PartialContent\";\n  HttpStatusCode[HttpStatusCode[\"MultiStatus\"] = 207] = \"MultiStatus\";\n  HttpStatusCode[HttpStatusCode[\"AlreadyReported\"] = 208] = \"AlreadyReported\";\n  HttpStatusCode[HttpStatusCode[\"ImUsed\"] = 226] = \"ImUsed\";\n  HttpStatusCode[HttpStatusCode[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n  HttpStatusCode[HttpStatusCode[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n  HttpStatusCode[HttpStatusCode[\"Found\"] = 302] = \"Found\";\n  HttpStatusCode[HttpStatusCode[\"SeeOther\"] = 303] = \"SeeOther\";\n  HttpStatusCode[HttpStatusCode[\"NotModified\"] = 304] = \"NotModified\";\n  HttpStatusCode[HttpStatusCode[\"UseProxy\"] = 305] = \"UseProxy\";\n  HttpStatusCode[HttpStatusCode[\"Unused\"] = 306] = \"Unused\";\n  HttpStatusCode[HttpStatusCode[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n  HttpStatusCode[HttpStatusCode[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n  HttpStatusCode[HttpStatusCode[\"BadRequest\"] = 400] = \"BadRequest\";\n  HttpStatusCode[HttpStatusCode[\"Unauthorized\"] = 401] = \"Unauthorized\";\n  HttpStatusCode[HttpStatusCode[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n  HttpStatusCode[HttpStatusCode[\"Forbidden\"] = 403] = \"Forbidden\";\n  HttpStatusCode[HttpStatusCode[\"NotFound\"] = 404] = \"NotFound\";\n  HttpStatusCode[HttpStatusCode[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n  HttpStatusCode[HttpStatusCode[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n  HttpStatusCode[HttpStatusCode[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n  HttpStatusCode[HttpStatusCode[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n  HttpStatusCode[HttpStatusCode[\"Conflict\"] = 409] = \"Conflict\";\n  HttpStatusCode[HttpStatusCode[\"Gone\"] = 410] = \"Gone\";\n  HttpStatusCode[HttpStatusCode[\"LengthRequired\"] = 411] = \"LengthRequired\";\n  HttpStatusCode[HttpStatusCode[\"PreconditionFailed\"] = 412] = \"PreconditionFailed\";\n  HttpStatusCode[HttpStatusCode[\"PayloadTooLarge\"] = 413] = \"PayloadTooLarge\";\n  HttpStatusCode[HttpStatusCode[\"UriTooLong\"] = 414] = \"UriTooLong\";\n  HttpStatusCode[HttpStatusCode[\"UnsupportedMediaType\"] = 415] = \"UnsupportedMediaType\";\n  HttpStatusCode[HttpStatusCode[\"RangeNotSatisfiable\"] = 416] = \"RangeNotSatisfiable\";\n  HttpStatusCode[HttpStatusCode[\"ExpectationFailed\"] = 417] = \"ExpectationFailed\";\n  HttpStatusCode[HttpStatusCode[\"ImATeapot\"] = 418] = \"ImATeapot\";\n  HttpStatusCode[HttpStatusCode[\"MisdirectedRequest\"] = 421] = \"MisdirectedRequest\";\n  HttpStatusCode[HttpStatusCode[\"UnprocessableEntity\"] = 422] = \"UnprocessableEntity\";\n  HttpStatusCode[HttpStatusCode[\"Locked\"] = 423] = \"Locked\";\n  HttpStatusCode[HttpStatusCode[\"FailedDependency\"] = 424] = \"FailedDependency\";\n  HttpStatusCode[HttpStatusCode[\"TooEarly\"] = 425] = \"TooEarly\";\n  HttpStatusCode[HttpStatusCode[\"UpgradeRequired\"] = 426] = \"UpgradeRequired\";\n  HttpStatusCode[HttpStatusCode[\"PreconditionRequired\"] = 428] = \"PreconditionRequired\";\n  HttpStatusCode[HttpStatusCode[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n  HttpStatusCode[HttpStatusCode[\"RequestHeaderFieldsTooLarge\"] = 431] = \"RequestHeaderFieldsTooLarge\";\n  HttpStatusCode[HttpStatusCode[\"UnavailableForLegalReasons\"] = 451] = \"UnavailableForLegalReasons\";\n  HttpStatusCode[HttpStatusCode[\"InternalServerError\"] = 500] = \"InternalServerError\";\n  HttpStatusCode[HttpStatusCode[\"NotImplemented\"] = 501] = \"NotImplemented\";\n  HttpStatusCode[HttpStatusCode[\"BadGateway\"] = 502] = \"BadGateway\";\n  HttpStatusCode[HttpStatusCode[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n  HttpStatusCode[HttpStatusCode[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n  HttpStatusCode[HttpStatusCode[\"HttpVersionNotSupported\"] = 505] = \"HttpVersionNotSupported\";\n  HttpStatusCode[HttpStatusCode[\"VariantAlsoNegotiates\"] = 506] = \"VariantAlsoNegotiates\";\n  HttpStatusCode[HttpStatusCode[\"InsufficientStorage\"] = 507] = \"InsufficientStorage\";\n  HttpStatusCode[HttpStatusCode[\"LoopDetected\"] = 508] = \"LoopDetected\";\n  HttpStatusCode[HttpStatusCode[\"NotExtended\"] = 510] = \"NotExtended\";\n  HttpStatusCode[HttpStatusCode[\"NetworkAuthenticationRequired\"] = 511] = \"NetworkAuthenticationRequired\";\n  return HttpStatusCode;\n}(HttpStatusCode || {});\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n */\nfunction addBody(options, body) {\n  return {\n    body,\n    headers: options.headers,\n    context: options.context,\n    observe: options.observe,\n    params: options.params,\n    reportProgress: options.reportProgress,\n    responseType: options.responseType,\n    withCredentials: options.withCredentials,\n    transferCache: options.transferCache\n  };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n\n * TODO(adev): review\n * @usageNotes\n *\n * ### HTTP Request Example\n *\n * ```ts\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n *\n * Alternatively, the parameter string can be used without invoking HttpParams\n * by directly joining to the URL.\n * ```ts\n * this.httpClient.request('GET', this.heroesUrl + '?' + 'name=term', {responseType:'json'});\n * ```\n *\n *\n * ### JSONP Example\n * ```ts\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```ts\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n * @see [HTTP Request](api/common/http/HttpRequest)\n *\n * @publicApi\n */\nlet HttpClient = /*#__PURE__*/(() => {\n  class HttpClient {\n    handler;\n    constructor(handler) {\n      this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     */\n    request(first, url, options = {}) {\n      let req;\n      // First, check whether the primary argument is an instance of `HttpRequest`.\n      if (first instanceof HttpRequest) {\n        // It is. The other arguments must be undefined (per the signatures) and can be\n        // ignored.\n        req = first;\n      } else {\n        // It's a string, so it represents a URL. Construct a request based on it,\n        // and incorporate the remaining arguments (assuming `GET` unless a method is\n        // provided.\n        // Figure out the headers.\n        let headers = undefined;\n        if (options.headers instanceof HttpHeaders) {\n          headers = options.headers;\n        } else {\n          headers = new HttpHeaders(options.headers);\n        }\n        // Sort out parameters.\n        let params = undefined;\n        if (!!options.params) {\n          if (options.params instanceof HttpParams) {\n            params = options.params;\n          } else {\n            params = new HttpParams({\n              fromObject: options.params\n            });\n          }\n        }\n        // Construct the request.\n        req = new HttpRequest(first, url, options.body !== undefined ? options.body : null, {\n          headers,\n          context: options.context,\n          params,\n          reportProgress: options.reportProgress,\n          // By default, JSON is assumed to be returned for all calls.\n          responseType: options.responseType || 'json',\n          withCredentials: options.withCredentials,\n          transferCache: options.transferCache\n        });\n      }\n      // Start with an Observable.of() the initial request, and run the handler (which\n      // includes all interceptors) inside a concatMap(). This way, the handler runs\n      // inside an Observable chain, which causes interceptors to be re-run on every\n      // subscription (this also makes retries re-run the handler, including interceptors).\n      const events$ = of(req).pipe(concatMap(req => this.handler.handle(req)));\n      // If coming via the API signature which accepts a previously constructed HttpRequest,\n      // the only option is to get the event stream. Otherwise, return the event stream if\n      // that is what was requested.\n      if (first instanceof HttpRequest || options.observe === 'events') {\n        return events$;\n      }\n      // The requested stream contains either the full response or the body. In either\n      // case, the first step is to filter the event stream to extract a stream of\n      // responses(s).\n      const res$ = events$.pipe(filter(event => event instanceof HttpResponse));\n      // Decide which stream to return.\n      switch (options.observe || 'body') {\n        case 'body':\n          // The requested stream is the body. Map the response stream to the response\n          // body. This could be done more simply, but a misbehaving interceptor might\n          // transform the response body into a different format and ignore the requested\n          // responseType. Guard against this by validating that the response is of the\n          // requested type.\n          switch (req.responseType) {\n            case 'arraybuffer':\n              return res$.pipe(map(res => {\n                // Validate that the body is an ArrayBuffer.\n                if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                  throw new ɵRuntimeError(2806 /* RuntimeErrorCode.RESPONSE_IS_NOT_AN_ARRAY_BUFFER */, ngDevMode && 'Response is not an ArrayBuffer.');\n                }\n                return res.body;\n              }));\n            case 'blob':\n              return res$.pipe(map(res => {\n                // Validate that the body is a Blob.\n                if (res.body !== null && !(res.body instanceof Blob)) {\n                  throw new ɵRuntimeError(2807 /* RuntimeErrorCode.RESPONSE_IS_NOT_A_BLOB */, ngDevMode && 'Response is not a Blob.');\n                }\n                return res.body;\n              }));\n            case 'text':\n              return res$.pipe(map(res => {\n                // Validate that the body is a string.\n                if (res.body !== null && typeof res.body !== 'string') {\n                  throw new ɵRuntimeError(2808 /* RuntimeErrorCode.RESPONSE_IS_NOT_A_STRING */, ngDevMode && 'Response is not a string.');\n                }\n                return res.body;\n              }));\n            case 'json':\n            default:\n              // No validation needed for JSON responses, as they can be of any type.\n              return res$.pipe(map(res => res.body));\n          }\n        case 'response':\n          // The response stream was requested directly, so return it.\n          return res$;\n        default:\n          // Guard against new future observe types being added.\n          throw new ɵRuntimeError(2809 /* RuntimeErrorCode.UNHANDLED_OBSERVE_TYPE */, ngDevMode && `Unreachable: unhandled observe type ${options.observe}}`);\n      }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param url     The endpoint URL.\n     * @param options The HTTP options to send with the request.\n     *\n     */\n    delete(url, options = {}) {\n      return this.request('DELETE', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    get(url, options = {}) {\n      return this.request('GET', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     */\n    head(url, options = {}) {\n      return this.request('HEAD', url, options);\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @param url The resource URL.\n     * @param callbackParam The callback function name.\n     *\n     */\n    jsonp(url, callbackParam) {\n      return this.request('JSONP', url, {\n        params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n        observe: 'body',\n        responseType: 'json'\n      });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilities of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     */\n    options(url, options = {}) {\n      return this.request('OPTIONS', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    patch(url, body, options = {}) {\n      return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     */\n    post(url, body, options = {}) {\n      return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     */\n    put(url, body, options = {}) {\n      return this.request('PUT', url, addBody(options, body));\n    }\n    static ɵfac = function HttpClient_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HttpClient)(i0.ɵɵinject(HttpHandler));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HttpClient,\n      factory: HttpClient.ɵfac\n    });\n  }\n  return HttpClient;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst XSSI_PREFIX$1 = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * response url or the X-Request-URL header.\n */\nfunction getResponseUrl$1(response) {\n  if (response.url) {\n    return response.url;\n  }\n  // stored as lowercase in the map\n  const xRequestUrl = X_REQUEST_URL_HEADER.toLocaleLowerCase();\n  return response.headers.get(xRequestUrl);\n}\n/**\n * An internal injection token to reference `FetchBackend` implementation\n * in a tree-shakable way.\n */\nconst FETCH_BACKEND = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'FETCH_BACKEND' : '');\n/**\n * Uses `fetch` to send requests to a backend server.\n *\n * This `FetchBackend` requires the support of the\n * [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) which is available on all\n * supported browsers and on Node.js v18 or later.\n *\n * @see {@link HttpHandler}\n *\n * @publicApi\n */\nlet FetchBackend = /*#__PURE__*/(() => {\n  class FetchBackend {\n    // We use an arrow function to always reference the current global implementation of `fetch`.\n    // This is helpful for cases when the global `fetch` implementation is modified by external code,\n    // see https://github.com/angular/angular/issues/57527.\n    fetchImpl = inject(FetchFactory, {\n      optional: true\n    })?.fetch ?? ((...args) => globalThis.fetch(...args));\n    ngZone = inject(NgZone);\n    handle(request) {\n      return new Observable(observer => {\n        const aborter = new AbortController();\n        this.doRequest(request, aborter.signal, observer).then(noop, error => observer.error(new HttpErrorResponse({\n          error\n        })));\n        return () => aborter.abort();\n      });\n    }\n    async doRequest(request, signal, observer) {\n      const init = this.createRequestInit(request);\n      let response;\n      try {\n        // Run fetch outside of Angular zone.\n        // This is due to Node.js fetch implementation (Undici) which uses a number of setTimeouts to check if\n        // the response should eventually timeout which causes extra CD cycles every 500ms\n        const fetchPromise = this.ngZone.runOutsideAngular(() => this.fetchImpl(request.urlWithParams, {\n          signal,\n          ...init\n        }));\n        // Make sure Zone.js doesn't trigger false-positive unhandled promise\n        // error in case the Promise is rejected synchronously. See function\n        // description for additional information.\n        silenceSuperfluousUnhandledPromiseRejection(fetchPromise);\n        // Send the `Sent` event before awaiting the response.\n        observer.next({\n          type: HttpEventType.Sent\n        });\n        response = await fetchPromise;\n      } catch (error) {\n        observer.error(new HttpErrorResponse({\n          error,\n          status: error.status ?? 0,\n          statusText: error.statusText,\n          url: request.urlWithParams,\n          headers: error.headers\n        }));\n        return;\n      }\n      const headers = new HttpHeaders(response.headers);\n      const statusText = response.statusText;\n      const url = getResponseUrl$1(response) ?? request.urlWithParams;\n      let status = response.status;\n      let body = null;\n      if (request.reportProgress) {\n        observer.next(new HttpHeaderResponse({\n          headers,\n          status,\n          statusText,\n          url\n        }));\n      }\n      if (response.body) {\n        // Read Progress\n        const contentLength = response.headers.get('content-length');\n        const chunks = [];\n        const reader = response.body.getReader();\n        let receivedLength = 0;\n        let decoder;\n        let partialText;\n        // We have to check whether the Zone is defined in the global scope because this may be called\n        // when the zone is nooped.\n        const reqZone = typeof Zone !== 'undefined' && Zone.current;\n        // Perform response processing outside of Angular zone to\n        // ensure no excessive change detection runs are executed\n        // Here calling the async ReadableStreamDefaultReader.read() is responsible for triggering CD\n        await this.ngZone.runOutsideAngular(async () => {\n          while (true) {\n            const {\n              done,\n              value\n            } = await reader.read();\n            if (done) {\n              break;\n            }\n            chunks.push(value);\n            receivedLength += value.length;\n            if (request.reportProgress) {\n              partialText = request.responseType === 'text' ? (partialText ?? '') + (decoder ??= new TextDecoder()).decode(value, {\n                stream: true\n              }) : undefined;\n              const reportProgress = () => observer.next({\n                type: HttpEventType.DownloadProgress,\n                total: contentLength ? +contentLength : undefined,\n                loaded: receivedLength,\n                partialText\n              });\n              reqZone ? reqZone.run(reportProgress) : reportProgress();\n            }\n          }\n        });\n        // Combine all chunks.\n        const chunksAll = this.concatChunks(chunks, receivedLength);\n        try {\n          const contentType = response.headers.get(CONTENT_TYPE_HEADER) ?? '';\n          body = this.parseBody(request, chunksAll, contentType);\n        } catch (error) {\n          // Body loading or parsing failed\n          observer.error(new HttpErrorResponse({\n            error,\n            headers: new HttpHeaders(response.headers),\n            status: response.status,\n            statusText: response.statusText,\n            url: getResponseUrl$1(response) ?? request.urlWithParams\n          }));\n          return;\n        }\n      }\n      // Same behavior as the XhrBackend\n      if (status === 0) {\n        status = body ? HTTP_STATUS_CODE_OK : 0;\n      }\n      // ok determines whether the response will be transmitted on the event or\n      // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n      // but a successful status code can still result in an error if the user\n      // asked for JSON data and the body cannot be parsed as such.\n      const ok = status >= 200 && status < 300;\n      if (ok) {\n        observer.next(new HttpResponse({\n          body,\n          headers,\n          status,\n          statusText,\n          url\n        }));\n        // The full body has been received and delivered, no further events\n        // are possible. This request is complete.\n        observer.complete();\n      } else {\n        observer.error(new HttpErrorResponse({\n          error: body,\n          headers,\n          status,\n          statusText,\n          url\n        }));\n      }\n    }\n    parseBody(request, binContent, contentType) {\n      switch (request.responseType) {\n        case 'json':\n          // stripping the XSSI when present\n          const text = new TextDecoder().decode(binContent).replace(XSSI_PREFIX$1, '');\n          return text === '' ? null : JSON.parse(text);\n        case 'text':\n          return new TextDecoder().decode(binContent);\n        case 'blob':\n          return new Blob([binContent], {\n            type: contentType\n          });\n        case 'arraybuffer':\n          return binContent.buffer;\n      }\n    }\n    createRequestInit(req) {\n      // We could share some of this logic with the XhrBackend\n      const headers = {};\n      const credentials = req.withCredentials ? 'include' : undefined;\n      // Setting all the requested headers.\n      req.headers.forEach((name, values) => headers[name] = values.join(','));\n      // Add an Accept header if one isn't present already.\n      if (!req.headers.has(ACCEPT_HEADER)) {\n        headers[ACCEPT_HEADER] = ACCEPT_HEADER_VALUE;\n      }\n      // Auto-detect the Content-Type header if one isn't present already.\n      if (!req.headers.has(CONTENT_TYPE_HEADER)) {\n        const detectedType = req.detectContentTypeHeader();\n        // Sometimes Content-Type detection fails.\n        if (detectedType !== null) {\n          headers[CONTENT_TYPE_HEADER] = detectedType;\n        }\n      }\n      return {\n        body: req.serializeBody(),\n        method: req.method,\n        headers,\n        credentials\n      };\n    }\n    concatChunks(chunks, totalLength) {\n      const chunksAll = new Uint8Array(totalLength);\n      let position = 0;\n      for (const chunk of chunks) {\n        chunksAll.set(chunk, position);\n        position += chunk.length;\n      }\n      return chunksAll;\n    }\n    static ɵfac = function FetchBackend_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FetchBackend)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FetchBackend,\n      factory: FetchBackend.ɵfac\n    });\n  }\n  return FetchBackend;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Abstract class to provide a mocked implementation of `fetch()`\n */\nclass FetchFactory {}\nfunction noop() {}\n/**\n * Zone.js treats a rejected promise that has not yet been awaited\n * as an unhandled error. This function adds a noop `.then` to make\n * sure that Zone.js doesn't throw an error if the Promise is rejected\n * synchronously.\n */\nfunction silenceSuperfluousUnhandledPromiseRejection(promise) {\n  promise.then(noop, noop);\n}\nfunction interceptorChainEndFn(req, finalHandlerFn) {\n  return finalHandlerFn(req);\n}\n/**\n * Constructs a `ChainedInterceptorFn` which adapts a legacy `HttpInterceptor` to the\n * `ChainedInterceptorFn` interface.\n */\nfunction adaptLegacyInterceptorToChain(chainTailFn, interceptor) {\n  return (initialRequest, finalHandlerFn) => interceptor.intercept(initialRequest, {\n    handle: downstreamRequest => chainTailFn(downstreamRequest, finalHandlerFn)\n  });\n}\n/**\n * Constructs a `ChainedInterceptorFn` which wraps and invokes a functional interceptor in the given\n * injector.\n */\nfunction chainedInterceptorFn(chainTailFn, interceptorFn, injector) {\n  return (initialRequest, finalHandlerFn) => runInInjectionContext(injector, () => interceptorFn(initialRequest, downstreamRequest => chainTailFn(downstreamRequest, finalHandlerFn)));\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * @publicApi\n */\nconst HTTP_INTERCEPTORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'HTTP_INTERCEPTORS' : '');\n/**\n * A multi-provided token of `HttpInterceptorFn`s.\n */\nconst HTTP_INTERCEPTOR_FNS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'HTTP_INTERCEPTOR_FNS' : '');\n/**\n * A multi-provided token of `HttpInterceptorFn`s that are only set in root.\n */\nconst HTTP_ROOT_INTERCEPTOR_FNS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'HTTP_ROOT_INTERCEPTOR_FNS' : '');\n// TODO(atscott): We need a larger discussion about stability and what should contribute to stability.\n// Should the whole interceptor chain contribute to stability or just the backend request #55075?\n// Should HttpClient contribute to stability automatically at all?\nconst REQUESTS_CONTRIBUTE_TO_STABILITY = /*#__PURE__*/new InjectionToken(ngDevMode ? 'REQUESTS_CONTRIBUTE_TO_STABILITY' : '', {\n  providedIn: 'root',\n  factory: () => true\n});\n/**\n * Creates an `HttpInterceptorFn` which lazily initializes an interceptor chain from the legacy\n * class-based interceptors and runs the request through it.\n */\nfunction legacyInterceptorFnFactory() {\n  let chain = null;\n  return (req, handler) => {\n    if (chain === null) {\n      const interceptors = inject(HTTP_INTERCEPTORS, {\n        optional: true\n      }) ?? [];\n      // Note: interceptors are wrapped right-to-left so that final execution order is\n      // left-to-right. That is, if `interceptors` is the array `[a, b, c]`, we want to\n      // produce a chain that is conceptually `c(b(a(end)))`, which we build from the inside\n      // out.\n      chain = interceptors.reduceRight(adaptLegacyInterceptorToChain, interceptorChainEndFn);\n    }\n    const pendingTasks = inject(ɵPendingTasksInternal);\n    const contributeToStability = inject(REQUESTS_CONTRIBUTE_TO_STABILITY);\n    if (contributeToStability) {\n      const taskId = pendingTasks.add();\n      return chain(req, handler).pipe(finalize(() => pendingTasks.remove(taskId)));\n    } else {\n      return chain(req, handler);\n    }\n  };\n}\nlet fetchBackendWarningDisplayed = false;\n/** Internal function to reset the flag in tests */\nfunction resetFetchBackendWarningFlag() {\n  fetchBackendWarningDisplayed = false;\n}\nlet HttpInterceptorHandler = /*#__PURE__*/(() => {\n  class HttpInterceptorHandler extends HttpHandler {\n    backend;\n    injector;\n    chain = null;\n    pendingTasks = inject(ɵPendingTasksInternal);\n    contributeToStability = inject(REQUESTS_CONTRIBUTE_TO_STABILITY);\n    constructor(backend, injector) {\n      super();\n      this.backend = backend;\n      this.injector = injector;\n      // We strongly recommend using fetch backend for HTTP calls when SSR is used\n      // for an application. The logic below checks if that's the case and produces\n      // a warning otherwise.\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !fetchBackendWarningDisplayed) {\n        const isServer = isPlatformServer(injector.get(PLATFORM_ID));\n        // This flag is necessary because provideHttpClientTesting() overrides the backend\n        // even if `withFetch()` is used within the test. When the testing HTTP backend is provided,\n        // no HTTP calls are actually performed during the test, so producing a warning would be\n        // misleading.\n        const isTestingBackend = this.backend.isTestingBackend;\n        if (isServer && !(this.backend instanceof FetchBackend) && !isTestingBackend) {\n          fetchBackendWarningDisplayed = true;\n          injector.get(ɵConsole).warn(ɵformatRuntimeError(2801 /* RuntimeErrorCode.NOT_USING_FETCH_BACKEND_IN_SSR */, 'Angular detected that `HttpClient` is not configured ' + \"to use `fetch` APIs. It's strongly recommended to \" + 'enable `fetch` for applications that use Server-Side Rendering ' + 'for better performance and compatibility. ' + 'To enable `fetch`, add the `withFetch()` to the `provideHttpClient()` ' + 'call at the root of the application.'));\n        }\n      }\n    }\n    handle(initialRequest) {\n      if (this.chain === null) {\n        const dedupedInterceptorFns = Array.from(new Set([...this.injector.get(HTTP_INTERCEPTOR_FNS), ...this.injector.get(HTTP_ROOT_INTERCEPTOR_FNS, [])]));\n        // Note: interceptors are wrapped right-to-left so that final execution order is\n        // left-to-right. That is, if `dedupedInterceptorFns` is the array `[a, b, c]`, we want to\n        // produce a chain that is conceptually `c(b(a(end)))`, which we build from the inside\n        // out.\n        this.chain = dedupedInterceptorFns.reduceRight((nextSequencedFn, interceptorFn) => chainedInterceptorFn(nextSequencedFn, interceptorFn, this.injector), interceptorChainEndFn);\n      }\n      if (this.contributeToStability) {\n        const taskId = this.pendingTasks.add();\n        return this.chain(initialRequest, downstreamRequest => this.backend.handle(downstreamRequest)).pipe(finalize(() => this.pendingTasks.remove(taskId)));\n      } else {\n        return this.chain(initialRequest, downstreamRequest => this.backend.handle(downstreamRequest));\n      }\n    }\n    static ɵfac = function HttpInterceptorHandler_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HttpInterceptorHandler)(i0.ɵɵinject(HttpBackend), i0.ɵɵinject(i0.EnvironmentInjector));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HttpInterceptorHandler,\n      factory: HttpInterceptorHandler.ɵfac\n    });\n  }\n  return HttpInterceptorHandler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nlet nextRequestId = 0;\n/**\n * When a pending <script> is unsubscribed we'll move it to this document, so it won't be\n * executed.\n */\nlet foreignDocument;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n// Error text given when a request is passed to the JsonpClientBackend that has\n// headers set\nconst JSONP_ERR_HEADERS_NOT_SUPPORTED = 'JSONP requests do not support headers.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nclass JsonpCallbackContext {}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n  if (typeof window === 'object') {\n    return window;\n  }\n  return {};\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see {@link HttpHandler}\n * @see {@link HttpXhrBackend}\n *\n * @publicApi\n */\nlet JsonpClientBackend = /*#__PURE__*/(() => {\n  class JsonpClientBackend {\n    callbackMap;\n    document;\n    /**\n     * A resolved promise that can be used to schedule microtasks in the event handlers.\n     */\n    resolvedPromise = Promise.resolve();\n    constructor(callbackMap, document) {\n      this.callbackMap = callbackMap;\n      this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     */\n    nextCallback() {\n      return `ng_jsonp_callback_${nextRequestId++}`;\n    }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     *\n     */\n    handle(req) {\n      // Firstly, check both the method and response type. If either doesn't match\n      // then the request was improperly routed here and cannot be handled.\n      if (req.method !== 'JSONP') {\n        throw new Error(JSONP_ERR_WRONG_METHOD);\n      } else if (req.responseType !== 'json') {\n        throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n      }\n      // Check the request headers. JSONP doesn't support headers and\n      // cannot set any that were supplied.\n      if (req.headers.keys().length > 0) {\n        throw new Error(JSONP_ERR_HEADERS_NOT_SUPPORTED);\n      }\n      // Everything else happens inside the Observable boundary.\n      return new Observable(observer => {\n        // The first step to make a request is to generate the callback name, and replace the\n        // callback placeholder in the URL with the name. Care has to be taken here to ensure\n        // a trailing &, if matched, gets inserted back into the URL in the correct place.\n        const callback = this.nextCallback();\n        const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n        // Construct the <script> tag and point it at the URL.\n        const node = this.document.createElement('script');\n        node.src = url;\n        // A JSONP request requires waiting for multiple callbacks. These variables\n        // are closed over and track state across those callbacks.\n        // The response object, if one has been received, or null otherwise.\n        let body = null;\n        // Whether the response callback has been called.\n        let finished = false;\n        // Set the response callback in this.callbackMap (which will be the window\n        // object in the browser. The script being loaded via the <script> tag will\n        // eventually call this callback.\n        this.callbackMap[callback] = data => {\n          // Data has been received from the JSONP script. Firstly, delete this callback.\n          delete this.callbackMap[callback];\n          // Set state to indicate data was received.\n          body = data;\n          finished = true;\n        };\n        // cleanup() is a utility closure that removes the <script> from the page and\n        // the response callback from the window. This logic is used in both the\n        // success, error, and cancellation paths, so it's extracted out for convenience.\n        const cleanup = () => {\n          node.removeEventListener('load', onLoad);\n          node.removeEventListener('error', onError);\n          // Remove the <script> tag if it's still on the page.\n          node.remove();\n          // Remove the response callback from the callbackMap (window object in the\n          // browser).\n          delete this.callbackMap[callback];\n        };\n        // onLoad() is the success callback which runs after the response callback\n        // if the JSONP script loads successfully. The event itself is unimportant.\n        // If something went wrong, onLoad() may run without the response callback\n        // having been invoked.\n        const onLoad = event => {\n          // We wrap it in an extra Promise, to ensure the microtask\n          // is scheduled after the loaded endpoint has executed any potential microtask itself,\n          // which is not guaranteed in Internet Explorer and EdgeHTML. See issue #39496\n          this.resolvedPromise.then(() => {\n            // Cleanup the page.\n            cleanup();\n            // Check whether the response callback has run.\n            if (!finished) {\n              // It hasn't, something went wrong with the request. Return an error via\n              // the Observable error path. All JSONP errors have status 0.\n              observer.error(new HttpErrorResponse({\n                url,\n                status: 0,\n                statusText: 'JSONP Error',\n                error: new Error(JSONP_ERR_NO_CALLBACK)\n              }));\n              return;\n            }\n            // Success. body either contains the response body or null if none was\n            // returned.\n            observer.next(new HttpResponse({\n              body,\n              status: HTTP_STATUS_CODE_OK,\n              statusText: 'OK',\n              url\n            }));\n            // Complete the stream, the response is over.\n            observer.complete();\n          });\n        };\n        // onError() is the error callback, which runs if the script returned generates\n        // a Javascript error. It emits the error via the Observable error channel as\n        // a HttpErrorResponse.\n        const onError = error => {\n          cleanup();\n          // Wrap the error in a HttpErrorResponse.\n          observer.error(new HttpErrorResponse({\n            error,\n            status: 0,\n            statusText: 'JSONP Error',\n            url\n          }));\n        };\n        // Subscribe to both the success (load) and error events on the <script> tag,\n        // and add it to the page.\n        node.addEventListener('load', onLoad);\n        node.addEventListener('error', onError);\n        this.document.body.appendChild(node);\n        // The request has now been successfully sent.\n        observer.next({\n          type: HttpEventType.Sent\n        });\n        // Cancellation handler.\n        return () => {\n          if (!finished) {\n            this.removeListeners(node);\n          }\n          // And finally, clean up the page.\n          cleanup();\n        };\n      });\n    }\n    removeListeners(script) {\n      // Issue #34818\n      // Changing <script>'s ownerDocument will prevent it from execution.\n      // https://html.spec.whatwg.org/multipage/scripting.html#execute-the-script-block\n      foreignDocument ??= this.document.implementation.createHTMLDocument();\n      foreignDocument.adoptNode(script);\n    }\n    static ɵfac = function JsonpClientBackend_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || JsonpClientBackend)(i0.ɵɵinject(JsonpCallbackContext), i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: JsonpClientBackend,\n      factory: JsonpClientBackend.ɵfac\n    });\n  }\n  return JsonpClientBackend;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Identifies requests with the method JSONP and shifts them to the `JsonpClientBackend`.\n */\nfunction jsonpInterceptorFn(req, next) {\n  if (req.method === 'JSONP') {\n    return inject(JsonpClientBackend).handle(req);\n  }\n  // Fall through for normal HTTP requests.\n  return next(req);\n}\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see {@link HttpInterceptor}\n *\n * @publicApi\n */\nlet JsonpInterceptor = /*#__PURE__*/(() => {\n  class JsonpInterceptor {\n    injector;\n    constructor(injector) {\n      this.injector = injector;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param initialRequest The outgoing request object to handle.\n     * @param next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @returns An observable of the event stream.\n     */\n    intercept(initialRequest, next) {\n      return runInInjectionContext(this.injector, () => jsonpInterceptorFn(initialRequest, downstreamRequest => next.handle(downstreamRequest)));\n    }\n    static ɵfac = function JsonpInterceptor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || JsonpInterceptor)(i0.ɵɵinject(i0.EnvironmentInjector));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: JsonpInterceptor,\n      factory: JsonpInterceptor.ɵfac\n    });\n  }\n  return JsonpInterceptor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\nconst X_REQUEST_URL_REGEXP = /*#__PURE__*/RegExp(`^${X_REQUEST_URL_HEADER}:`, 'm');\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n  if ('responseURL' in xhr && xhr.responseURL) {\n    return xhr.responseURL;\n  }\n  if (X_REQUEST_URL_REGEXP.test(xhr.getAllResponseHeaders())) {\n    return xhr.getResponseHeader(X_REQUEST_URL_HEADER);\n  }\n  return null;\n}\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see {@link HttpHandler}\n * @see {@link JsonpClientBackend}\n *\n * @publicApi\n */\nlet HttpXhrBackend = /*#__PURE__*/(() => {\n  class HttpXhrBackend {\n    xhrFactory;\n    constructor(xhrFactory) {\n      this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     */\n    handle(req) {\n      // Quick check to give a better error message when a user attempts to use\n      // HttpClient.jsonp() without installing the HttpClientJsonpModule\n      if (req.method === 'JSONP') {\n        throw new ɵRuntimeError(-2800 /* RuntimeErrorCode.MISSING_JSONP_MODULE */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot make a JSONP request without JSONP support. To fix the problem, either add the \\`withJsonpSupport()\\` call (if \\`provideHttpClient()\\` is used) or import the \\`HttpClientJsonpModule\\` in the root NgModule.`);\n      }\n      // Check whether this factory has a special function to load an XHR implementation\n      // for various non-browser environments. We currently limit it to only `ServerXhr`\n      // class, which needs to load an XHR implementation.\n      const xhrFactory = this.xhrFactory;\n      const source = xhrFactory.ɵloadImpl ? from(xhrFactory.ɵloadImpl()) : of(null);\n      return source.pipe(switchMap(() => {\n        // Everything happens on Observable subscription.\n        return new Observable(observer => {\n          // Start by setting up the XHR object with request method, URL, and withCredentials\n          // flag.\n          const xhr = xhrFactory.build();\n          xhr.open(req.method, req.urlWithParams);\n          if (req.withCredentials) {\n            xhr.withCredentials = true;\n          }\n          // Add all the requested headers.\n          req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n          // Add an Accept header if one isn't present already.\n          if (!req.headers.has(ACCEPT_HEADER)) {\n            xhr.setRequestHeader(ACCEPT_HEADER, ACCEPT_HEADER_VALUE);\n          }\n          // Auto-detect the Content-Type header if one isn't present already.\n          if (!req.headers.has(CONTENT_TYPE_HEADER)) {\n            const detectedType = req.detectContentTypeHeader();\n            // Sometimes Content-Type detection fails.\n            if (detectedType !== null) {\n              xhr.setRequestHeader(CONTENT_TYPE_HEADER, detectedType);\n            }\n          }\n          // Set the responseType if one was requested.\n          if (req.responseType) {\n            const responseType = req.responseType.toLowerCase();\n            // JSON responses need to be processed as text. This is because if the server\n            // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n            // xhr.response will be null, and xhr.responseText cannot be accessed to\n            // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n            // is parsed by first requesting text and then applying JSON.parse.\n            xhr.responseType = responseType !== 'json' ? responseType : 'text';\n          }\n          // Serialize the request body if one is present. If not, this will be set to null.\n          const reqBody = req.serializeBody();\n          // If progress events are enabled, response headers will be delivered\n          // in two events - the HttpHeaderResponse event and the full HttpResponse\n          // event. However, since response headers don't change in between these\n          // two events, it doesn't make sense to parse them twice. So headerResponse\n          // caches the data extracted from the response whenever it's first parsed,\n          // to ensure parsing isn't duplicated.\n          let headerResponse = null;\n          // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n          // state, and memoizes it into headerResponse.\n          const partialFromXhr = () => {\n            if (headerResponse !== null) {\n              return headerResponse;\n            }\n            const statusText = xhr.statusText || 'OK';\n            // Parse headers from XMLHttpRequest - this step is lazy.\n            const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n            // Read the response URL from the XMLHttpResponse instance and fall back on the\n            // request URL.\n            const url = getResponseUrl(xhr) || req.url;\n            // Construct the HttpHeaderResponse and memoize it.\n            headerResponse = new HttpHeaderResponse({\n              headers,\n              status: xhr.status,\n              statusText,\n              url\n            });\n            return headerResponse;\n          };\n          // Next, a few closures are defined for the various events which XMLHttpRequest can\n          // emit. This allows them to be unregistered as event listeners later.\n          // First up is the load event, which represents a response being fully available.\n          const onLoad = () => {\n            // Read response state from the memoized partial data.\n            let {\n              headers,\n              status,\n              statusText,\n              url\n            } = partialFromXhr();\n            // The body will be read out if present.\n            let body = null;\n            if (status !== HTTP_STATUS_CODE_NO_CONTENT) {\n              // Use XMLHttpRequest.response if set, responseText otherwise.\n              body = typeof xhr.response === 'undefined' ? xhr.responseText : xhr.response;\n            }\n            // Normalize another potential bug (this one comes from CORS).\n            if (status === 0) {\n              status = !!body ? HTTP_STATUS_CODE_OK : 0;\n            }\n            // ok determines whether the response will be transmitted on the event or\n            // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n            // but a successful status code can still result in an error if the user\n            // asked for JSON data and the body cannot be parsed as such.\n            let ok = status >= 200 && status < 300;\n            // Check whether the body needs to be parsed as JSON (in many cases the browser\n            // will have done that already).\n            if (req.responseType === 'json' && typeof body === 'string') {\n              // Save the original body, before attempting XSSI prefix stripping.\n              const originalBody = body;\n              body = body.replace(XSSI_PREFIX, '');\n              try {\n                // Attempt the parse. If it fails, a parse error should be delivered to the\n                // user.\n                body = body !== '' ? JSON.parse(body) : null;\n              } catch (error) {\n                // Since the JSON.parse failed, it's reasonable to assume this might not have\n                // been a JSON response. Restore the original body (including any XSSI prefix)\n                // to deliver a better error response.\n                body = originalBody;\n                // If this was an error request to begin with, leave it as a string, it\n                // probably just isn't JSON. Otherwise, deliver the parsing error to the user.\n                if (ok) {\n                  // Even though the response status was 2xx, this is still an error.\n                  ok = false;\n                  // The parse error contains the text of the body that failed to parse.\n                  body = {\n                    error,\n                    text: body\n                  };\n                }\n              }\n            }\n            if (ok) {\n              // A successful response is delivered on the event stream.\n              observer.next(new HttpResponse({\n                body,\n                headers,\n                status,\n                statusText,\n                url: url || undefined\n              }));\n              // The full body has been received and delivered, no further events\n              // are possible. This request is complete.\n              observer.complete();\n            } else {\n              // An unsuccessful request is delivered on the error channel.\n              observer.error(new HttpErrorResponse({\n                // The error in this case is the response body (error from the server).\n                error: body,\n                headers,\n                status,\n                statusText,\n                url: url || undefined\n              }));\n            }\n          };\n          // The onError callback is called when something goes wrong at the network level.\n          // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n          // transmitted on the error channel.\n          const onError = error => {\n            const {\n              url\n            } = partialFromXhr();\n            const res = new HttpErrorResponse({\n              error,\n              status: xhr.status || 0,\n              statusText: xhr.statusText || 'Unknown Error',\n              url: url || undefined\n            });\n            observer.error(res);\n          };\n          // The sentHeaders flag tracks whether the HttpResponseHeaders event\n          // has been sent on the stream. This is necessary to track if progress\n          // is enabled since the event will be sent on only the first download\n          // progress event.\n          let sentHeaders = false;\n          // The download progress event handler, which is only registered if\n          // progress events are enabled.\n          const onDownProgress = event => {\n            // Send the HttpResponseHeaders event if it hasn't been sent already.\n            if (!sentHeaders) {\n              observer.next(partialFromXhr());\n              sentHeaders = true;\n            }\n            // Start building the download progress event to deliver on the response\n            // event stream.\n            let progressEvent = {\n              type: HttpEventType.DownloadProgress,\n              loaded: event.loaded\n            };\n            // Set the total number of bytes in the event if it's available.\n            if (event.lengthComputable) {\n              progressEvent.total = event.total;\n            }\n            // If the request was for text content and a partial response is\n            // available on XMLHttpRequest, include it in the progress event\n            // to allow for streaming reads.\n            if (req.responseType === 'text' && !!xhr.responseText) {\n              progressEvent.partialText = xhr.responseText;\n            }\n            // Finally, fire the event.\n            observer.next(progressEvent);\n          };\n          // The upload progress event handler, which is only registered if\n          // progress events are enabled.\n          const onUpProgress = event => {\n            // Upload progress events are simpler. Begin building the progress\n            // event.\n            let progress = {\n              type: HttpEventType.UploadProgress,\n              loaded: event.loaded\n            };\n            // If the total number of bytes being uploaded is available, include\n            // it.\n            if (event.lengthComputable) {\n              progress.total = event.total;\n            }\n            // Send the event.\n            observer.next(progress);\n          };\n          // By default, register for load and error events.\n          xhr.addEventListener('load', onLoad);\n          xhr.addEventListener('error', onError);\n          xhr.addEventListener('timeout', onError);\n          xhr.addEventListener('abort', onError);\n          // Progress events are only enabled if requested.\n          if (req.reportProgress) {\n            // Download progress is always enabled if requested.\n            xhr.addEventListener('progress', onDownProgress);\n            // Upload progress depends on whether there is a body to upload.\n            if (reqBody !== null && xhr.upload) {\n              xhr.upload.addEventListener('progress', onUpProgress);\n            }\n          }\n          // Fire the request, and notify the event stream that it was fired.\n          xhr.send(reqBody);\n          observer.next({\n            type: HttpEventType.Sent\n          });\n          // This is the return from the Observable function, which is the\n          // request cancellation handler.\n          return () => {\n            // On a cancellation, remove all registered event listeners.\n            xhr.removeEventListener('error', onError);\n            xhr.removeEventListener('abort', onError);\n            xhr.removeEventListener('load', onLoad);\n            xhr.removeEventListener('timeout', onError);\n            if (req.reportProgress) {\n              xhr.removeEventListener('progress', onDownProgress);\n              if (reqBody !== null && xhr.upload) {\n                xhr.upload.removeEventListener('progress', onUpProgress);\n              }\n            }\n            // Finally, abort the in-flight request.\n            if (xhr.readyState !== xhr.DONE) {\n              xhr.abort();\n            }\n          };\n        });\n      }));\n    }\n    static ɵfac = function HttpXhrBackend_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HttpXhrBackend)(i0.ɵɵinject(i1.XhrFactory));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HttpXhrBackend,\n      factory: HttpXhrBackend.ɵfac\n    });\n  }\n  return HttpXhrBackend;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst XSRF_ENABLED = /*#__PURE__*/new InjectionToken(ngDevMode ? 'XSRF_ENABLED' : '');\nconst XSRF_DEFAULT_COOKIE_NAME = 'XSRF-TOKEN';\nconst XSRF_COOKIE_NAME = /*#__PURE__*/new InjectionToken(ngDevMode ? 'XSRF_COOKIE_NAME' : '', {\n  providedIn: 'root',\n  factory: () => XSRF_DEFAULT_COOKIE_NAME\n});\nconst XSRF_DEFAULT_HEADER_NAME = 'X-XSRF-TOKEN';\nconst XSRF_HEADER_NAME = /*#__PURE__*/new InjectionToken(ngDevMode ? 'XSRF_HEADER_NAME' : '', {\n  providedIn: 'root',\n  factory: () => XSRF_DEFAULT_HEADER_NAME\n});\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nclass HttpXsrfTokenExtractor {}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nlet HttpXsrfCookieExtractor = /*#__PURE__*/(() => {\n  class HttpXsrfCookieExtractor {\n    doc;\n    platform;\n    cookieName;\n    lastCookieString = '';\n    lastToken = null;\n    /**\n     * @internal for testing\n     */\n    parseCount = 0;\n    constructor(doc, platform, cookieName) {\n      this.doc = doc;\n      this.platform = platform;\n      this.cookieName = cookieName;\n    }\n    getToken() {\n      if (this.platform === 'server') {\n        return null;\n      }\n      const cookieString = this.doc.cookie || '';\n      if (cookieString !== this.lastCookieString) {\n        this.parseCount++;\n        this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n        this.lastCookieString = cookieString;\n      }\n      return this.lastToken;\n    }\n    static ɵfac = function HttpXsrfCookieExtractor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HttpXsrfCookieExtractor)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(XSRF_COOKIE_NAME));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HttpXsrfCookieExtractor,\n      factory: HttpXsrfCookieExtractor.ɵfac\n    });\n  }\n  return HttpXsrfCookieExtractor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction xsrfInterceptorFn(req, next) {\n  const lcUrl = req.url.toLowerCase();\n  // Skip both non-mutating requests and absolute URLs.\n  // Non-mutating requests don't require a token, and absolute URLs require special handling\n  // anyway as the cookie set\n  // on our origin is not the same as the token expected by another origin.\n  if (!inject(XSRF_ENABLED) || req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') || lcUrl.startsWith('https://')) {\n    return next(req);\n  }\n  const token = inject(HttpXsrfTokenExtractor).getToken();\n  const headerName = inject(XSRF_HEADER_NAME);\n  // Be careful not to overwrite an existing header of the same name.\n  if (token != null && !req.headers.has(headerName)) {\n    req = req.clone({\n      headers: req.headers.set(headerName, token)\n    });\n  }\n  return next(req);\n}\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nlet HttpXsrfInterceptor = /*#__PURE__*/(() => {\n  class HttpXsrfInterceptor {\n    injector;\n    constructor(injector) {\n      this.injector = injector;\n    }\n    intercept(initialRequest, next) {\n      return runInInjectionContext(this.injector, () => xsrfInterceptorFn(initialRequest, downstreamRequest => next.handle(downstreamRequest)));\n    }\n    static ɵfac = function HttpXsrfInterceptor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HttpXsrfInterceptor)(i0.ɵɵinject(i0.EnvironmentInjector));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HttpXsrfInterceptor,\n      factory: HttpXsrfInterceptor.ɵfac\n    });\n  }\n  return HttpXsrfInterceptor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Identifies a particular kind of `HttpFeature`.\n *\n * @publicApi\n */\nvar HttpFeatureKind = /*#__PURE__*/function (HttpFeatureKind) {\n  HttpFeatureKind[HttpFeatureKind[\"Interceptors\"] = 0] = \"Interceptors\";\n  HttpFeatureKind[HttpFeatureKind[\"LegacyInterceptors\"] = 1] = \"LegacyInterceptors\";\n  HttpFeatureKind[HttpFeatureKind[\"CustomXsrfConfiguration\"] = 2] = \"CustomXsrfConfiguration\";\n  HttpFeatureKind[HttpFeatureKind[\"NoXsrfProtection\"] = 3] = \"NoXsrfProtection\";\n  HttpFeatureKind[HttpFeatureKind[\"JsonpSupport\"] = 4] = \"JsonpSupport\";\n  HttpFeatureKind[HttpFeatureKind[\"RequestsMadeViaParent\"] = 5] = \"RequestsMadeViaParent\";\n  HttpFeatureKind[HttpFeatureKind[\"Fetch\"] = 6] = \"Fetch\";\n  return HttpFeatureKind;\n}(HttpFeatureKind || {});\nfunction makeHttpFeature(kind, providers) {\n  return {\n    ɵkind: kind,\n    ɵproviders: providers\n  };\n}\n/**\n * Configures Angular's `HttpClient` service to be available for injection.\n *\n * By default, `HttpClient` will be configured for injection with its default options for XSRF\n * protection of outgoing requests. Additional configuration options can be provided by passing\n * feature functions to `provideHttpClient`. For example, HTTP interceptors can be added using the\n * `withInterceptors(...)` feature.\n *\n * <div class=\"docs-alert docs-alert-helpful\">\n *\n * It's strongly recommended to enable\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) for applications that use\n * Server-Side Rendering for better performance and compatibility. To enable `fetch`, add\n * `withFetch()` feature to the `provideHttpClient()` call at the root of the application:\n *\n * ```ts\n * provideHttpClient(withFetch());\n * ```\n *\n * </div>\n *\n * @see {@link withInterceptors}\n * @see {@link withInterceptorsFromDi}\n * @see {@link withXsrfConfiguration}\n * @see {@link withNoXsrfProtection}\n * @see {@link withJsonpSupport}\n * @see {@link withRequestsMadeViaParent}\n * @see {@link withFetch}\n */\nfunction provideHttpClient(...features) {\n  if (ngDevMode) {\n    const featureKinds = new Set(features.map(f => f.ɵkind));\n    if (featureKinds.has(HttpFeatureKind.NoXsrfProtection) && featureKinds.has(HttpFeatureKind.CustomXsrfConfiguration)) {\n      throw new Error(ngDevMode ? `Configuration error: found both withXsrfConfiguration() and withNoXsrfProtection() in the same call to provideHttpClient(), which is a contradiction.` : '');\n    }\n  }\n  const providers = [HttpClient, HttpXhrBackend, HttpInterceptorHandler, {\n    provide: HttpHandler,\n    useExisting: HttpInterceptorHandler\n  }, {\n    provide: HttpBackend,\n    useFactory: () => {\n      return inject(FETCH_BACKEND, {\n        optional: true\n      }) ?? inject(HttpXhrBackend);\n    }\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useValue: xsrfInterceptorFn,\n    multi: true\n  }, {\n    provide: XSRF_ENABLED,\n    useValue: true\n  }, {\n    provide: HttpXsrfTokenExtractor,\n    useClass: HttpXsrfCookieExtractor\n  }];\n  for (const feature of features) {\n    providers.push(...feature.ɵproviders);\n  }\n  return makeEnvironmentProviders(providers);\n}\n/**\n * Adds one or more functional-style HTTP interceptors to the configuration of the `HttpClient`\n * instance.\n *\n * @see {@link HttpInterceptorFn}\n * @see {@link provideHttpClient}\n * @publicApi\n */\nfunction withInterceptors(interceptorFns) {\n  return makeHttpFeature(HttpFeatureKind.Interceptors, interceptorFns.map(interceptorFn => {\n    return {\n      provide: HTTP_INTERCEPTOR_FNS,\n      useValue: interceptorFn,\n      multi: true\n    };\n  }));\n}\nconst LEGACY_INTERCEPTOR_FN = /*#__PURE__*/new InjectionToken(ngDevMode ? 'LEGACY_INTERCEPTOR_FN' : '');\n/**\n * Includes class-based interceptors configured using a multi-provider in the current injector into\n * the configured `HttpClient` instance.\n *\n * Prefer `withInterceptors` and functional interceptors instead, as support for DI-provided\n * interceptors may be phased out in a later release.\n *\n * @see {@link HttpInterceptor}\n * @see {@link HTTP_INTERCEPTORS}\n * @see {@link provideHttpClient}\n */\nfunction withInterceptorsFromDi() {\n  // Note: the legacy interceptor function is provided here via an intermediate token\n  // (`LEGACY_INTERCEPTOR_FN`), using a pattern which guarantees that if these providers are\n  // included multiple times, all of the multi-provider entries will have the same instance of the\n  // interceptor function. That way, the `HttpINterceptorHandler` will dedup them and legacy\n  // interceptors will not run multiple times.\n  return makeHttpFeature(HttpFeatureKind.LegacyInterceptors, [{\n    provide: LEGACY_INTERCEPTOR_FN,\n    useFactory: legacyInterceptorFnFactory\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useExisting: LEGACY_INTERCEPTOR_FN,\n    multi: true\n  }]);\n}\n/**\n * Customizes the XSRF protection for the configuration of the current `HttpClient` instance.\n *\n * This feature is incompatible with the `withNoXsrfProtection` feature.\n *\n * @see {@link provideHttpClient}\n */\nfunction withXsrfConfiguration({\n  cookieName,\n  headerName\n}) {\n  const providers = [];\n  if (cookieName !== undefined) {\n    providers.push({\n      provide: XSRF_COOKIE_NAME,\n      useValue: cookieName\n    });\n  }\n  if (headerName !== undefined) {\n    providers.push({\n      provide: XSRF_HEADER_NAME,\n      useValue: headerName\n    });\n  }\n  return makeHttpFeature(HttpFeatureKind.CustomXsrfConfiguration, providers);\n}\n/**\n * Disables XSRF protection in the configuration of the current `HttpClient` instance.\n *\n * This feature is incompatible with the `withXsrfConfiguration` feature.\n *\n * @see {@link provideHttpClient}\n */\nfunction withNoXsrfProtection() {\n  return makeHttpFeature(HttpFeatureKind.NoXsrfProtection, [{\n    provide: XSRF_ENABLED,\n    useValue: false\n  }]);\n}\n/**\n * Add JSONP support to the configuration of the current `HttpClient` instance.\n *\n * @see {@link provideHttpClient}\n */\nfunction withJsonpSupport() {\n  return makeHttpFeature(HttpFeatureKind.JsonpSupport, [JsonpClientBackend, {\n    provide: JsonpCallbackContext,\n    useFactory: jsonpCallbackContext\n  }, {\n    provide: HTTP_INTERCEPTOR_FNS,\n    useValue: jsonpInterceptorFn,\n    multi: true\n  }]);\n}\n/**\n * Configures the current `HttpClient` instance to make requests via the parent injector's\n * `HttpClient` instead of directly.\n *\n * By default, `provideHttpClient` configures `HttpClient` in its injector to be an independent\n * instance. For example, even if `HttpClient` is configured in the parent injector with\n * one or more interceptors, they will not intercept requests made via this instance.\n *\n * With this option enabled, once the request has passed through the current injector's\n * interceptors, it will be delegated to the parent injector's `HttpClient` chain instead of\n * dispatched directly, and interceptors in the parent configuration will be applied to the request.\n *\n * If there are several `HttpClient` instances in the injector hierarchy, it's possible for\n * `withRequestsMadeViaParent` to be used at multiple levels, which will cause the request to\n * \"bubble up\" until either reaching the root level or an `HttpClient` which was not configured with\n * this option.\n *\n * @see {@link provideHttpClient}\n * @publicApi\n */\nfunction withRequestsMadeViaParent() {\n  return makeHttpFeature(HttpFeatureKind.RequestsMadeViaParent, [{\n    provide: HttpBackend,\n    useFactory: () => {\n      const handlerFromParent = inject(HttpHandler, {\n        skipSelf: true,\n        optional: true\n      });\n      if (ngDevMode && handlerFromParent === null) {\n        throw new Error('withRequestsMadeViaParent() can only be used when the parent injector also configures HttpClient');\n      }\n      return handlerFromParent;\n    }\n  }]);\n}\n/**\n * Configures the current `HttpClient` instance to make requests using the fetch API.\n *\n * Note: The Fetch API doesn't support progress report on uploads.\n *\n * @publicApi\n */\nfunction withFetch() {\n  return makeHttpFeature(HttpFeatureKind.Fetch, [FetchBackend, {\n    provide: FETCH_BACKEND,\n    useExisting: FetchBackend\n  }, {\n    provide: HttpBackend,\n    useExisting: FetchBackend\n  }]);\n}\n\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n * @deprecated Use withXsrfConfiguration({cookieName: 'XSRF-TOKEN', headerName: 'X-XSRF-TOKEN'}) as\n *     providers instead or `withNoXsrfProtection` if you want to disabled XSRF protection.\n */\nlet HttpClientXsrfModule = /*#__PURE__*/(() => {\n  class HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     */\n    static disable() {\n      return {\n        ngModule: HttpClientXsrfModule,\n        providers: [withNoXsrfProtection().ɵproviders]\n      };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     */\n    static withOptions(options = {}) {\n      return {\n        ngModule: HttpClientXsrfModule,\n        providers: withXsrfConfiguration(options).ɵproviders\n      };\n    }\n    static ɵfac = function HttpClientXsrfModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HttpClientXsrfModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: HttpClientXsrfModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [HttpXsrfInterceptor, {\n        provide: HTTP_INTERCEPTORS,\n        useExisting: HttpXsrfInterceptor,\n        multi: true\n      }, {\n        provide: HttpXsrfTokenExtractor,\n        useClass: HttpXsrfCookieExtractor\n      }, withXsrfConfiguration({\n        cookieName: XSRF_DEFAULT_COOKIE_NAME,\n        headerName: XSRF_DEFAULT_HEADER_NAME\n      }).ɵproviders, {\n        provide: XSRF_ENABLED,\n        useValue: true\n      }]\n    });\n  }\n  return HttpClientXsrfModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Configures the dependency injector for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in DI token `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n * @deprecated use `provideHttpClient(withInterceptorsFromDi())` as providers instead\n */\nlet HttpClientModule = /*#__PURE__*/(() => {\n  class HttpClientModule {\n    static ɵfac = function HttpClientModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HttpClientModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: HttpClientModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [provideHttpClient(withInterceptorsFromDi())]\n    });\n  }\n  return HttpClientModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Configures the dependency injector for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * @publicApi\n * @deprecated `withJsonpSupport()` as providers instead\n */\nlet HttpClientJsonpModule = /*#__PURE__*/(() => {\n  class HttpClientJsonpModule {\n    static ɵfac = function HttpClientJsonpModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HttpClientJsonpModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: HttpClientJsonpModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [withJsonpSupport().ɵproviders]\n    });\n  }\n  return HttpClientJsonpModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * If your application uses different HTTP origins to make API calls (via `HttpClient`) on the server and\n * on the client, the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token allows you to establish a mapping\n * between those origins, so that `HttpTransferCache` feature can recognize those requests as the same\n * ones and reuse the data cached on the server during hydration on the client.\n *\n * **Important note**: the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token should *only* be provided in\n * the *server* code of your application (typically in the `app.server.config.ts` script). Angular throws an\n * error if it detects that the token is defined while running on the client.\n *\n * @usageNotes\n *\n * When the same API endpoint is accessed via `http://internal-domain.com:8080` on the server and\n * via `https://external-domain.com` on the client, you can use the following configuration:\n * ```ts\n * // in app.server.config.ts\n * {\n *     provide: HTTP_TRANSFER_CACHE_ORIGIN_MAP,\n *     useValue: {\n *         'http://internal-domain.com:8080': 'https://external-domain.com'\n *     }\n * }\n * ```\n *\n * @publicApi\n */\nconst HTTP_TRANSFER_CACHE_ORIGIN_MAP = /*#__PURE__*/new InjectionToken(ngDevMode ? 'HTTP_TRANSFER_CACHE_ORIGIN_MAP' : '');\n/**\n * Keys within cached response data structure.\n */\nconst BODY = 'b';\nconst HEADERS = 'h';\nconst STATUS = 's';\nconst STATUS_TEXT = 'st';\nconst REQ_URL = 'u';\nconst RESPONSE_TYPE = 'rt';\nconst CACHE_OPTIONS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'HTTP_TRANSFER_STATE_CACHE_OPTIONS' : '');\n/**\n * A list of allowed HTTP methods to cache.\n */\nconst ALLOWED_METHODS = ['GET', 'HEAD'];\nfunction transferCacheInterceptorFn(req, next) {\n  const {\n    isCacheActive,\n    ...globalOptions\n  } = inject(CACHE_OPTIONS);\n  const {\n    transferCache: requestOptions,\n    method: requestMethod\n  } = req;\n  // In the following situations we do not want to cache the request\n  if (!isCacheActive || requestOptions === false ||\n  // POST requests are allowed either globally or at request level\n  requestMethod === 'POST' && !globalOptions.includePostRequests && !requestOptions || requestMethod !== 'POST' && !ALLOWED_METHODS.includes(requestMethod) ||\n  // Do not cache request that require authorization when includeRequestsWithAuthHeaders is falsey\n  !globalOptions.includeRequestsWithAuthHeaders && hasAuthHeaders(req) || globalOptions.filter?.(req) === false) {\n    return next(req);\n  }\n  const transferState = inject(TransferState);\n  const originMap = inject(HTTP_TRANSFER_CACHE_ORIGIN_MAP, {\n    optional: true\n  });\n  if (typeof ngServerMode !== 'undefined' && !ngServerMode && originMap) {\n    throw new ɵRuntimeError(2803 /* RuntimeErrorCode.HTTP_ORIGIN_MAP_USED_IN_CLIENT */, ngDevMode && 'Angular detected that the `HTTP_TRANSFER_CACHE_ORIGIN_MAP` token is configured and ' + 'present in the client side code. Please ensure that this token is only provided in the ' + 'server code of the application.');\n  }\n  const requestUrl = typeof ngServerMode !== 'undefined' && ngServerMode && originMap ? mapRequestOriginUrl(req.url, originMap) : req.url;\n  const storeKey = makeCacheKey(req, requestUrl);\n  const response = transferState.get(storeKey, null);\n  let headersToInclude = globalOptions.includeHeaders;\n  if (typeof requestOptions === 'object' && requestOptions.includeHeaders) {\n    // Request-specific config takes precedence over the global config.\n    headersToInclude = requestOptions.includeHeaders;\n  }\n  if (response) {\n    const {\n      [BODY]: undecodedBody,\n      [RESPONSE_TYPE]: responseType,\n      [HEADERS]: httpHeaders,\n      [STATUS]: status,\n      [STATUS_TEXT]: statusText,\n      [REQ_URL]: url\n    } = response;\n    // Request found in cache. Respond using it.\n    let body = undecodedBody;\n    switch (responseType) {\n      case 'arraybuffer':\n        body = new TextEncoder().encode(undecodedBody).buffer;\n        break;\n      case 'blob':\n        body = new Blob([undecodedBody]);\n        break;\n    }\n    // We want to warn users accessing a header provided from the cache\n    // That HttpTransferCache alters the headers\n    // The warning will be logged a single time by HttpHeaders instance\n    let headers = new HttpHeaders(httpHeaders);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Append extra logic in dev mode to produce a warning when a header\n      // that was not transferred to the client is accessed in the code via `get`\n      // and `has` calls.\n      headers = appendMissingHeadersDetection(req.url, headers, headersToInclude ?? []);\n    }\n    return of(new HttpResponse({\n      body,\n      headers,\n      status,\n      statusText,\n      url\n    }));\n  }\n  // Request not found in cache. Make the request and cache it if on the server.\n  return next(req).pipe(tap(event => {\n    if (event instanceof HttpResponse && typeof ngServerMode !== 'undefined' && ngServerMode) {\n      transferState.set(storeKey, {\n        [BODY]: event.body,\n        [HEADERS]: getFilteredHeaders(event.headers, headersToInclude),\n        [STATUS]: event.status,\n        [STATUS_TEXT]: event.statusText,\n        [REQ_URL]: requestUrl,\n        [RESPONSE_TYPE]: req.responseType\n      });\n    }\n  }));\n}\n/** @returns true when the requests contains autorization related headers. */\nfunction hasAuthHeaders(req) {\n  return req.headers.has('authorization') || req.headers.has('proxy-authorization');\n}\nfunction getFilteredHeaders(headers, includeHeaders) {\n  if (!includeHeaders) {\n    return {};\n  }\n  const headersMap = {};\n  for (const key of includeHeaders) {\n    const values = headers.getAll(key);\n    if (values !== null) {\n      headersMap[key] = values;\n    }\n  }\n  return headersMap;\n}\nfunction sortAndConcatParams(params) {\n  return [...params.keys()].sort().map(k => `${k}=${params.getAll(k)}`).join('&');\n}\nfunction makeCacheKey(request, mappedRequestUrl) {\n  // make the params encoded same as a url so it's easy to identify\n  const {\n    params,\n    method,\n    responseType\n  } = request;\n  const encodedParams = sortAndConcatParams(params);\n  let serializedBody = request.serializeBody();\n  if (serializedBody instanceof URLSearchParams) {\n    serializedBody = sortAndConcatParams(serializedBody);\n  } else if (typeof serializedBody !== 'string') {\n    serializedBody = '';\n  }\n  const key = [method, responseType, mappedRequestUrl, serializedBody, encodedParams].join('|');\n  const hash = generateHash(key);\n  return makeStateKey(hash);\n}\n/**\n * A method that returns a hash representation of a string using a variant of DJB2 hash\n * algorithm.\n *\n * This is the same hashing logic that is used to generate component ids.\n */\nfunction generateHash(value) {\n  let hash = 0;\n  for (const char of value) {\n    hash = Math.imul(31, hash) + char.charCodeAt(0) << 0;\n  }\n  // Force positive number hash.\n  // 2147483647 = equivalent of Integer.MAX_VALUE.\n  hash += 2147483647 + 1;\n  return hash.toString();\n}\n/**\n * Returns the DI providers needed to enable HTTP transfer cache.\n *\n * By default, when using server rendering, requests are performed twice: once on the server and\n * other one on the browser.\n *\n * When these providers are added, requests performed on the server are cached and reused during the\n * bootstrapping of the application in the browser thus avoiding duplicate requests and reducing\n * load time.\n *\n */\nfunction withHttpTransferCache(cacheOptions) {\n  return [{\n    provide: CACHE_OPTIONS,\n    useFactory: () => {\n      ɵperformanceMarkFeature('NgHttpTransferCache');\n      return {\n        isCacheActive: true,\n        ...cacheOptions\n      };\n    }\n  }, {\n    provide: HTTP_ROOT_INTERCEPTOR_FNS,\n    useValue: transferCacheInterceptorFn,\n    multi: true\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useFactory: () => {\n      const appRef = inject(ApplicationRef);\n      const cacheState = inject(CACHE_OPTIONS);\n      return () => {\n        appRef.whenStable().then(() => {\n          cacheState.isCacheActive = false;\n        });\n      };\n    }\n  }];\n}\n/**\n * This function will add a proxy to an HttpHeader to intercept calls to get/has\n * and log a warning if the header entry requested has been removed\n */\nfunction appendMissingHeadersDetection(url, headers, headersToInclude) {\n  const warningProduced = new Set();\n  return new Proxy(headers, {\n    get(target, prop) {\n      const value = Reflect.get(target, prop);\n      const methods = new Set(['get', 'has', 'getAll']);\n      if (typeof value !== 'function' || !methods.has(prop)) {\n        return value;\n      }\n      return headerName => {\n        // We log when the key has been removed and a warning hasn't been produced for the header\n        const key = (prop + ':' + headerName).toLowerCase(); // e.g. `get:cache-control`\n        if (!headersToInclude.includes(headerName) && !warningProduced.has(key)) {\n          warningProduced.add(key);\n          const truncatedUrl = ɵtruncateMiddle(url);\n          // TODO: create Error guide for this warning\n          console.warn(ɵformatRuntimeError(2802 /* RuntimeErrorCode.HEADERS_ALTERED_BY_TRANSFER_CACHE */, `Angular detected that the \\`${headerName}\\` header is accessed, but the value of the header ` + `was not transferred from the server to the client by the HttpTransferCache. ` + `To include the value of the \\`${headerName}\\` header for the \\`${truncatedUrl}\\` request, ` + `use the \\`includeHeaders\\` list. The \\`includeHeaders\\` can be defined either ` + `on a request level by adding the \\`transferCache\\` parameter, or on an application ` + `level by adding the \\`httpCacheTransfer.includeHeaders\\` argument to the ` + `\\`provideClientHydration()\\` call. `));\n        }\n        // invoking the original method\n        return value.apply(target, [headerName]);\n      };\n    }\n  });\n}\nfunction mapRequestOriginUrl(url, originMap) {\n  const origin = new URL(url, 'resolve://').origin;\n  const mappedOrigin = originMap[origin];\n  if (!mappedOrigin) {\n    return url;\n  }\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    verifyMappedOrigin(mappedOrigin);\n  }\n  return url.replace(origin, mappedOrigin);\n}\nfunction verifyMappedOrigin(url) {\n  if (new URL(url, 'resolve://').pathname !== '/') {\n    throw new ɵRuntimeError(2804 /* RuntimeErrorCode.HTTP_ORIGIN_MAP_CONTAINS_PATH */, 'Angular detected a URL with a path segment in the value provided for the ' + `\\`HTTP_TRANSFER_CACHE_ORIGIN_MAP\\` token: ${url}. The map should only contain origins ` + 'without any other segments.');\n  }\n}\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FetchBackend, HTTP_INTERCEPTORS, HTTP_TRANSFER_CACHE_ORIGIN_MAP, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpContext, HttpContextToken, HttpErrorResponse, HttpEventType, HttpFeatureKind, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpStatusCode, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, provideHttpClient, withFetch, withInterceptors, withInterceptorsFromDi, withJsonpSupport, withNoXsrfProtection, withRequestsMadeViaParent, withXsrfConfiguration, HTTP_ROOT_INTERCEPTOR_FNS as ɵHTTP_ROOT_INTERCEPTOR_FNS, HttpInterceptorHandler as ɵHttpInterceptingHandler, HttpInterceptorHandler as ɵHttpInterceptorHandler, REQUESTS_CONTRIBUTE_TO_STABILITY as ɵREQUESTS_CONTRIBUTE_TO_STABILITY, withHttpTransferCache as ɵwithHttpTransferCache };\n","/**\n * @license Angular v19.1.7\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, isPlatformServer, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { ɵglobal, ɵRuntimeError, Injectable, InjectionToken, Inject, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, ɵTracingService, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, inject, ApplicationModule, NgModule, ApplicationRef, ɵConsole, Injector, forwardRef, ɵXSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, ɵwithI18nSupport, ɵwithEventReplay, ɵwithIncrementalHydration, ENVIRONMENT_INITIALIZER, ɵZONELESS_ENABLED, ɵformatRuntimeError, makeEnvironmentProviders, ɵwithDomHydration, Version } from '@angular/core';\nimport { ɵwithHttpTransferCache } from '@angular/common/http';\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n  supportsDOMEvents = true;\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    ɵsetRootDomAdapter(new BrowserDomAdapter());\n  }\n  onAndCancel(el, evt, listener, options) {\n    el.addEventListener(evt, listener, options);\n    return () => {\n      el.removeEventListener(evt, listener, options);\n    };\n  }\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n  remove(node) {\n    node.remove();\n  }\n  createElement(tagName, doc) {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createHtmlDocument() {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument() {\n    return document;\n  }\n  isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n  isShadowRoot(node) {\n    return node instanceof DocumentFragment;\n  }\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getBaseHref(doc) {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement() {\n    baseElement = null;\n  }\n  getUserAgent() {\n    return window.navigator.userAgent;\n  }\n  getCookie(name) {\n    return ɵparseCookieValue(document.cookie, name);\n  }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\nfunction relativePath(url) {\n  // The base URL doesn't really matter, we just need it so relative paths have something\n  // to resolve against. In the browser `HTMLBaseElement.href` is always absolute.\n  return new URL(url, document.baseURI).pathname;\n}\nclass BrowserGetTestability {\n  addToWindow(registry) {\n    ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new ɵRuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Could not find testability for element.');\n      }\n      return testability;\n    };\n    ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n    ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n    const whenAllStable = callback => {\n      const testabilities = ɵglobal['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      const decrement = function () {\n        count--;\n        if (count == 0) {\n          callback();\n        }\n      };\n      testabilities.forEach(testability => {\n        testability.whenStable(decrement);\n      });\n    };\n    if (!ɵglobal['frameworkStabilizers']) {\n      ɵglobal['frameworkStabilizers'] = [];\n    }\n    ɵglobal['frameworkStabilizers'].push(whenAllStable);\n  }\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (ɵgetDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, elem.host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nlet BrowserXhr = /*#__PURE__*/(() => {\n  class BrowserXhr {\n    build() {\n      return new XMLHttpRequest();\n    }\n    static ɵfac = function BrowserXhr_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrowserXhr)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BrowserXhr,\n      factory: BrowserXhr.ɵfac\n    });\n  }\n  return BrowserXhr;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The injection token for plugins of the `EventManager` service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'EventManagerPlugins' : '');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nlet EventManager = /*#__PURE__*/(() => {\n  class EventManager {\n    _zone;\n    _plugins;\n    _eventNameToPlugin = new Map();\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n      this._zone = _zone;\n      plugins.forEach(plugin => {\n        plugin.manager = this;\n      });\n      this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @param options Options that configure how the event listener is bound.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler, options) {\n      const plugin = this._findPluginFor(eventName);\n      return plugin.addEventListener(element, eventName, handler, options);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n      return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n      let plugin = this._eventNameToPlugin.get(eventName);\n      if (plugin) {\n        return plugin;\n      }\n      const plugins = this._plugins;\n      plugin = plugins.find(plugin => plugin.supports(eventName));\n      if (!plugin) {\n        throw new ɵRuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `No event manager plugin found for event ${eventName}`);\n      }\n      this._eventNameToPlugin.set(eventName, plugin);\n      return plugin;\n    }\n    static ɵfac = function EventManager_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EventManager)(i0.ɵɵinject(EVENT_MANAGER_PLUGINS), i0.ɵɵinject(i0.NgZone));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: EventManager,\n      factory: EventManager.ɵfac\n    });\n  }\n  return EventManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The plugin definition for the `EventManager` class\n *\n * It can be used as a base class to create custom manager plugins, i.e. you can create your own\n * class that extends the `EventManagerPlugin` one.\n *\n * @publicApi\n */\nclass EventManagerPlugin {\n  _doc;\n  // TODO: remove (has some usage in G3)\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n  // Using non-null assertion because it's set by EventManager's constructor\n  manager;\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\n/**\n * Removes all provided elements from the document.\n * @param elements An array of HTML Elements.\n */\nfunction removeElements(elements) {\n  for (const element of elements) {\n    element.remove();\n  }\n}\n/**\n * Creates a `style` element with the provided inline style content.\n * @param style A string of the inline style content.\n * @param doc A DOM Document to use to create the element.\n * @returns An HTMLStyleElement instance.\n */\nfunction createStyleElement(style, doc) {\n  const styleElement = doc.createElement('style');\n  styleElement.textContent = style;\n  return styleElement;\n}\n/**\n * Searches a DOM document's head element for style elements with a matching application\n * identifier attribute (`ng-app-id`) to the provide identifier and adds usage records for each.\n * @param doc An HTML DOM document instance.\n * @param appId A string containing an Angular application identifer.\n * @param inline A Map object for tracking inline (defined via `styles` in component decorator) style usage.\n * @param external A Map object for tracking external (defined via `styleUrls` in component decorator) style usage.\n */\nfunction addServerStyles(doc, appId, inline, external) {\n  const elements = doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${appId}\"],link[${APP_ID_ATTRIBUTE_NAME}=\"${appId}\"]`);\n  if (elements) {\n    for (const styleElement of elements) {\n      styleElement.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n      if (styleElement instanceof HTMLLinkElement) {\n        // Only use filename from href\n        // The href is build time generated with a unique value to prevent duplicates.\n        external.set(styleElement.href.slice(styleElement.href.lastIndexOf('/') + 1), {\n          usage: 0,\n          elements: [styleElement]\n        });\n      } else if (styleElement.textContent) {\n        inline.set(styleElement.textContent, {\n          usage: 0,\n          elements: [styleElement]\n        });\n      }\n    }\n  }\n}\n/**\n * Creates a `link` element for the provided external style URL.\n * @param url A string of the URL for the stylesheet.\n * @param doc A DOM Document to use to create the element.\n * @returns An HTMLLinkElement instance.\n */\nfunction createLinkElement(url, doc) {\n  const linkElement = doc.createElement('link');\n  linkElement.setAttribute('rel', 'stylesheet');\n  linkElement.setAttribute('href', url);\n  return linkElement;\n}\nlet SharedStylesHost = /*#__PURE__*/(() => {\n  class SharedStylesHost {\n    doc;\n    appId;\n    nonce;\n    /**\n     * Provides usage information for active inline style content and associated HTML <style> elements.\n     * Embedded styles typically originate from the `styles` metadata of a rendered component.\n     */\n    inline = new Map();\n    /**\n     * Provides usage information for active external style URLs and the associated HTML <link> elements.\n     * External styles typically originate from the `ɵɵExternalStylesFeature` of a rendered component.\n     */\n    external = new Map();\n    /**\n     * Set of host DOM nodes that will have styles attached.\n     */\n    hosts = new Set();\n    /**\n     * Whether the application code is currently executing on a server.\n     */\n    isServer;\n    constructor(doc, appId, nonce, platformId = {}) {\n      this.doc = doc;\n      this.appId = appId;\n      this.nonce = nonce;\n      this.isServer = isPlatformServer(platformId);\n      addServerStyles(doc, appId, this.inline, this.external);\n      this.hosts.add(doc.head);\n    }\n    /**\n     * Adds embedded styles to the DOM via HTML `style` elements.\n     * @param styles An array of style content strings.\n     */\n    addStyles(styles, urls) {\n      for (const value of styles) {\n        this.addUsage(value, this.inline, createStyleElement);\n      }\n      urls?.forEach(value => this.addUsage(value, this.external, createLinkElement));\n    }\n    /**\n     * Removes embedded styles from the DOM that were added as HTML `style` elements.\n     * @param styles An array of style content strings.\n     */\n    removeStyles(styles, urls) {\n      for (const value of styles) {\n        this.removeUsage(value, this.inline);\n      }\n      urls?.forEach(value => this.removeUsage(value, this.external));\n    }\n    addUsage(value, usages, creator) {\n      // Attempt to get any current usage of the value\n      const record = usages.get(value);\n      // If existing, just increment the usage count\n      if (record) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && record.usage === 0) {\n          // A usage count of zero indicates a preexisting server generated style.\n          // This attribute is solely used for debugging purposes of SSR style reuse.\n          record.elements.forEach(element => element.setAttribute('ng-style-reused', ''));\n        }\n        record.usage++;\n      } else {\n        // Otherwise, create an entry to track the elements and add element for each host\n        usages.set(value, {\n          usage: 1,\n          elements: [...this.hosts].map(host => this.addElement(host, creator(value, this.doc)))\n        });\n      }\n    }\n    removeUsage(value, usages) {\n      // Attempt to get any current usage of the value\n      const record = usages.get(value);\n      // If there is a record, reduce the usage count and if no longer used,\n      // remove from DOM and delete usage record.\n      if (record) {\n        record.usage--;\n        if (record.usage <= 0) {\n          removeElements(record.elements);\n          usages.delete(value);\n        }\n      }\n    }\n    ngOnDestroy() {\n      for (const [, {\n        elements\n      }] of [...this.inline, ...this.external]) {\n        removeElements(elements);\n      }\n      this.hosts.clear();\n    }\n    /**\n     * Adds a host node to the set of style hosts and adds all existing style usage to\n     * the newly added host node.\n     *\n     * This is currently only used for Shadow DOM encapsulation mode.\n     */\n    addHost(hostNode) {\n      this.hosts.add(hostNode);\n      // Add existing styles to new host\n      for (const [style, {\n        elements\n      }] of this.inline) {\n        elements.push(this.addElement(hostNode, createStyleElement(style, this.doc)));\n      }\n      for (const [url, {\n        elements\n      }] of this.external) {\n        elements.push(this.addElement(hostNode, createLinkElement(url, this.doc)));\n      }\n    }\n    removeHost(hostNode) {\n      this.hosts.delete(hostNode);\n    }\n    addElement(host, element) {\n      // Add a nonce if present\n      if (this.nonce) {\n        element.setAttribute('nonce', this.nonce);\n      }\n      // Add application identifier when on the server to support client-side reuse\n      if (this.isServer) {\n        element.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n      }\n      // Insert the element into the DOM with the host node as parent\n      return host.appendChild(element);\n    }\n    static ɵfac = function SharedStylesHost_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SharedStylesHost)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(APP_ID), i0.ɵɵinject(CSP_NONCE, 8), i0.ɵɵinject(PLATFORM_ID));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: SharedStylesHost,\n      factory: SharedStylesHost.ɵfac\n    });\n  }\n  return SharedStylesHost;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/Math/MathML'\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst SOURCEMAP_URL_REGEXP = /\\/\\*#\\s*sourceMappingURL=(.+?)\\s*\\*\\//;\nconst PROTOCOL_REGEXP = /^https?:/;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = true;\n/**\n * A DI token that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `true`.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = /*#__PURE__*/new InjectionToken(ngDevMode ? 'RemoveStylesOnCompDestroy' : '', {\n  providedIn: 'root',\n  factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT\n});\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimStylesContent(compId, styles) {\n  return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\n/**\n * Prepends a baseHref to the `sourceMappingURL` within the provided CSS content.\n * If the `sourceMappingURL` contains an inline (encoded) map, the function skips processing.\n *\n * @note For inline stylesheets, the `sourceMappingURL` is relative to the page's origin\n * and not the provided baseHref. This function is needed as when accessing the page with a URL\n * containing two or more segments.\n * For example, if the baseHref is set to `/`, and you visit a URL like `http://localhost/foo/bar`,\n * the map would be requested from `http://localhost/foo/bar/comp.css.map` instead of what you'd expect,\n * which is `http://localhost/comp.css.map`. This behavior is corrected by modifying the `sourceMappingURL`\n * to ensure external source maps are loaded relative to the baseHref.\n *\n\n * @param baseHref - The base URL to prepend to the `sourceMappingURL`.\n * @param styles - An array of CSS content strings, each potentially containing a `sourceMappingURL`.\n * @returns The updated array of CSS content strings with modified `sourceMappingURL` values,\n * or the original content if no modification is needed.\n */\nfunction addBaseHrefToCssSourceMap(baseHref, styles) {\n  if (!baseHref) {\n    return styles;\n  }\n  const absoluteBaseHrefUrl = new URL(baseHref, 'http://localhost');\n  return styles.map(cssContent => {\n    if (!cssContent.includes('sourceMappingURL=')) {\n      return cssContent;\n    }\n    return cssContent.replace(SOURCEMAP_URL_REGEXP, (_, sourceMapUrl) => {\n      if (sourceMapUrl[0] === '/' || sourceMapUrl.startsWith('data:') || PROTOCOL_REGEXP.test(sourceMapUrl)) {\n        return `/*# sourceMappingURL=${sourceMapUrl} */`;\n      }\n      const {\n        pathname: resolvedSourceMapUrl\n      } = new URL(sourceMapUrl, absoluteBaseHrefUrl);\n      return `/*# sourceMappingURL=${resolvedSourceMapUrl} */`;\n    });\n  });\n}\nlet DomRendererFactory2 = /*#__PURE__*/(() => {\n  class DomRendererFactory2 {\n    eventManager;\n    sharedStylesHost;\n    appId;\n    removeStylesOnCompDestroy;\n    doc;\n    platformId;\n    ngZone;\n    nonce;\n    tracingService;\n    rendererByCompId = new Map();\n    defaultRenderer;\n    platformIsServer;\n    constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null, tracingService = null) {\n      this.eventManager = eventManager;\n      this.sharedStylesHost = sharedStylesHost;\n      this.appId = appId;\n      this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n      this.doc = doc;\n      this.platformId = platformId;\n      this.ngZone = ngZone;\n      this.nonce = nonce;\n      this.tracingService = tracingService;\n      this.platformIsServer = isPlatformServer(platformId);\n      this.defaultRenderer = new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer, this.tracingService);\n    }\n    createRenderer(element, type) {\n      if (!element || !type) {\n        return this.defaultRenderer;\n      }\n      if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n        // Domino does not support shadow DOM.\n        type = {\n          ...type,\n          encapsulation: ViewEncapsulation.Emulated\n        };\n      }\n      const renderer = this.getOrCreateRenderer(element, type);\n      // Renderers have different logic due to different encapsulation behaviours.\n      // Ex: for emulated, an attribute is added to the element.\n      if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n        renderer.applyToHost(element);\n      } else if (renderer instanceof NoneEncapsulationDomRenderer) {\n        renderer.applyStyles();\n      }\n      return renderer;\n    }\n    getOrCreateRenderer(element, type) {\n      const rendererByCompId = this.rendererByCompId;\n      let renderer = rendererByCompId.get(type.id);\n      if (!renderer) {\n        const doc = this.doc;\n        const ngZone = this.ngZone;\n        const eventManager = this.eventManager;\n        const sharedStylesHost = this.sharedStylesHost;\n        const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n        const platformIsServer = this.platformIsServer;\n        const tracingService = this.tracingService;\n        switch (type.encapsulation) {\n          case ViewEncapsulation.Emulated:\n            renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService);\n            break;\n          case ViewEncapsulation.ShadowDom:\n            return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer, tracingService);\n          default:\n            renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService);\n            break;\n        }\n        rendererByCompId.set(type.id, renderer);\n      }\n      return renderer;\n    }\n    ngOnDestroy() {\n      this.rendererByCompId.clear();\n    }\n    /**\n     * Used during HMR to clear any cached data about a component.\n     * @param componentId ID of the component that is being replaced.\n     */\n    componentReplaced(componentId) {\n      this.rendererByCompId.delete(componentId);\n    }\n    static ɵfac = function DomRendererFactory2_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DomRendererFactory2)(i0.ɵɵinject(EventManager), i0.ɵɵinject(SharedStylesHost), i0.ɵɵinject(APP_ID), i0.ɵɵinject(REMOVE_STYLES_ON_COMPONENT_DESTROY), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(CSP_NONCE), i0.ɵɵinject(ɵTracingService, 8));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomRendererFactory2,\n      factory: DomRendererFactory2.ɵfac\n    });\n  }\n  return DomRendererFactory2;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass DefaultDomRenderer2 {\n  eventManager;\n  doc;\n  ngZone;\n  platformIsServer;\n  tracingService;\n  data = /*#__PURE__*/Object.create(null);\n  /**\n   * By default this renderer throws when encountering synthetic properties\n   * This can be disabled for example by the AsyncAnimationRendererFactory\n   */\n  throwOnSyntheticProps = true;\n  constructor(eventManager, doc, ngZone, platformIsServer, tracingService) {\n    this.eventManager = eventManager;\n    this.doc = doc;\n    this.ngZone = ngZone;\n    this.platformIsServer = platformIsServer;\n    this.tracingService = tracingService;\n  }\n  destroy() {}\n  destroyNode = null;\n  createElement(name, namespace) {\n    if (namespace) {\n      // TODO: `|| namespace` was added in\n      // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n      // support how Ivy passed around the namespace URI rather than short name at the time. It did\n      // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n      // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n      // namespaces should be and make it consistent.\n      // Related issues:\n      // https://github.com/angular/angular/issues/44028\n      // https://github.com/angular/angular/issues/44883\n      return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n    return this.doc.createElement(name);\n  }\n  createComment(value) {\n    return this.doc.createComment(value);\n  }\n  createText(value) {\n    return this.doc.createTextNode(value);\n  }\n  appendChild(parent, newChild) {\n    const targetParent = isTemplateNode(parent) ? parent.content : parent;\n    targetParent.appendChild(newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    if (parent) {\n      const targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.insertBefore(newChild, refChild);\n    }\n  }\n  removeChild(_parent, oldChild) {\n    oldChild.remove();\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) : selectorOrNode;\n    if (!el) {\n      throw new ɵRuntimeError(-5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) && `The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n  parentNode(node) {\n    return node.parentNode;\n  }\n  nextSibling(node) {\n    return node.nextSibling;\n  }\n  setAttribute(el, name, value, namespace) {\n    if (namespace) {\n      name = namespace + ':' + name;\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n  removeAttribute(el, name, namespace) {\n    if (namespace) {\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n  addClass(el, name) {\n    el.classList.add(name);\n  }\n  removeClass(el, name) {\n    el.classList.remove(name);\n  }\n  setStyle(el, style, value, flags) {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n  removeStyle(el, style, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      // removeProperty has no effect when used on camelCased properties.\n      el.style.removeProperty(style);\n    } else {\n      el.style[style] = '';\n    }\n  }\n  setProperty(el, name, value) {\n    if (el == null) {\n      return;\n    }\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n  setValue(node, value) {\n    node.nodeValue = value;\n  }\n  listen(target, event, callback, options) {\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps && checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      target = ɵgetDOM().getGlobalEventTarget(this.doc, target);\n      if (!target) {\n        throw new Error(`Unsupported event target ${target} for event ${event}`);\n      }\n    }\n    let wrappedCallback = this.decoratePreventDefault(callback);\n    if (this.tracingService !== null && this.tracingService.wrapEventListener) {\n      wrappedCallback = this.tracingService.wrapEventListener(target, event, wrappedCallback);\n    }\n    return this.eventManager.addEventListener(target, event, wrappedCallback, options);\n  }\n  decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n    // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n    // unwrap the listener (see below).\n    return event => {\n      // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n      // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n      // debug_node can inspect the listener toString contents for the existence of this special\n      // token. Because the token is a string literal, it is ensured to not be modified by compiled\n      // code.\n      if (event === '__ngUnwrap__') {\n        return eventHandler;\n      }\n      // Run the event handler inside the ngZone because event handlers are not patched\n      // by Zone on the server. This is required only for tests.\n      const allowDefaultBehavior = this.platformIsServer ? this.ngZone.runGuarded(() => eventHandler(event)) : eventHandler(event);\n      if (allowDefaultBehavior === false) {\n        event.preventDefault();\n      }\n      return undefined;\n    };\n  }\n}\nconst AT_CHARCODE = /*#__PURE__*/(() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new ɵRuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Make sure \\`provideAnimationsAsync()\\`, \\`provideAnimations()\\` or \\`provideNoopAnimations()\\` call was added to a list of providers used to bootstrap an application.\n  - There is a corresponding animation configuration named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.dev/api/core/Component#animations).`);\n  }\n}\nfunction isTemplateNode(node) {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  sharedStylesHost;\n  hostEl;\n  shadowRoot;\n  constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer, tracingService) {\n    super(eventManager, doc, ngZone, platformIsServer, tracingService);\n    this.sharedStylesHost = sharedStylesHost;\n    this.hostEl = hostEl;\n    this.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    let styles = component.styles;\n    if (ngDevMode) {\n      // We only do this in development, as for production users should not add CSS sourcemaps to components.\n      const baseHref = ɵgetDOM().getBaseHref(doc) ?? '';\n      styles = addBaseHrefToCssSourceMap(baseHref, styles);\n    }\n    styles = shimStylesContent(component.id, styles);\n    for (const style of styles) {\n      const styleEl = document.createElement('style');\n      if (nonce) {\n        styleEl.setAttribute('nonce', nonce);\n      }\n      styleEl.textContent = style;\n      this.shadowRoot.appendChild(styleEl);\n    }\n    // Apply any external component styles to the shadow root for the component's element.\n    // The ShadowDOM renderer uses an alternative execution path for component styles that\n    // does not use the SharedStylesHost that other encapsulation modes leverage. Much like\n    // the manual addition of embedded styles directly above, any external stylesheets\n    // must be manually added here to ensure ShadowDOM components are correctly styled.\n    // TODO: Consider reworking the DOM Renderers to consolidate style handling.\n    const styleUrls = component.getExternalStyles?.();\n    if (styleUrls) {\n      for (const styleUrl of styleUrls) {\n        const linkEl = createLinkElement(styleUrl, doc);\n        if (nonce) {\n          linkEl.setAttribute('nonce', nonce);\n        }\n        this.shadowRoot.appendChild(linkEl);\n      }\n    }\n  }\n  nodeOrShadowRoot(node) {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n  appendChild(parent, newChild) {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(_parent, oldChild) {\n    return super.removeChild(null, oldChild);\n  }\n  parentNode(node) {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n}\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n  sharedStylesHost;\n  removeStylesOnCompDestroy;\n  styles;\n  styleUrls;\n  constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService, compId) {\n    super(eventManager, doc, ngZone, platformIsServer, tracingService);\n    this.sharedStylesHost = sharedStylesHost;\n    this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n    let styles = component.styles;\n    if (ngDevMode) {\n      // We only do this in development, as for production users should not add CSS sourcemaps to components.\n      const baseHref = ɵgetDOM().getBaseHref(doc) ?? '';\n      styles = addBaseHrefToCssSourceMap(baseHref, styles);\n    }\n    this.styles = compId ? shimStylesContent(compId, styles) : styles;\n    this.styleUrls = component.getExternalStyles?.(compId);\n  }\n  applyStyles() {\n    this.sharedStylesHost.addStyles(this.styles, this.styleUrls);\n  }\n  destroy() {\n    if (!this.removeStylesOnCompDestroy) {\n      return;\n    }\n    this.sharedStylesHost.removeStyles(this.styles, this.styleUrls);\n  }\n}\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n  contentAttr;\n  hostAttr;\n  constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService) {\n    const compId = appId + '-' + component.id;\n    super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService, compId);\n    this.contentAttr = shimContentAttribute(compId);\n    this.hostAttr = shimHostAttribute(compId);\n  }\n  applyToHost(element) {\n    this.applyStyles();\n    this.setAttribute(element, this.hostAttr, '');\n  }\n  createElement(parent, name) {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\nlet DomEventsPlugin = /*#__PURE__*/(() => {\n  class DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n      super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n      return true;\n    }\n    addEventListener(element, eventName, handler, options) {\n      element.addEventListener(eventName, handler, options);\n      return () => this.removeEventListener(element, eventName, handler, options);\n    }\n    removeEventListener(target, eventName, callback, options) {\n      return target.removeEventListener(eventName, callback, options);\n    }\n    static ɵfac = function DomEventsPlugin_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DomEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomEventsPlugin,\n      factory: DomEventsPlugin.ɵfac\n    });\n  }\n  return DomEventsPlugin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n  'alt': event => event.altKey,\n  'control': event => event.ctrlKey,\n  'meta': event => event.metaKey,\n  'shift': event => event.shiftKey\n};\n/**\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nlet KeyEventsPlugin = /*#__PURE__*/(() => {\n  class KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n      super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n      return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler, options) {\n      const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n      const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n      return this.manager.getZone().runOutsideAngular(() => {\n        return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler, options);\n      });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n      const parts = eventName.toLowerCase().split('.');\n      const domEventName = parts.shift();\n      if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n        return null;\n      }\n      const key = KeyEventsPlugin._normalizeKey(parts.pop());\n      let fullKey = '';\n      let codeIX = parts.indexOf('code');\n      if (codeIX > -1) {\n        parts.splice(codeIX, 1);\n        fullKey = 'code.';\n      }\n      MODIFIER_KEYS.forEach(modifierName => {\n        const index = parts.indexOf(modifierName);\n        if (index > -1) {\n          parts.splice(index, 1);\n          fullKey += modifierName + '.';\n        }\n      });\n      fullKey += key;\n      if (parts.length != 0 || key.length === 0) {\n        // returning null instead of throwing to let another plugin process the event\n        return null;\n      }\n      // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n      //       The code must remain in the `result['domEventName']` form.\n      // return {domEventName, fullKey};\n      const result = {};\n      result['domEventName'] = domEventName;\n      result['fullKey'] = fullKey;\n      return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n      let keycode = _keyMap[event.key] || event.key;\n      let key = '';\n      if (fullKeyCode.indexOf('code.') > -1) {\n        keycode = event.code;\n        key = 'code.';\n      }\n      // the keycode could be unidentified so we have to check here\n      if (keycode == null || !keycode) return false;\n      keycode = keycode.toLowerCase();\n      if (keycode === ' ') {\n        keycode = 'space'; // for readability\n      } else if (keycode === '.') {\n        keycode = 'dot'; // because '.' is used as a separator in event names\n      }\n      MODIFIER_KEYS.forEach(modifierName => {\n        if (modifierName !== keycode) {\n          const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n          if (modifierGetter(event)) {\n            key += modifierName + '.';\n          }\n        }\n      });\n      key += keycode;\n      return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n      return event => {\n        if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n          zone.runGuarded(() => handler(event));\n        }\n      };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n      return keyName === 'esc' ? 'escape' : keyName;\n    }\n    static ɵfac = function KeyEventsPlugin_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || KeyEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: KeyEventsPlugin,\n      factory: KeyEventsPlugin.ɵfac\n    });\n  }\n  return KeyEventsPlugin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/components/importing).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```angular-ts\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```ts\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```ts\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```ts\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n  return ɵinternalCreateApplication({\n    rootComponent,\n    ...createProvidersConfig(options)\n  });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n  return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n  return {\n    appProviders: [...BROWSER_MODULE_PROVIDERS, ...(options?.providers ?? [])],\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app\n  // code.\n  return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n  return new ErrorHandler();\n}\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵPLATFORM_BROWSER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = /*#__PURE__*/createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [{\n  provide: ɵTESTABILITY_GETTER,\n  useClass: BrowserGetTestability,\n  deps: []\n}, {\n  provide: ɵTESTABILITY,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}, {\n  provide: Testability,\n  // Also provide as `Testability` for backwards-compatibility.\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n}];\nconst BROWSER_MODULE_PROVIDERS = [{\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, DomRendererFactory2, SharedStylesHost, EventManager, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr,\n  deps: []\n}, typeof ngDevMode === 'undefined' || ngDevMode ? {\n  provide: BROWSER_MODULE_PROVIDERS_MARKER,\n  useValue: true\n} : []];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nlet BrowserModule = /*#__PURE__*/(() => {\n  class BrowserModule {\n    constructor() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        const providersAlreadyPresent = inject(BROWSER_MODULE_PROVIDERS_MARKER, {\n          optional: true,\n          skipSelf: true\n        });\n        if (providersAlreadyPresent) {\n          throw new ɵRuntimeError(5100 /* RuntimeErrorCode.BROWSER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` + `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n      }\n    }\n    static ɵfac = function BrowserModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrowserModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: BrowserModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n      imports: [CommonModule, ApplicationModule]\n    });\n  }\n  return BrowserModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nlet Meta = /*#__PURE__*/(() => {\n  class Meta {\n    _doc;\n    _dom;\n    constructor(_doc) {\n      this._doc = _doc;\n      this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n      if (!tag) return null;\n      return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n      if (!tags) return [];\n      return tags.reduce((result, tag) => {\n        if (tag) {\n          result.push(this._getOrCreateElement(tag, forceCreation));\n        }\n        return result;\n      }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n      if (!attrSelector) return null;\n      return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n      if (!attrSelector) return [];\n      const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n      return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n      if (!tag) return null;\n      selector = selector || this._parseSelector(tag);\n      const meta = this.getTag(selector);\n      if (meta) {\n        return this._setMetaElementAttributes(tag, meta);\n      }\n      return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n      this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n      if (meta) {\n        this._dom.remove(meta);\n      }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n      if (!forceCreation) {\n        const selector = this._parseSelector(meta);\n        // It's allowed to have multiple elements with the same name so it's not enough to\n        // just check that element with the same name already present on the page. We also need to\n        // check if element has tag attributes\n        const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n        if (elem !== undefined) return elem;\n      }\n      const element = this._dom.createElement('meta');\n      this._setMetaElementAttributes(meta, element);\n      const head = this._doc.getElementsByTagName('head')[0];\n      head.appendChild(element);\n      return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n      Object.keys(tag).forEach(prop => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n      return el;\n    }\n    _parseSelector(tag) {\n      const attr = tag.name ? 'name' : 'property';\n      return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n      return Object.keys(tag).every(key => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n      return META_KEYS_MAP[prop] || prop;\n    }\n    static ɵfac = function Meta_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Meta)(i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Meta,\n      factory: Meta.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return Meta;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nlet Title = /*#__PURE__*/(() => {\n  class Title {\n    _doc;\n    constructor(_doc) {\n      this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n      return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n      this._doc.title = newTitle || '';\n    }\n    static ɵfac = function Title_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Title)(i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Title,\n      factory: Title.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return Title;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\nclass ChangeDetectionPerfRecord {\n  msPerTick;\n  numTicks;\n  constructor(msPerTick, numTicks) {\n    this.msPerTick = msPerTick;\n    this.numTicks = numTicks;\n  }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n  appRef;\n  constructor(ref) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```ts\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config) {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers without dev tools opened\n    if (record && 'profile' in console && typeof console.profile === 'function') {\n      console.profile(profileName);\n    }\n    const start = performance.now();\n    let numTicks = 0;\n    while (numTicks < 5 || performance.now() - start < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = performance.now();\n    if (record && 'profileEnd' in console && typeof console.profileEnd === 'function') {\n      console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    console.log(`ran ${numTicks} change detection cycles`);\n    console.log(`${msPerTick.toFixed(2)} ms per check`);\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all() {\n    return () => true;\n  }\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector) {\n    return debugElement => {\n      return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n    };\n  }\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type) {\n    return debugNode => debugNode.providerTokens.indexOf(type) !== -1;\n  }\n}\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n  return false;\n}\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'HammerGestureConfig' : '');\n/**\n * Injection token used to provide a HammerLoader to Angular.\n *\n * @see {@link HammerLoader}\n *\n * @publicApi\n */\nconst HAMMER_LOADER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'HammerLoader' : '');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nlet HammerGestureConfig = /*#__PURE__*/(() => {\n  class HammerGestureConfig {\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n    overrides = {};\n    /**\n     * Properties whose default values can be overridden for a given event.\n     * Different sets of properties apply to different events.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    options;\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n      const mc = new Hammer(element, this.options);\n      mc.get('pinch').set({\n        enable: true\n      });\n      mc.get('rotate').set({\n        enable: true\n      });\n      for (const eventName in this.overrides) {\n        mc.get(eventName).set(this.overrides[eventName]);\n      }\n      return mc;\n    }\n    static ɵfac = function HammerGestureConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HammerGestureConfig)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HammerGestureConfig,\n      factory: HammerGestureConfig.ɵfac\n    });\n  }\n  return HammerGestureConfig;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nlet HammerGesturesPlugin = /*#__PURE__*/(() => {\n  class HammerGesturesPlugin extends EventManagerPlugin {\n    _config;\n    _injector;\n    loader;\n    _loaderPromise = null;\n    constructor(doc, _config, _injector, loader) {\n      super(doc);\n      this._config = _config;\n      this._injector = _injector;\n      this.loader = loader;\n    }\n    supports(eventName) {\n      if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n        return false;\n      }\n      if (!window.Hammer && !this.loader) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // Get a `Console` through an injector to tree-shake the\n          // class when it is unused in production.\n          const _console = this._injector.get(ɵConsole);\n          _console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` + `loaded and no custom loader has been specified.`);\n        }\n        return false;\n      }\n      return true;\n    }\n    addEventListener(element, eventName, handler) {\n      const zone = this.manager.getZone();\n      eventName = eventName.toLowerCase();\n      // If Hammer is not present but a loader is specified, we defer adding the event listener\n      // until Hammer is loaded.\n      if (!window.Hammer && this.loader) {\n        this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n        // This `addEventListener` method returns a function to remove the added listener.\n        // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n        // than remove anything.\n        let cancelRegistration = false;\n        let deregister = () => {\n          cancelRegistration = true;\n        };\n        zone.runOutsideAngular(() => this._loaderPromise.then(() => {\n          // If Hammer isn't actually loaded when the custom loader resolves, give up.\n          if (!window.Hammer) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              const _console = this._injector.get(ɵConsole);\n              _console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n            }\n            deregister = () => {};\n            return;\n          }\n          if (!cancelRegistration) {\n            // Now that Hammer is loaded and the listener is being loaded for real,\n            // the deregistration function changes from canceling registration to\n            // removal.\n            deregister = this.addEventListener(element, eventName, handler);\n          }\n        }).catch(() => {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const _console = this._injector.get(ɵConsole);\n            _console.warn(`The \"${eventName}\" event cannot be bound because the custom ` + `Hammer.JS loader failed.`);\n          }\n          deregister = () => {};\n        }));\n        // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n        // can change the behavior of `deregister` once the listener is added. Using a closure in\n        // this way allows us to avoid any additional data structures to track listener removal.\n        return () => {\n          deregister();\n        };\n      }\n      return zone.runOutsideAngular(() => {\n        // Creating the manager bind events, must be done outside of angular\n        const mc = this._config.buildHammer(element);\n        const callback = function (eventObj) {\n          zone.runGuarded(function () {\n            handler(eventObj);\n          });\n        };\n        mc.on(eventName, callback);\n        return () => {\n          mc.off(eventName, callback);\n          // destroy mc to prevent memory leak\n          if (typeof mc.destroy === 'function') {\n            mc.destroy();\n          }\n        };\n      });\n    }\n    isCustomEvent(eventName) {\n      return this._config.events.indexOf(eventName) > -1;\n    }\n    static ɵfac = function HammerGesturesPlugin_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HammerGesturesPlugin)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(HAMMER_GESTURE_CONFIG), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(HAMMER_LOADER, 8));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HammerGesturesPlugin,\n      factory: HammerGesturesPlugin.ɵfac\n    });\n  }\n  return HammerGesturesPlugin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's `EventManager`.\n *\n * @publicApi\n */\nlet HammerModule = /*#__PURE__*/(() => {\n  class HammerModule {\n    static ɵfac = function HammerModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HammerModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: HammerModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [{\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Injector, [new Optional(), HAMMER_LOADER]]\n      }, {\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: HammerGestureConfig,\n        deps: []\n      }]\n    });\n  }\n  return HammerModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nlet DomSanitizer = /*#__PURE__*/(() => {\n  class DomSanitizer {\n    static ɵfac = function DomSanitizer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DomSanitizer)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomSanitizer,\n      factory: function DomSanitizer_Factory(__ngFactoryType__) {\n        let __ngConditionalFactory__ = null;\n        if (__ngFactoryType__) {\n          __ngConditionalFactory__ = new (__ngFactoryType__ || DomSanitizer)();\n        } else {\n          __ngConditionalFactory__ = i0.ɵɵinject(DomSanitizerImpl);\n        }\n        return __ngConditionalFactory__;\n      },\n      providedIn: 'root'\n    });\n  }\n  return DomSanitizer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DomSanitizerImpl = /*#__PURE__*/(() => {\n  class DomSanitizerImpl extends DomSanitizer {\n    _doc;\n    constructor(_doc) {\n      super();\n      this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n      if (value == null) return null;\n      switch (ctx) {\n        case SecurityContext.NONE:\n          return value;\n        case SecurityContext.HTML:\n          if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n        case SecurityContext.STYLE:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return value;\n        case SecurityContext.SCRIPT:\n          if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          throw new ɵRuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'unsafe value used in a script context');\n        case SecurityContext.URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          return ɵ_sanitizeUrl(String(value));\n        case SecurityContext.RESOURCE_URL:\n          if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n            return ɵunwrapSafeValue(value);\n          }\n          throw new ɵRuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `unsafe value used in a resource URL context (see ${ɵXSS_SECURITY_URL})`);\n        default:\n          throw new ɵRuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Unexpected SecurityContext ${ctx} (see ${ɵXSS_SECURITY_URL})`);\n      }\n    }\n    bypassSecurityTrustHtml(value) {\n      return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n      return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n      return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n      return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n      return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n    static ɵfac = function DomSanitizerImpl_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DomSanitizerImpl)(i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomSanitizerImpl,\n      factory: DomSanitizerImpl.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DomSanitizerImpl;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The list of features as an enum to uniquely type each `HydrationFeature`.\n * @see {@link HydrationFeature}\n *\n * @publicApi\n */\nvar HydrationFeatureKind = /*#__PURE__*/function (HydrationFeatureKind) {\n  HydrationFeatureKind[HydrationFeatureKind[\"NoHttpTransferCache\"] = 0] = \"NoHttpTransferCache\";\n  HydrationFeatureKind[HydrationFeatureKind[\"HttpTransferCacheOptions\"] = 1] = \"HttpTransferCacheOptions\";\n  HydrationFeatureKind[HydrationFeatureKind[\"I18nSupport\"] = 2] = \"I18nSupport\";\n  HydrationFeatureKind[HydrationFeatureKind[\"EventReplay\"] = 3] = \"EventReplay\";\n  HydrationFeatureKind[HydrationFeatureKind[\"IncrementalHydration\"] = 4] = \"IncrementalHydration\";\n  return HydrationFeatureKind;\n}(HydrationFeatureKind || {});\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(ɵkind, ɵproviders = [], ɵoptions = {}) {\n  return {\n    ɵkind,\n    ɵproviders\n  };\n}\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n */\nfunction withNoHttpTransferCache() {\n  // This feature has no providers and acts as a flag that turns off\n  // HTTP transfer cache (which otherwise is turned on by default).\n  return hydrationFeature(HydrationFeatureKind.NoHttpTransferCache);\n}\n/**\n * The function accepts an object, which allows to configure cache parameters,\n * such as which headers should be included (no headers are included by default),\n * whether POST requests should be cached or a callback function to determine if a\n * particular request should be cached.\n *\n * @publicApi\n */\nfunction withHttpTransferCacheOptions(options) {\n  // This feature has no providers and acts as a flag to pass options to the HTTP transfer cache.\n  return hydrationFeature(HydrationFeatureKind.HttpTransferCacheOptions, ɵwithHttpTransferCache(options));\n}\n/**\n * Enables support for hydrating i18n blocks.\n *\n * @developerPreview\n * @publicApi\n */\nfunction withI18nSupport() {\n  return hydrationFeature(HydrationFeatureKind.I18nSupport, ɵwithI18nSupport());\n}\n/**\n * Enables support for replaying user events (e.g. `click`s) that happened on a page\n * before hydration logic has completed. Once an application is hydrated, all captured\n * events are replayed and relevant event listeners are executed.\n *\n * @usageNotes\n *\n * Basic example of how you can enable event replay in your application when\n * `bootstrapApplication` function is used:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration(withEventReplay())]\n * });\n * ```\n * @publicApi\n * @see {@link provideClientHydration}\n */\nfunction withEventReplay() {\n  return hydrationFeature(HydrationFeatureKind.EventReplay, ɵwithEventReplay());\n}\n/**\n * Enables support for incremental hydration using the `hydrate` trigger syntax.\n *\n * @usageNotes\n *\n * Basic example of how you can enable incremental hydration in your application when\n * the `bootstrapApplication` function is used:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration(withIncrementalHydration())]\n * });\n * ```\n * @experimental\n * @publicApi\n * @see {@link provideClientHydration}\n */\nfunction withIncrementalHydration() {\n  return hydrationFeature(HydrationFeatureKind.IncrementalHydration, ɵwithIncrementalHydration());\n}\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n  return [{\n    provide: ENVIRONMENT_INITIALIZER,\n    useValue: () => {\n      const ngZone = inject(NgZone);\n      const isZoneless = inject(ɵZONELESS_ENABLED);\n      // Checking `ngZone instanceof NgZone` would be insufficient here,\n      // because custom implementations might use NgZone as a base class.\n      if (!isZoneless && ngZone.constructor !== NgZone) {\n        const console = inject(ɵConsole);\n        const message = ɵformatRuntimeError(-5000 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' + 'that uses a custom or a noop Zone.js implementation. ' + 'This is not yet a fully supported configuration.');\n        console.warn(message);\n      }\n    },\n    multi: true\n  }];\n}\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](guide/ssr#caching-data-when-using-httpclient).\n *\n * These functions allow you to disable some of the default features or enable new ones:\n *\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n * * {@link withHttpTransferCacheOptions} to configure some HTTP transfer cache options\n * * {@link withI18nSupport} to enable hydration support for i18n blocks\n * * {@link withEventReplay} to enable support for replaying user events\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```ts\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoHttpTransferCache}\n * @see {@link withHttpTransferCacheOptions}\n * @see {@link withI18nSupport}\n * @see {@link withEventReplay}\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n */\nfunction provideClientHydration(...features) {\n  const providers = [];\n  const featuresKind = new Set();\n  const hasHttpTransferCacheOptions = featuresKind.has(HydrationFeatureKind.HttpTransferCacheOptions);\n  for (const {\n    ɵproviders,\n    ɵkind\n  } of features) {\n    featuresKind.add(ɵkind);\n    if (ɵproviders.length) {\n      providers.push(ɵproviders);\n    }\n  }\n  if (typeof ngDevMode !== 'undefined' && ngDevMode && featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) && hasHttpTransferCacheOptions) {\n    // TODO: Make this a runtime error\n    throw new Error('Configuration error: found both withHttpTransferCacheOptions() and withNoHttpTransferCache() in the same call to provideClientHydration(), which is a contradiction.');\n  }\n  return makeEnvironmentProviders([typeof ngDevMode !== 'undefined' && ngDevMode ? provideZoneJsCompatibilityDetector() : [], ɵwithDomHydration(), featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) || hasHttpTransferCacheOptions ? [] : ɵwithHttpTransferCache({}), providers]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('19.1.7');\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, HydrationFeatureKind, Meta, REMOVE_STYLES_ON_COMPONENT_DESTROY, Title, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, platformBrowser, provideClientHydration, provideProtractorTestingSupport, withEventReplay, withHttpTransferCacheOptions, withI18nSupport, withIncrementalHydration, withNoHttpTransferCache, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, SharedStylesHost as ɵSharedStylesHost, initDomAdapter as ɵinitDomAdapter };\n","/**\n * @license Angular v19.1.7\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵisPromise, ɵRuntimeError, Injectable, createEnvironmentInjector, ɵisNgModule, isStandalone, InjectionToken, EventEmitter, input, inject, ViewContainerRef, ChangeDetectorRef, Directive, Input, Output, reflectComponentType, ɵisInjectable, runInInjectionContext, Component, Compiler, NgModuleFactory, NgZone, afterNextRender, EnvironmentInjector, DestroyRef, ɵConsole, ɵPendingTasksInternal, ɵɵsanitizeUrlOrResourceUrl, booleanAttribute, Attribute, HostBinding, HostListener, Optional, ContentChildren, makeEnvironmentProviders, APP_BOOTSTRAP_LISTENER, ENVIRONMENT_INITIALIZER, Injector, ApplicationRef, InjectFlags, APP_INITIALIZER, SkipSelf, NgModule, Version, ɵpublishExternalGlobalUtil } from '@angular/core';\nimport { isObservable, from, of, BehaviorSubject, combineLatest, EmptyError, concat, defer, pipe, throwError, EMPTY, ConnectableObservable, Subject, Subscription } from 'rxjs';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, Location, ViewportScroller, LOCATION_INITIALIZED, LocationStrategy, HashLocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { map, switchMap, take, startWith, filter, mergeMap, first, concatMap, tap, catchError, scan, defaultIfEmpty, last as last$1, takeLast, finalize, refCount, takeUntil, mergeAll } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\n\n/**\n * The primary routing outlet.\n *\n * @publicApi\n */\nconst PRIMARY_OUTLET = 'primary';\n/**\n * A private symbol used to store the value of `Route.title` inside the `Route.data` if it is a\n * static string or `Route.resolve` if anything else. This allows us to reuse the existing route\n * data/resolvers to support the title feature without new instrumentation in the `Router` pipeline.\n */\nconst RouteTitleKey = /* @__PURE__ */Symbol('RouteTitle');\nclass ParamsAsMap {\n  params;\n  constructor(params) {\n    this.params = params || {};\n  }\n  has(name) {\n    return Object.prototype.hasOwnProperty.call(this.params, name);\n  }\n  get(name) {\n    if (this.has(name)) {\n      const v = this.params[name];\n      return Array.isArray(v) ? v[0] : v;\n    }\n    return null;\n  }\n  getAll(name) {\n    if (this.has(name)) {\n      const v = this.params[name];\n      return Array.isArray(v) ? v : [v];\n    }\n    return [];\n  }\n  get keys() {\n    return Object.keys(this.params);\n  }\n}\n/**\n * Converts a `Params` instance to a `ParamMap`.\n * @param params The instance to convert.\n * @returns The new map instance.\n *\n * @publicApi\n */\nfunction convertToParamMap(params) {\n  return new ParamsAsMap(params);\n}\n/**\n * Matches the route configuration (`route`) against the actual URL (`segments`).\n *\n * When no matcher is defined on a `Route`, this is the matcher used by the Router by default.\n *\n * @param segments The remaining unmatched segments in the current navigation\n * @param segmentGroup The current segment group being matched\n * @param route The `Route` to match against.\n *\n * @see {@link UrlMatchResult}\n * @see {@link Route}\n *\n * @returns The resulting match information or `null` if the `route` should not match.\n * @publicApi\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n  const parts = route.path.split('/');\n  if (parts.length > segments.length) {\n    // The actual URL is shorter than the config, no match\n    return null;\n  }\n  if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || parts.length < segments.length)) {\n    // The config is longer than the actual URL but we are looking for a full match, return null\n    return null;\n  }\n  const posParams = {};\n  // Check each config part against the actual URL\n  for (let index = 0; index < parts.length; index++) {\n    const part = parts[index];\n    const segment = segments[index];\n    const isParameter = part[0] === ':';\n    if (isParameter) {\n      posParams[part.substring(1)] = segment;\n    } else if (part !== segment.path) {\n      // The actual URL part does not match the config, no match\n      return null;\n    }\n  }\n  return {\n    consumed: segments.slice(0, parts.length),\n    posParams\n  };\n}\nfunction shallowEqualArrays(a, b) {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; ++i) {\n    if (!shallowEqual(a[i], b[i])) return false;\n  }\n  return true;\n}\nfunction shallowEqual(a, b) {\n  // While `undefined` should never be possible, it would sometimes be the case in IE 11\n  // and pre-chromium Edge. The check below accounts for this edge case.\n  const k1 = a ? getDataKeys(a) : undefined;\n  const k2 = b ? getDataKeys(b) : undefined;\n  if (!k1 || !k2 || k1.length != k2.length) {\n    return false;\n  }\n  let key;\n  for (let i = 0; i < k1.length; i++) {\n    key = k1[i];\n    if (!equalArraysOrString(a[key], b[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Gets the keys of an object, including `symbol` keys.\n */\nfunction getDataKeys(obj) {\n  return [...Object.keys(obj), ...Object.getOwnPropertySymbols(obj)];\n}\n/**\n * Test equality for arrays of strings or a string.\n */\nfunction equalArraysOrString(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false;\n    const aSorted = [...a].sort();\n    const bSorted = [...b].sort();\n    return aSorted.every((val, index) => bSorted[index] === val);\n  } else {\n    return a === b;\n  }\n}\n/**\n * Return the last element of an array.\n */\nfunction last(a) {\n  return a.length > 0 ? a[a.length - 1] : null;\n}\nfunction wrapIntoObservable(value) {\n  if (isObservable(value)) {\n    return value;\n  }\n  if (ɵisPromise(value)) {\n    // Use `Promise.resolve()` to wrap promise-like instances.\n    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n    // change detection.\n    return from(Promise.resolve(value));\n  }\n  return of(value);\n}\nconst pathCompareMap = {\n  'exact': equalSegmentGroups,\n  'subset': containsSegmentGroup\n};\nconst paramCompareMap = {\n  'exact': equalParams,\n  'subset': containsParams,\n  'ignored': () => true\n};\nfunction containsTree(container, containee, options) {\n  return pathCompareMap[options.paths](container.root, containee.root, options.matrixParams) && paramCompareMap[options.queryParams](container.queryParams, containee.queryParams) && !(options.fragment === 'exact' && container.fragment !== containee.fragment);\n}\nfunction equalParams(container, containee) {\n  // TODO: This does not handle array params correctly.\n  return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee, matrixParams) {\n  if (!equalPath(container.segments, containee.segments)) return false;\n  if (!matrixParamsMatch(container.segments, containee.segments, matrixParams)) {\n    return false;\n  }\n  if (container.numberOfChildren !== containee.numberOfChildren) return false;\n  for (const c in containee.children) {\n    if (!container.children[c]) return false;\n    if (!equalSegmentGroups(container.children[c], containee.children[c], matrixParams)) return false;\n  }\n  return true;\n}\nfunction containsParams(container, containee) {\n  return Object.keys(containee).length <= Object.keys(container).length && Object.keys(containee).every(key => equalArraysOrString(container[key], containee[key]));\n}\nfunction containsSegmentGroup(container, containee, matrixParams) {\n  return containsSegmentGroupHelper(container, containee, containee.segments, matrixParams);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths, matrixParams) {\n  if (container.segments.length > containeePaths.length) {\n    const current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) return false;\n    if (containee.hasChildren()) return false;\n    if (!matrixParamsMatch(current, containeePaths, matrixParams)) return false;\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) return false;\n    if (!matrixParamsMatch(container.segments, containeePaths, matrixParams)) return false;\n    for (const c in containee.children) {\n      if (!container.children[c]) return false;\n      if (!containsSegmentGroup(container.children[c], containee.children[c], matrixParams)) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    const current = containeePaths.slice(0, container.segments.length);\n    const next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) return false;\n    if (!matrixParamsMatch(container.segments, current, matrixParams)) return false;\n    if (!container.children[PRIMARY_OUTLET]) return false;\n    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next, matrixParams);\n  }\n}\nfunction matrixParamsMatch(containerPaths, containeePaths, options) {\n  return containeePaths.every((containeeSegment, i) => {\n    return paramCompareMap[options](containerPaths[i].parameters, containeeSegment.parameters);\n  });\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * @usageNotes\n * ### Example\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlTree {\n  root;\n  queryParams;\n  fragment;\n  /** @internal */\n  _queryParamMap;\n  constructor(/** The root segment group of the URL tree */\n  root = new UrlSegmentGroup([], {}), /** The query params of the URL */\n  queryParams = {}, /** The fragment of the URL */\n  fragment = null) {\n    this.root = root;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (root.segments.length > 0) {\n        throw new ɵRuntimeError(4015 /* RuntimeErrorCode.INVALID_ROOT_URL_SEGMENT */, 'The root `UrlSegmentGroup` should not contain `segments`. ' + 'Instead, these segments belong in the `children` so they can be associated with a named outlet.');\n      }\n    }\n  }\n  get queryParamMap() {\n    this._queryParamMap ??= convertToParamMap(this.queryParams);\n    return this._queryParamMap;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return DEFAULT_SERIALIZER.serialize(this);\n  }\n}\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n * @publicApi\n */\nclass UrlSegmentGroup {\n  segments;\n  children;\n  /** The parent node in the url tree */\n  parent = null;\n  constructor(/** The URL segments of this group. See `UrlSegment` for more information */\n  segments, /** The list of children of this group */\n  children) {\n    this.segments = segments;\n    this.children = children;\n    Object.values(children).forEach(v => v.parent = this);\n  }\n  /** Whether the segment has child segments */\n  hasChildren() {\n    return this.numberOfChildren > 0;\n  }\n  /** Number of child segments */\n  get numberOfChildren() {\n    return Object.keys(this.children).length;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return serializePaths(this);\n  }\n}\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * @usageNotes\n * ### Example\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlSegment {\n  path;\n  parameters;\n  /** @internal */\n  _parameterMap;\n  constructor(/** The path part of a URL segment */\n  path, /** The matrix parameters associated with a segment */\n  parameters) {\n    this.path = path;\n    this.parameters = parameters;\n  }\n  get parameterMap() {\n    this._parameterMap ??= convertToParamMap(this.parameters);\n    return this._parameterMap;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return serializePath(this);\n  }\n}\nfunction equalSegments(as, bs) {\n  return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\nfunction equalPath(as, bs) {\n  if (as.length !== bs.length) return false;\n  return as.every((a, i) => a.path === bs[i].path);\n}\nfunction mapChildrenIntoArray(segment, fn) {\n  let res = [];\n  Object.entries(segment.children).forEach(([childOutlet, child]) => {\n    if (childOutlet === PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  Object.entries(segment.children).forEach(([childOutlet, child]) => {\n    if (childOutlet !== PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n * @publicApi\n */\nlet UrlSerializer = /*#__PURE__*/(() => {\n  class UrlSerializer {\n    static ɵfac = function UrlSerializer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UrlSerializer)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UrlSerializer,\n      factory: () => (() => new DefaultUrlSerializer())(),\n      providedIn: 'root'\n    });\n  }\n  return UrlSerializer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * @publicApi\n */\nclass DefaultUrlSerializer {\n  /** Parses a url into a `UrlTree` */\n  parse(url) {\n    const p = new UrlParser(url);\n    return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n  }\n  /** Converts a `UrlTree` into a url */\n  serialize(tree) {\n    const segment = `/${serializeSegment(tree.root, true)}`;\n    const query = serializeQueryParams(tree.queryParams);\n    const fragment = typeof tree.fragment === `string` ? `#${encodeUriFragment(tree.fragment)}` : '';\n    return `${segment}${query}${fragment}`;\n  }\n}\nconst DEFAULT_SERIALIZER = /*#__PURE__*/new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n  return segment.segments.map(p => serializePath(p)).join('/');\n}\nfunction serializeSegment(segment, root) {\n  if (!segment.hasChildren()) {\n    return serializePaths(segment);\n  }\n  if (root) {\n    const primary = segment.children[PRIMARY_OUTLET] ? serializeSegment(segment.children[PRIMARY_OUTLET], false) : '';\n    const children = [];\n    Object.entries(segment.children).forEach(([k, v]) => {\n      if (k !== PRIMARY_OUTLET) {\n        children.push(`${k}:${serializeSegment(v, false)}`);\n      }\n    });\n    return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n  } else {\n    const children = mapChildrenIntoArray(segment, (v, k) => {\n      if (k === PRIMARY_OUTLET) {\n        return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n      }\n      return [`${k}:${serializeSegment(v, false)}`];\n    });\n    // use no parenthesis if the only child is a primary outlet route\n    if (Object.keys(segment.children).length === 1 && segment.children[PRIMARY_OUTLET] != null) {\n      return `${serializePaths(segment)}/${children[0]}`;\n    }\n    return `${serializePaths(segment)}/(${children.join('//')})`;\n  }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n  return encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n  return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n  return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n  return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n  return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n  return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n  return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\nfunction serializeMatrixParams(params) {\n  return Object.entries(params).map(([key, value]) => `;${encodeUriSegment(key)}=${encodeUriSegment(value)}`).join('');\n}\nfunction serializeQueryParams(params) {\n  const strParams = Object.entries(params).map(([name, value]) => {\n    return Array.isArray(value) ? value.map(v => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&') : `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n  }).filter(s => s);\n  return strParams.length ? `?${strParams.join('&')}` : '';\n}\nconst SEGMENT_RE = /^[^\\/()?;#]+/;\nfunction matchSegments(str) {\n  const match = str.match(SEGMENT_RE);\n  return match ? match[0] : '';\n}\nconst MATRIX_PARAM_SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchMatrixKeySegments(str) {\n  const match = str.match(MATRIX_PARAM_SEGMENT_RE);\n  return match ? match[0] : '';\n}\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n  const match = str.match(QUERY_PARAM_RE);\n  return match ? match[0] : '';\n}\nconst QUERY_PARAM_VALUE_RE = /^[^&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n  const match = str.match(QUERY_PARAM_VALUE_RE);\n  return match ? match[0] : '';\n}\nclass UrlParser {\n  url;\n  remaining;\n  constructor(url) {\n    this.url = url;\n    this.remaining = url;\n  }\n  parseRootSegment() {\n    this.consumeOptional('/');\n    if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n      return new UrlSegmentGroup([], {});\n    }\n    // The root segment group never has segments\n    return new UrlSegmentGroup([], this.parseChildren());\n  }\n  parseQueryParams() {\n    const params = {};\n    if (this.consumeOptional('?')) {\n      do {\n        this.parseQueryParam(params);\n      } while (this.consumeOptional('&'));\n    }\n    return params;\n  }\n  parseFragment() {\n    return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n  }\n  parseChildren() {\n    if (this.remaining === '') {\n      return {};\n    }\n    this.consumeOptional('/');\n    const segments = [];\n    if (!this.peekStartsWith('(')) {\n      segments.push(this.parseSegment());\n    }\n    while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n      this.capture('/');\n      segments.push(this.parseSegment());\n    }\n    let children = {};\n    if (this.peekStartsWith('/(')) {\n      this.capture('/');\n      children = this.parseParens(true);\n    }\n    let res = {};\n    if (this.peekStartsWith('(')) {\n      res = this.parseParens(false);\n    }\n    if (segments.length > 0 || Object.keys(children).length > 0) {\n      res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n    }\n    return res;\n  }\n  // parse a segment with its matrix parameters\n  // ie `name;k1=v1;k2`\n  parseSegment() {\n    const path = matchSegments(this.remaining);\n    if (path === '' && this.peekStartsWith(';')) {\n      throw new ɵRuntimeError(4009 /* RuntimeErrorCode.EMPTY_PATH_WITH_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Empty path url segment cannot have parameters: '${this.remaining}'.`);\n    }\n    this.capture(path);\n    return new UrlSegment(decode(path), this.parseMatrixParams());\n  }\n  parseMatrixParams() {\n    const params = {};\n    while (this.consumeOptional(';')) {\n      this.parseParam(params);\n    }\n    return params;\n  }\n  parseParam(params) {\n    const key = matchMatrixKeySegments(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let value = '';\n    if (this.consumeOptional('=')) {\n      const valueMatch = matchSegments(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n    params[decode(key)] = decode(value);\n  }\n  // Parse a single query parameter `name[=value]`\n  parseQueryParam(params) {\n    const key = matchQueryParams(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let value = '';\n    if (this.consumeOptional('=')) {\n      const valueMatch = matchUrlQueryParamValue(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n    const decodedKey = decodeQuery(key);\n    const decodedVal = decodeQuery(value);\n    if (params.hasOwnProperty(decodedKey)) {\n      // Append to existing values\n      let currentVal = params[decodedKey];\n      if (!Array.isArray(currentVal)) {\n        currentVal = [currentVal];\n        params[decodedKey] = currentVal;\n      }\n      currentVal.push(decodedVal);\n    } else {\n      // Create a new value\n      params[decodedKey] = decodedVal;\n    }\n  }\n  // parse `(a/b//outlet_name:c/d)`\n  parseParens(allowPrimary) {\n    const segments = {};\n    this.capture('(');\n    while (!this.consumeOptional(')') && this.remaining.length > 0) {\n      const path = matchSegments(this.remaining);\n      const next = this.remaining[path.length];\n      // if is is not one of these characters, then the segment was unescaped\n      // or the group was not closed\n      if (next !== '/' && next !== ')' && next !== ';') {\n        throw new ɵRuntimeError(4010 /* RuntimeErrorCode.UNPARSABLE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot parse url '${this.url}'`);\n      }\n      let outletName = undefined;\n      if (path.indexOf(':') > -1) {\n        outletName = path.slice(0, path.indexOf(':'));\n        this.capture(outletName);\n        this.capture(':');\n      } else if (allowPrimary) {\n        outletName = PRIMARY_OUTLET;\n      }\n      const children = this.parseChildren();\n      segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] : new UrlSegmentGroup([], children);\n      this.consumeOptional('//');\n    }\n    return segments;\n  }\n  peekStartsWith(str) {\n    return this.remaining.startsWith(str);\n  }\n  // Consumes the prefix when it is present and returns whether it has been consumed\n  consumeOptional(str) {\n    if (this.peekStartsWith(str)) {\n      this.remaining = this.remaining.substring(str.length);\n      return true;\n    }\n    return false;\n  }\n  capture(str) {\n    if (!this.consumeOptional(str)) {\n      throw new ɵRuntimeError(4011 /* RuntimeErrorCode.UNEXPECTED_VALUE_IN_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Expected \"${str}\".`);\n    }\n  }\n}\nfunction createRoot(rootCandidate) {\n  return rootCandidate.segments.length > 0 ? new UrlSegmentGroup([], {\n    [PRIMARY_OUTLET]: rootCandidate\n  }) : rootCandidate;\n}\n/**\n * Recursively\n * - merges primary segment children into their parents\n * - drops empty children (those which have no segments and no children themselves). This latter\n * prevents serializing a group into something like `/a(aux:)`, where `aux` is an empty child\n * segment.\n * - merges named outlets without a primary segment sibling into the children. This prevents\n * serializing a URL like `//(a:a)(b:b) instead of `/(a:a//b:b)` when the aux b route lives on the\n * root but the `a` route lives under an empty path primary route.\n */\nfunction squashSegmentGroup(segmentGroup) {\n  const newChildren = {};\n  for (const [childOutlet, child] of Object.entries(segmentGroup.children)) {\n    const childCandidate = squashSegmentGroup(child);\n    // moves named children in an empty path primary child into this group\n    if (childOutlet === PRIMARY_OUTLET && childCandidate.segments.length === 0 && childCandidate.hasChildren()) {\n      for (const [grandChildOutlet, grandChild] of Object.entries(childCandidate.children)) {\n        newChildren[grandChildOutlet] = grandChild;\n      }\n    } // don't add empty children\n    else if (childCandidate.segments.length > 0 || childCandidate.hasChildren()) {\n      newChildren[childOutlet] = childCandidate;\n    }\n  }\n  const s = new UrlSegmentGroup(segmentGroup.segments, newChildren);\n  return mergeTrivialChildren(s);\n}\n/**\n * When possible, merges the primary outlet child into the parent `UrlSegmentGroup`.\n *\n * When a segment group has only one child which is a primary outlet, merges that child into the\n * parent. That is, the child segment group's segments are merged into the `s` and the child's\n * children become the children of `s`. Think of this like a 'squash', merging the child segment\n * group into the parent.\n */\nfunction mergeTrivialChildren(s) {\n  if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n    const c = s.children[PRIMARY_OUTLET];\n    return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n  }\n  return s;\n}\nfunction isUrlTree(v) {\n  return v instanceof UrlTree;\n}\n\n/**\n * Creates a `UrlTree` relative to an `ActivatedRouteSnapshot`.\n *\n * @publicApi\n *\n *\n * @param relativeTo The `ActivatedRouteSnapshot` to apply the commands to\n * @param commands An array of URL fragments with which to construct the new URL tree.\n * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n * segments, followed by the parameters for each segment.\n * The fragments are applied to the one provided in the `relativeTo` parameter.\n * @param queryParams The query parameters for the `UrlTree`. `null` if the `UrlTree` does not have\n *     any query parameters.\n * @param fragment The fragment for the `UrlTree`. `null` if the `UrlTree` does not have a fragment.\n *\n * @usageNotes\n *\n * ```ts\n * // create /team/33/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, 'user', 11]);\n *\n * // create /team/33;expand=true/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {expand: true}, 'user', 11]);\n *\n * // you can collapse static segments like this (this works only with the first passed-in value):\n * createUrlTreeFromSnapshot(snapshot, ['/team/33/user', userId]);\n *\n * // If the first segment can contain slashes, and you do not want the router to split it,\n * // you can do the following:\n * createUrlTreeFromSnapshot(snapshot, [{segmentPath: '/one/two'}]);\n *\n * // create /team/33/(user/11//right:chat)\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right:\n * 'chat'}}], null, null);\n *\n * // remove the right secondary node\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n *\n * // For the examples below, assume the current URL is for the `/team/33/user/11` and the\n * `ActivatedRouteSnapshot` points to `user/11`:\n *\n * // navigate to /team/33/user/11/details\n * createUrlTreeFromSnapshot(snapshot, ['details']);\n *\n * // navigate to /team/33/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../22']);\n *\n * // navigate to /team/44/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../../team/44/user/22']);\n * ```\n */\nfunction createUrlTreeFromSnapshot(relativeTo, commands, queryParams = null, fragment = null) {\n  const relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeTo);\n  return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, queryParams, fragment);\n}\nfunction createSegmentGroupFromRoute(route) {\n  let targetGroup;\n  function createSegmentGroupFromRouteRecursive(currentRoute) {\n    const childOutlets = {};\n    for (const childSnapshot of currentRoute.children) {\n      const root = createSegmentGroupFromRouteRecursive(childSnapshot);\n      childOutlets[childSnapshot.outlet] = root;\n    }\n    const segmentGroup = new UrlSegmentGroup(currentRoute.url, childOutlets);\n    if (currentRoute === route) {\n      targetGroup = segmentGroup;\n    }\n    return segmentGroup;\n  }\n  const rootCandidate = createSegmentGroupFromRouteRecursive(route.root);\n  const rootSegmentGroup = createRoot(rootCandidate);\n  return targetGroup ?? rootSegmentGroup;\n}\nfunction createUrlTreeFromSegmentGroup(relativeTo, commands, queryParams, fragment) {\n  let root = relativeTo;\n  while (root.parent) {\n    root = root.parent;\n  }\n  // There are no commands so the `UrlTree` goes to the same path as the one created from the\n  // `UrlSegmentGroup`. All we need to do is update the `queryParams` and `fragment` without\n  // applying any other logic.\n  if (commands.length === 0) {\n    return tree(root, root, root, queryParams, fragment);\n  }\n  const nav = computeNavigation(commands);\n  if (nav.toRoot()) {\n    return tree(root, root, new UrlSegmentGroup([], {}), queryParams, fragment);\n  }\n  const position = findStartingPositionForTargetGroup(nav, root, relativeTo);\n  const newSegmentGroup = position.processChildren ? updateSegmentGroupChildren(position.segmentGroup, position.index, nav.commands) : updateSegmentGroup(position.segmentGroup, position.index, nav.commands);\n  return tree(root, position.segmentGroup, newSegmentGroup, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n  return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * Determines if a given command has an `outlets` map. When we encounter a command\n * with an outlets k/v map, we need to apply each outlet individually to the existing segment.\n */\nfunction isCommandWithOutlets(command) {\n  return typeof command === 'object' && command != null && command.outlets;\n}\nfunction tree(oldRoot, oldSegmentGroup, newSegmentGroup, queryParams, fragment) {\n  let qp = {};\n  if (queryParams) {\n    Object.entries(queryParams).forEach(([name, value]) => {\n      qp[name] = Array.isArray(value) ? value.map(v => `${v}`) : `${value}`;\n    });\n  }\n  let rootCandidate;\n  if (oldRoot === oldSegmentGroup) {\n    rootCandidate = newSegmentGroup;\n  } else {\n    rootCandidate = replaceSegment(oldRoot, oldSegmentGroup, newSegmentGroup);\n  }\n  const newRoot = createRoot(squashSegmentGroup(rootCandidate));\n  return new UrlTree(newRoot, qp, fragment);\n}\n/**\n * Replaces the `oldSegment` which is located in some child of the `current` with the `newSegment`.\n * This also has the effect of creating new `UrlSegmentGroup` copies to update references. This\n * shouldn't be necessary but the fallback logic for an invalid ActivatedRoute in the creation uses\n * the Router's current url tree. If we don't create new segment groups, we end up modifying that\n * value.\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n  const children = {};\n  Object.entries(current.children).forEach(([outletName, c]) => {\n    if (c === oldSegment) {\n      children[outletName] = newSegment;\n    } else {\n      children[outletName] = replaceSegment(c, oldSegment, newSegment);\n    }\n  });\n  return new UrlSegmentGroup(current.segments, children);\n}\nclass Navigation {\n  isAbsolute;\n  numberOfDoubleDots;\n  commands;\n  constructor(isAbsolute, numberOfDoubleDots, commands) {\n    this.isAbsolute = isAbsolute;\n    this.numberOfDoubleDots = numberOfDoubleDots;\n    this.commands = commands;\n    if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n      throw new ɵRuntimeError(4003 /* RuntimeErrorCode.ROOT_SEGMENT_MATRIX_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Root segment cannot have matrix parameters');\n    }\n    const cmdWithOutlet = commands.find(isCommandWithOutlets);\n    if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n      throw new ɵRuntimeError(4004 /* RuntimeErrorCode.MISPLACED_OUTLETS_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) && '{outlets:{}} has to be the last command');\n    }\n  }\n  toRoot() {\n    return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n  }\n}\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n  if (typeof commands[0] === 'string' && commands.length === 1 && commands[0] === '/') {\n    return new Navigation(true, 0, commands);\n  }\n  let numberOfDoubleDots = 0;\n  let isAbsolute = false;\n  const res = commands.reduce((res, cmd, cmdIdx) => {\n    if (typeof cmd === 'object' && cmd != null) {\n      if (cmd.outlets) {\n        const outlets = {};\n        Object.entries(cmd.outlets).forEach(([name, commands]) => {\n          outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n        });\n        return [...res, {\n          outlets\n        }];\n      }\n      if (cmd.segmentPath) {\n        return [...res, cmd.segmentPath];\n      }\n    }\n    if (!(typeof cmd === 'string')) {\n      return [...res, cmd];\n    }\n    if (cmdIdx === 0) {\n      cmd.split('/').forEach((urlPart, partIndex) => {\n        if (partIndex == 0 && urlPart === '.') {\n          // skip './a'\n        } else if (partIndex == 0 && urlPart === '') {\n          //  '/a'\n          isAbsolute = true;\n        } else if (urlPart === '..') {\n          //  '../a'\n          numberOfDoubleDots++;\n        } else if (urlPart != '') {\n          res.push(urlPart);\n        }\n      });\n      return res;\n    }\n    return [...res, cmd];\n  }, []);\n  return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nclass Position {\n  segmentGroup;\n  processChildren;\n  index;\n  constructor(segmentGroup, processChildren, index) {\n    this.segmentGroup = segmentGroup;\n    this.processChildren = processChildren;\n    this.index = index;\n  }\n}\nfunction findStartingPositionForTargetGroup(nav, root, target) {\n  if (nav.isAbsolute) {\n    return new Position(root, true, 0);\n  }\n  if (!target) {\n    // `NaN` is used only to maintain backwards compatibility with incorrectly mocked\n    // `ActivatedRouteSnapshot` in tests. In prior versions of this code, the position here was\n    // determined based on an internal property that was rarely mocked, resulting in `NaN`. In\n    // reality, this code path should _never_ be touched since `target` is not allowed to be falsey.\n    return new Position(root, false, NaN);\n  }\n  if (target.parent === null) {\n    return new Position(target, true, 0);\n  }\n  const modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n  const index = target.segments.length - 1 + modifier;\n  return createPositionApplyingDoubleDots(target, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n  let g = group;\n  let ci = index;\n  let dd = numberOfDoubleDots;\n  while (dd > ci) {\n    dd -= ci;\n    g = g.parent;\n    if (!g) {\n      throw new ɵRuntimeError(4005 /* RuntimeErrorCode.INVALID_DOUBLE_DOTS */, (typeof ngDevMode === 'undefined' || ngDevMode) && \"Invalid number of '../'\");\n    }\n    ci = g.segments.length;\n  }\n  return new Position(g, false, ci - dd);\n}\nfunction getOutlets(commands) {\n  if (isCommandWithOutlets(commands[0])) {\n    return commands[0].outlets;\n  }\n  return {\n    [PRIMARY_OUTLET]: commands\n  };\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n  segmentGroup ??= new UrlSegmentGroup([], {});\n  if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n    return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n  }\n  const m = prefixedWith(segmentGroup, startIndex, commands);\n  const slicedCommands = commands.slice(m.commandIndex);\n  if (m.match && m.pathIndex < segmentGroup.segments.length) {\n    const g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n    g.children[PRIMARY_OUTLET] = new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n    return updateSegmentGroupChildren(g, 0, slicedCommands);\n  } else if (m.match && slicedCommands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else if (m.match && !segmentGroup.hasChildren()) {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  } else if (m.match) {\n    return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n  } else {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n  if (commands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else {\n    const outlets = getOutlets(commands);\n    const children = {};\n    // If the set of commands applies to anything other than the primary outlet and the child\n    // segment is an empty path primary segment on its own, we want to apply the commands to the\n    // empty child path rather than here. The outcome is that the empty primary child is effectively\n    // removed from the final output UrlTree. Imagine the following config:\n    //\n    // {path: '', children: [{path: '**', outlet: 'popup'}]}.\n    //\n    // Navigation to /(popup:a) will activate the child outlet correctly Given a follow-up\n    // navigation with commands\n    // ['/', {outlets: {'popup': 'b'}}], we _would not_ want to apply the outlet commands to the\n    // root segment because that would result in\n    // //(popup:a)(popup:b) since the outlet command got applied one level above where it appears in\n    // the `ActivatedRoute` rather than updating the existing one.\n    //\n    // Because empty paths do not appear in the URL segments and the fact that the segments used in\n    // the output `UrlTree` are squashed to eliminate these empty paths where possible\n    // https://github.com/angular/angular/blob/13f10de40e25c6900ca55bd83b36bd533dacfa9e/packages/router/src/url_tree.ts#L755\n    // it can be hard to determine what is the right thing to do when applying commands to a\n    // `UrlSegmentGroup` that is created from an \"unsquashed\"/expanded `ActivatedRoute` tree.\n    // This code effectively \"squashes\" empty path primary routes when they have no siblings on\n    // the same level of the tree.\n    if (Object.keys(outlets).some(o => o !== PRIMARY_OUTLET) && segmentGroup.children[PRIMARY_OUTLET] && segmentGroup.numberOfChildren === 1 && segmentGroup.children[PRIMARY_OUTLET].segments.length === 0) {\n      const childrenOfEmptyChild = updateSegmentGroupChildren(segmentGroup.children[PRIMARY_OUTLET], startIndex, commands);\n      return new UrlSegmentGroup(segmentGroup.segments, childrenOfEmptyChild.children);\n    }\n    Object.entries(outlets).forEach(([outlet, commands]) => {\n      if (typeof commands === 'string') {\n        commands = [commands];\n      }\n      if (commands !== null) {\n        children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n      }\n    });\n    Object.entries(segmentGroup.children).forEach(([childOutlet, child]) => {\n      if (outlets[childOutlet] === undefined) {\n        children[childOutlet] = child;\n      }\n    });\n    return new UrlSegmentGroup(segmentGroup.segments, children);\n  }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n  let currentCommandIndex = 0;\n  let currentPathIndex = startIndex;\n  const noMatch = {\n    match: false,\n    pathIndex: 0,\n    commandIndex: 0\n  };\n  while (currentPathIndex < segmentGroup.segments.length) {\n    if (currentCommandIndex >= commands.length) return noMatch;\n    const path = segmentGroup.segments[currentPathIndex];\n    const command = commands[currentCommandIndex];\n    // Do not try to consume command as part of the prefixing if it has outlets because it can\n    // contain outlets other than the one being processed. Consuming the outlets command would\n    // result in other outlets being ignored.\n    if (isCommandWithOutlets(command)) {\n      break;\n    }\n    const curr = `${command}`;\n    const next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n    if (currentPathIndex > 0 && curr === undefined) break;\n    if (curr && next && typeof next === 'object' && next.outlets === undefined) {\n      if (!compare(curr, next, path)) return noMatch;\n      currentCommandIndex += 2;\n    } else {\n      if (!compare(curr, {}, path)) return noMatch;\n      currentCommandIndex++;\n    }\n    currentPathIndex++;\n  }\n  return {\n    match: true,\n    pathIndex: currentPathIndex,\n    commandIndex: currentCommandIndex\n  };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n  const paths = segmentGroup.segments.slice(0, startIndex);\n  let i = 0;\n  while (i < commands.length) {\n    const command = commands[i];\n    if (isCommandWithOutlets(command)) {\n      const children = createNewSegmentChildren(command.outlets);\n      return new UrlSegmentGroup(paths, children);\n    }\n    // if we start with an object literal, we need to reuse the path part from the segment\n    if (i === 0 && isMatrixParams(commands[0])) {\n      const p = segmentGroup.segments[startIndex];\n      paths.push(new UrlSegment(p.path, stringify(commands[0])));\n      i++;\n      continue;\n    }\n    const curr = isCommandWithOutlets(command) ? command.outlets[PRIMARY_OUTLET] : `${command}`;\n    const next = i < commands.length - 1 ? commands[i + 1] : null;\n    if (curr && next && isMatrixParams(next)) {\n      paths.push(new UrlSegment(curr, stringify(next)));\n      i += 2;\n    } else {\n      paths.push(new UrlSegment(curr, {}));\n      i++;\n    }\n  }\n  return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n  const children = {};\n  Object.entries(outlets).forEach(([outlet, commands]) => {\n    if (typeof commands === 'string') {\n      commands = [commands];\n    }\n    if (commands !== null) {\n      children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n    }\n  });\n  return children;\n}\nfunction stringify(params) {\n  const res = {};\n  Object.entries(params).forEach(([k, v]) => res[k] = `${v}`);\n  return res;\n}\nfunction compare(path, params, segment) {\n  return path == segment.path && shallowEqual(params, segment.parameters);\n}\nconst IMPERATIVE_NAVIGATION = 'imperative';\n/**\n * Identifies the type of a router event.\n *\n * @publicApi\n */\nvar EventType = /*#__PURE__*/function (EventType) {\n  EventType[EventType[\"NavigationStart\"] = 0] = \"NavigationStart\";\n  EventType[EventType[\"NavigationEnd\"] = 1] = \"NavigationEnd\";\n  EventType[EventType[\"NavigationCancel\"] = 2] = \"NavigationCancel\";\n  EventType[EventType[\"NavigationError\"] = 3] = \"NavigationError\";\n  EventType[EventType[\"RoutesRecognized\"] = 4] = \"RoutesRecognized\";\n  EventType[EventType[\"ResolveStart\"] = 5] = \"ResolveStart\";\n  EventType[EventType[\"ResolveEnd\"] = 6] = \"ResolveEnd\";\n  EventType[EventType[\"GuardsCheckStart\"] = 7] = \"GuardsCheckStart\";\n  EventType[EventType[\"GuardsCheckEnd\"] = 8] = \"GuardsCheckEnd\";\n  EventType[EventType[\"RouteConfigLoadStart\"] = 9] = \"RouteConfigLoadStart\";\n  EventType[EventType[\"RouteConfigLoadEnd\"] = 10] = \"RouteConfigLoadEnd\";\n  EventType[EventType[\"ChildActivationStart\"] = 11] = \"ChildActivationStart\";\n  EventType[EventType[\"ChildActivationEnd\"] = 12] = \"ChildActivationEnd\";\n  EventType[EventType[\"ActivationStart\"] = 13] = \"ActivationStart\";\n  EventType[EventType[\"ActivationEnd\"] = 14] = \"ActivationEnd\";\n  EventType[EventType[\"Scroll\"] = 15] = \"Scroll\";\n  EventType[EventType[\"NavigationSkipped\"] = 16] = \"NavigationSkipped\";\n  return EventType;\n}(EventType || {});\n/**\n * Base for events the router goes through, as opposed to events tied to a specific\n * route. Fired one time for any given navigation.\n *\n * The following code shows how a class subscribes to router events.\n *\n * ```ts\n * import {Event, RouterEvent, Router} from '@angular/router';\n *\n * class MyService {\n *   constructor(public router: Router) {\n *     router.events.pipe(\n *        filter((e: Event | RouterEvent): e is RouterEvent => e instanceof RouterEvent)\n *     ).subscribe((e: RouterEvent) => {\n *       // Do something\n *     });\n *   }\n * }\n * ```\n *\n * @see {@link Event}\n * @see [Router events summary](guide/routing/router-reference#router-events)\n * @publicApi\n */\nclass RouterEvent {\n  id;\n  url;\n  constructor(/** A unique ID that the router assigns to every router navigation. */\n  id, /** The URL that is the destination for this navigation. */\n  url) {\n    this.id = id;\n    this.url = url;\n  }\n}\n/**\n * An event triggered when a navigation starts.\n *\n * @publicApi\n */\nclass NavigationStart extends RouterEvent {\n  type = EventType.NavigationStart;\n  /**\n   * Identifies the call or event that triggered the navigation.\n   * An `imperative` trigger is a call to `router.navigateByUrl()` or `router.navigate()`.\n   *\n   * @see {@link NavigationEnd}\n   * @see {@link NavigationCancel}\n   * @see {@link NavigationError}\n   */\n  navigationTrigger;\n  /**\n   * The navigation state that was previously supplied to the `pushState` call,\n   * when the navigation is triggered by a `popstate` event. Otherwise null.\n   *\n   * The state object is defined by `NavigationExtras`, and contains any\n   * developer-defined state value, as well as a unique ID that\n   * the router assigns to every router transition/navigation.\n   *\n   * From the perspective of the router, the router never \"goes back\".\n   * When the user clicks on the back button in the browser,\n   * a new navigation ID is created.\n   *\n   * Use the ID in this previous-state object to differentiate between a newly created\n   * state and one returned to by a `popstate` event, so that you can restore some\n   * remembered state, such as scroll position.\n   *\n   */\n  restoredState;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  navigationTrigger = 'imperative', /** @docsNotRequired */\n  restoredState = null) {\n    super(id, url);\n    this.navigationTrigger = navigationTrigger;\n    this.restoredState = restoredState;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationStart(id: ${this.id}, url: '${this.url}')`;\n  }\n}\n/**\n * An event triggered when a navigation ends successfully.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationCancel}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationEnd extends RouterEvent {\n  urlAfterRedirects;\n  type = EventType.NavigationEnd;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n  }\n}\n/**\n * A code for the `NavigationCancel` event of the `Router` to indicate the\n * reason a navigation failed.\n *\n * @publicApi\n */\nvar NavigationCancellationCode = /*#__PURE__*/function (NavigationCancellationCode) {\n  /**\n   * A navigation failed because a guard returned a `UrlTree` to redirect.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"Redirect\"] = 0] = \"Redirect\";\n  /**\n   * A navigation failed because a more recent navigation started.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"SupersededByNewNavigation\"] = 1] = \"SupersededByNewNavigation\";\n  /**\n   * A navigation failed because one of the resolvers completed without emitting a value.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"NoDataFromResolver\"] = 2] = \"NoDataFromResolver\";\n  /**\n   * A navigation failed because a guard returned `false`.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"GuardRejected\"] = 3] = \"GuardRejected\";\n  return NavigationCancellationCode;\n}(NavigationCancellationCode || {});\n/**\n * A code for the `NavigationSkipped` event of the `Router` to indicate the\n * reason a navigation was skipped.\n *\n * @publicApi\n */\nvar NavigationSkippedCode = /*#__PURE__*/function (NavigationSkippedCode) {\n  /**\n   * A navigation was skipped because the navigation URL was the same as the current Router URL.\n   */\n  NavigationSkippedCode[NavigationSkippedCode[\"IgnoredSameUrlNavigation\"] = 0] = \"IgnoredSameUrlNavigation\";\n  /**\n   * A navigation was skipped because the configured `UrlHandlingStrategy` return `false` for both\n   * the current Router URL and the target of the navigation.\n   *\n   * @see {@link UrlHandlingStrategy}\n   */\n  NavigationSkippedCode[NavigationSkippedCode[\"IgnoredByUrlHandlingStrategy\"] = 1] = \"IgnoredByUrlHandlingStrategy\";\n  return NavigationSkippedCode;\n}(NavigationSkippedCode || {});\n/**\n * An event triggered when a navigation is canceled, directly or indirectly.\n * This can happen for several reasons including when a route guard\n * returns `false` or initiates a redirect by returning a `UrlTree`.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationCancel extends RouterEvent {\n  reason;\n  code;\n  type = EventType.NavigationCancel;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url,\n  /**\n   * A description of why the navigation was cancelled. For debug purposes only. Use `code`\n   * instead for a stable cancellation reason that can be used in production.\n   */\n  reason,\n  /**\n   * A code to indicate why the navigation was canceled. This cancellation code is stable for\n   * the reason and can be relied on whereas the `reason` string could change and should not be\n   * used in production.\n   */\n  code) {\n    super(id, url);\n    this.reason = reason;\n    this.code = code;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;\n  }\n}\n/**\n * An event triggered when a navigation is skipped.\n * This can happen for a couple reasons including onSameUrlHandling\n * is set to `ignore` and the navigation URL is not different than the\n * current state.\n *\n * @publicApi\n */\nclass NavigationSkipped extends RouterEvent {\n  reason;\n  code;\n  type = EventType.NavigationSkipped;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url,\n  /**\n   * A description of why the navigation was skipped. For debug purposes only. Use `code`\n   * instead for a stable skipped reason that can be used in production.\n   */\n  reason,\n  /**\n   * A code to indicate why the navigation was skipped. This code is stable for\n   * the reason and can be relied on whereas the `reason` string could change and should not be\n   * used in production.\n   */\n  code) {\n    super(id, url);\n    this.reason = reason;\n    this.code = code;\n  }\n}\n/**\n * An event triggered when a navigation fails due to an unexpected error.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationCancel}\n *\n * @publicApi\n */\nclass NavigationError extends RouterEvent {\n  error;\n  target;\n  type = EventType.NavigationError;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  error,\n  /**\n   * The target of the navigation when the error occurred.\n   *\n   * Note that this can be `undefined` because an error could have occurred before the\n   * `RouterStateSnapshot` was created for the navigation.\n   */\n  target) {\n    super(id, url);\n    this.error = error;\n    this.target = target;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n  }\n}\n/**\n * An event triggered when routes are recognized.\n *\n * @publicApi\n */\nclass RoutesRecognized extends RouterEvent {\n  urlAfterRedirects;\n  state;\n  type = EventType.RoutesRecognized;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the start of the Guard phase of routing.\n *\n * @see {@link GuardsCheckEnd}\n *\n * @publicApi\n */\nclass GuardsCheckStart extends RouterEvent {\n  urlAfterRedirects;\n  state;\n  type = EventType.GuardsCheckStart;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n  }\n  toString() {\n    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the end of the Guard phase of routing.\n *\n * @see {@link GuardsCheckStart}\n *\n * @publicApi\n */\nclass GuardsCheckEnd extends RouterEvent {\n  urlAfterRedirects;\n  state;\n  shouldActivate;\n  type = EventType.GuardsCheckEnd;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state, /** @docsNotRequired */\n  shouldActivate) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.shouldActivate = shouldActivate;\n  }\n  toString() {\n    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n  }\n}\n/**\n * An event triggered at the start of the Resolve phase of routing.\n *\n * Runs in the \"resolve\" phase whether or not there is anything to resolve.\n * In future, may change to only run when there are things to be resolved.\n *\n * @see {@link ResolveEnd}\n *\n * @publicApi\n */\nclass ResolveStart extends RouterEvent {\n  urlAfterRedirects;\n  state;\n  type = EventType.ResolveStart;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n  }\n  toString() {\n    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the end of the Resolve phase of routing.\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ResolveEnd extends RouterEvent {\n  urlAfterRedirects;\n  state;\n  type = EventType.ResolveEnd;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n  }\n  toString() {\n    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered before lazy loading a route configuration.\n *\n * @see {@link RouteConfigLoadEnd}\n *\n * @publicApi\n */\nclass RouteConfigLoadStart {\n  route;\n  type = EventType.RouteConfigLoadStart;\n  constructor(/** @docsNotRequired */\n  route) {\n    this.route = route;\n  }\n  toString() {\n    return `RouteConfigLoadStart(path: ${this.route.path})`;\n  }\n}\n/**\n * An event triggered when a route has been lazy loaded.\n *\n * @see {@link RouteConfigLoadStart}\n *\n * @publicApi\n */\nclass RouteConfigLoadEnd {\n  route;\n  type = EventType.RouteConfigLoadEnd;\n  constructor(/** @docsNotRequired */\n  route) {\n    this.route = route;\n  }\n  toString() {\n    return `RouteConfigLoadEnd(path: ${this.route.path})`;\n  }\n}\n/**\n * An event triggered at the start of the child-activation\n * part of the Resolve phase of routing.\n * @see {@link ChildActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ChildActivationStart {\n  snapshot;\n  type = EventType.ChildActivationStart;\n  constructor(/** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ChildActivationStart(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the end of the child-activation part\n * of the Resolve phase of routing.\n * @see {@link ChildActivationStart}\n * @see {@link ResolveStart}\n * @publicApi\n */\nclass ChildActivationEnd {\n  snapshot;\n  type = EventType.ChildActivationEnd;\n  constructor(/** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ChildActivationEnd(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the start of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationStart {\n  snapshot;\n  type = EventType.ActivationStart;\n  constructor(/** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ActivationStart(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the end of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationStart}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationEnd {\n  snapshot;\n  type = EventType.ActivationEnd;\n  constructor(/** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ActivationEnd(path: '${path}')`;\n  }\n}\n/**\n * An event triggered by scrolling.\n *\n * @publicApi\n */\nclass Scroll {\n  routerEvent;\n  position;\n  anchor;\n  type = EventType.Scroll;\n  constructor(/** @docsNotRequired */\n  routerEvent, /** @docsNotRequired */\n  position, /** @docsNotRequired */\n  anchor) {\n    this.routerEvent = routerEvent;\n    this.position = position;\n    this.anchor = anchor;\n  }\n  toString() {\n    const pos = this.position ? `${this.position[0]}, ${this.position[1]}` : null;\n    return `Scroll(anchor: '${this.anchor}', position: '${pos}')`;\n  }\n}\nclass BeforeActivateRoutes {}\nclass RedirectRequest {\n  url;\n  navigationBehaviorOptions;\n  constructor(url, navigationBehaviorOptions) {\n    this.url = url;\n    this.navigationBehaviorOptions = navigationBehaviorOptions;\n  }\n}\nfunction stringifyEvent(routerEvent) {\n  switch (routerEvent.type) {\n    case EventType.ActivationEnd:\n      return `ActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ActivationStart:\n      return `ActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ChildActivationEnd:\n      return `ChildActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ChildActivationStart:\n      return `ChildActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.GuardsCheckEnd:\n      return `GuardsCheckEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state}, shouldActivate: ${routerEvent.shouldActivate})`;\n    case EventType.GuardsCheckStart:\n      return `GuardsCheckStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.NavigationCancel:\n      return `NavigationCancel(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.NavigationSkipped:\n      return `NavigationSkipped(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.NavigationEnd:\n      return `NavigationEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}')`;\n    case EventType.NavigationError:\n      return `NavigationError(id: ${routerEvent.id}, url: '${routerEvent.url}', error: ${routerEvent.error})`;\n    case EventType.NavigationStart:\n      return `NavigationStart(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.ResolveEnd:\n      return `ResolveEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.ResolveStart:\n      return `ResolveStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.RouteConfigLoadEnd:\n      return `RouteConfigLoadEnd(path: ${routerEvent.route.path})`;\n    case EventType.RouteConfigLoadStart:\n      return `RouteConfigLoadStart(path: ${routerEvent.route.path})`;\n    case EventType.RoutesRecognized:\n      return `RoutesRecognized(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.Scroll:\n      const pos = routerEvent.position ? `${routerEvent.position[0]}, ${routerEvent.position[1]}` : null;\n      return `Scroll(anchor: '${routerEvent.anchor}', position: '${pos}')`;\n  }\n}\n\n/**\n * Creates an `EnvironmentInjector` if the `Route` has providers and one does not already exist\n * and returns the injector. Otherwise, if the `Route` does not have `providers`, returns the\n * `currentInjector`.\n *\n * @param route The route that might have providers\n * @param currentInjector The parent injector of the `Route`\n */\nfunction getOrCreateRouteInjectorIfNeeded(route, currentInjector) {\n  if (route.providers && !route._injector) {\n    route._injector = createEnvironmentInjector(route.providers, currentInjector, `Route: ${route.path}`);\n  }\n  return route._injector ?? currentInjector;\n}\nfunction getLoadedRoutes$1(route) {\n  return route._loadedRoutes;\n}\nfunction getLoadedInjector(route) {\n  return route._loadedInjector;\n}\nfunction getLoadedComponent(route) {\n  return route._loadedComponent;\n}\nfunction getProvidersInjector(route) {\n  return route._injector;\n}\nfunction validateConfig(config, parentPath = '', requireStandaloneComponents = false) {\n  // forEach doesn't iterate undefined values\n  for (let i = 0; i < config.length; i++) {\n    const route = config[i];\n    const fullPath = getFullPath(parentPath, route);\n    validateNode(route, fullPath, requireStandaloneComponents);\n  }\n}\nfunction assertStandalone(fullPath, component) {\n  if (component && ɵisNgModule(component)) {\n    throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. You are using 'loadComponent' with a module, ` + `but it must be used with standalone components. Use 'loadChildren' instead.`);\n  } else if (component && !isStandalone(component)) {\n    throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. The component must be standalone.`);\n  }\n}\nfunction validateNode(route, fullPath, requireStandaloneComponents) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!route) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);\n    }\n    if (Array.isArray(route)) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': Array cannot be specified`);\n    }\n    if (!route.redirectTo && !route.component && !route.loadComponent && !route.children && !route.loadChildren && route.outlet && route.outlet !== PRIMARY_OUTLET) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': a componentless route without children or loadChildren cannot have a named outlet set`);\n    }\n    if (route.redirectTo && route.children) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);\n    }\n    if (route.redirectTo && route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);\n    }\n    if (route.children && route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);\n    }\n    if (route.redirectTo && (route.component || route.loadComponent)) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and component/loadComponent cannot be used together`);\n    }\n    if (route.component && route.loadComponent) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': component and loadComponent cannot be used together`);\n    }\n    if (route.redirectTo && route.canActivate) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and canActivate cannot be used together. Redirects happen before activation ` + `so canActivate will never be executed.`);\n    }\n    if (route.path && route.matcher) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.loadComponent && !route.children && !route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. One of the following must be provided: component, loadComponent, redirectTo, children or loadChildren`);\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path cannot start with a slash`);\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n      const exp = `The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`;\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '{path: \"${fullPath}\", redirectTo: \"${route.redirectTo}\"}': please provide 'pathMatch'. ${exp}`);\n    }\n    if (requireStandaloneComponents) {\n      assertStandalone(fullPath, route.component);\n    }\n  }\n  if (route.children) {\n    validateConfig(route.children, fullPath, requireStandaloneComponents);\n  }\n}\nfunction getFullPath(parentPath, currentRoute) {\n  if (!currentRoute) {\n    return parentPath;\n  }\n  if (!parentPath && !currentRoute.path) {\n    return '';\n  } else if (parentPath && !currentRoute.path) {\n    return `${parentPath}/`;\n  } else if (!parentPath && currentRoute.path) {\n    return currentRoute.path;\n  } else {\n    return `${parentPath}/${currentRoute.path}`;\n  }\n}\n/** Returns the `route.outlet` or PRIMARY_OUTLET if none exists. */\nfunction getOutlet(route) {\n  return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * Sorts the `routes` such that the ones with an outlet matching `outletName` come first.\n * The order of the configs is otherwise preserved.\n */\nfunction sortByMatchingOutlets(routes, outletName) {\n  const sortedConfig = routes.filter(r => getOutlet(r) === outletName);\n  sortedConfig.push(...routes.filter(r => getOutlet(r) !== outletName));\n  return sortedConfig;\n}\n/**\n * Gets the first injector in the snapshot's parent tree.\n *\n * If the `Route` has a static list of providers, the returned injector will be the one created from\n * those. If it does not exist, the returned injector may come from the parents, which may be from a\n * loaded config or their static providers.\n *\n * Returns `null` if there is neither this nor any parents have a stored injector.\n *\n * Generally used for retrieving the injector to use for getting tokens for guards/resolvers and\n * also used for getting the correct injector to use for creating components.\n */\nfunction getClosestRouteInjector(snapshot) {\n  if (!snapshot) return null;\n  // If the current route has its own injector, which is created from the static providers on the\n  // route itself, we should use that. Otherwise, we start at the parent since we do not want to\n  // include the lazy loaded injector from this route.\n  if (snapshot.routeConfig?._injector) {\n    return snapshot.routeConfig._injector;\n  }\n  for (let s = snapshot.parent; s; s = s.parent) {\n    const route = s.routeConfig;\n    // Note that the order here is important. `_loadedInjector` stored on the route with\n    // `loadChildren: () => NgModule` so it applies to child routes with priority. The `_injector`\n    // is created from the static providers on that parent route, so it applies to the children as\n    // well, but only if there is no lazy loaded NgModuleRef injector.\n    if (route?._loadedInjector) return route._loadedInjector;\n    if (route?._injector) return route._injector;\n  }\n  return null;\n}\n\n/**\n * Store contextual information about a `RouterOutlet`\n *\n * @publicApi\n */\nclass OutletContext {\n  rootInjector;\n  outlet = null;\n  route = null;\n  children;\n  attachRef = null;\n  get injector() {\n    return getClosestRouteInjector(this.route?.snapshot) ?? this.rootInjector;\n  }\n  constructor(rootInjector) {\n    this.rootInjector = rootInjector;\n    this.children = new ChildrenOutletContexts(this.rootInjector);\n  }\n}\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n * @publicApi\n */\nlet ChildrenOutletContexts = /*#__PURE__*/(() => {\n  class ChildrenOutletContexts {\n    rootInjector;\n    // contexts for child outlets, by name.\n    contexts = new Map();\n    /** @nodoc */\n    constructor(rootInjector) {\n      this.rootInjector = rootInjector;\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    onChildOutletCreated(childName, outlet) {\n      const context = this.getOrCreateContext(childName);\n      context.outlet = outlet;\n      this.contexts.set(childName, context);\n    }\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    onChildOutletDestroyed(childName) {\n      const context = this.getContext(childName);\n      if (context) {\n        context.outlet = null;\n        context.attachRef = null;\n      }\n    }\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    onOutletDeactivated() {\n      const contexts = this.contexts;\n      this.contexts = new Map();\n      return contexts;\n    }\n    onOutletReAttached(contexts) {\n      this.contexts = contexts;\n    }\n    getOrCreateContext(childName) {\n      let context = this.getContext(childName);\n      if (!context) {\n        context = new OutletContext(this.rootInjector);\n        this.contexts.set(childName, context);\n      }\n      return context;\n    }\n    getContext(childName) {\n      return this.contexts.get(childName) || null;\n    }\n    static ɵfac = function ChildrenOutletContexts_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChildrenOutletContexts)(i0.ɵɵinject(i0.EnvironmentInjector));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ChildrenOutletContexts,\n      factory: ChildrenOutletContexts.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ChildrenOutletContexts;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass Tree {\n  /** @internal */\n  _root;\n  constructor(root) {\n    this._root = root;\n  }\n  get root() {\n    return this._root.value;\n  }\n  /**\n   * @internal\n   */\n  parent(t) {\n    const p = this.pathFromRoot(t);\n    return p.length > 1 ? p[p.length - 2] : null;\n  }\n  /**\n   * @internal\n   */\n  children(t) {\n    const n = findNode(t, this._root);\n    return n ? n.children.map(t => t.value) : [];\n  }\n  /**\n   * @internal\n   */\n  firstChild(t) {\n    const n = findNode(t, this._root);\n    return n && n.children.length > 0 ? n.children[0].value : null;\n  }\n  /**\n   * @internal\n   */\n  siblings(t) {\n    const p = findPath(t, this._root);\n    if (p.length < 2) return [];\n    const c = p[p.length - 2].children.map(c => c.value);\n    return c.filter(cc => cc !== t);\n  }\n  /**\n   * @internal\n   */\n  pathFromRoot(t) {\n    return findPath(t, this._root).map(s => s.value);\n  }\n}\n// DFS for the node matching the value\nfunction findNode(value, node) {\n  if (value === node.value) return node;\n  for (const child of node.children) {\n    const node = findNode(value, child);\n    if (node) return node;\n  }\n  return null;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n  if (value === node.value) return [node];\n  for (const child of node.children) {\n    const path = findPath(value, child);\n    if (path.length) {\n      path.unshift(node);\n      return path;\n    }\n  }\n  return [];\n}\nclass TreeNode {\n  value;\n  children;\n  constructor(value, children) {\n    this.value = value;\n    this.children = children;\n  }\n  toString() {\n    return `TreeNode(${this.value})`;\n  }\n}\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n  const map = {};\n  if (node) {\n    node.children.forEach(child => map[child.value.outlet] = child);\n  }\n  return map;\n}\n\n/**\n * Represents the state of the router as a tree of activated routes.\n *\n * @usageNotes\n *\n * Every node in the route tree is an `ActivatedRoute` instance\n * that knows about the \"consumed\" URL segments, the extracted parameters,\n * and the resolved data.\n * Use the `ActivatedRoute` properties to traverse the tree from any node.\n *\n * The following fragment shows how a component gets the root node\n * of the current state to establish its own route tree:\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @see {@link ActivatedRoute}\n * @see [Getting route information](guide/routing/common-router-tasks#getting-route-information)\n *\n * @publicApi\n */\nclass RouterState extends Tree {\n  snapshot;\n  /** @internal */\n  constructor(root, /** The current snapshot of the router state */\n  snapshot) {\n    super(root);\n    this.snapshot = snapshot;\n    setRouterState(this, root);\n  }\n  toString() {\n    return this.snapshot.toString();\n  }\n}\nfunction createEmptyState(rootComponent) {\n  const snapshot = createEmptyStateSnapshot(rootComponent);\n  const emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n  const emptyParams = new BehaviorSubject({});\n  const emptyData = new BehaviorSubject({});\n  const emptyQueryParams = new BehaviorSubject({});\n  const fragment = new BehaviorSubject('');\n  const activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n  activated.snapshot = snapshot.root;\n  return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(rootComponent) {\n  const emptyParams = {};\n  const emptyData = {};\n  const emptyQueryParams = {};\n  const fragment = '';\n  const activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, {});\n  return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * Provides access to information about a route associated with a component\n * that is loaded in an outlet.\n * Use to traverse the `RouterState` tree and extract information from nodes.\n *\n * The following example shows how to construct a component using information from a\n * currently activated route.\n *\n * Note: the observables in this class only emit when the current and previous values differ based\n * on shallow equality. For example, changing deeply nested properties in resolved `data` will not\n * cause the `ActivatedRoute.data` `Observable` to emit a new value.\n *\n * {@example router/activated-route/module.ts region=\"activated-route\"\n *     header=\"activated-route.component.ts\"}\n *\n * @see [Getting route information](guide/routing/common-router-tasks#getting-route-information)\n *\n * @publicApi\n */\nclass ActivatedRoute {\n  urlSubject;\n  paramsSubject;\n  queryParamsSubject;\n  fragmentSubject;\n  dataSubject;\n  outlet;\n  component;\n  /** The current snapshot of this route */\n  snapshot;\n  /** @internal */\n  _futureSnapshot;\n  /** @internal */\n  _routerState;\n  /** @internal */\n  _paramMap;\n  /** @internal */\n  _queryParamMap;\n  /** An Observable of the resolved route title */\n  title;\n  /** An observable of the URL segments matched by this route. */\n  url;\n  /** An observable of the matrix parameters scoped to this route. */\n  params;\n  /** An observable of the query parameters shared by all the routes. */\n  queryParams;\n  /** An observable of the URL fragment shared by all the routes. */\n  fragment;\n  /** An observable of the static and resolved data of this route. */\n  data;\n  /** @internal */\n  constructor(/** @internal */\n  urlSubject, /** @internal */\n  paramsSubject, /** @internal */\n  queryParamsSubject, /** @internal */\n  fragmentSubject, /** @internal */\n  dataSubject, /** The outlet name of the route, a constant. */\n  outlet, /** The component of the route, a constant. */\n  component, futureSnapshot) {\n    this.urlSubject = urlSubject;\n    this.paramsSubject = paramsSubject;\n    this.queryParamsSubject = queryParamsSubject;\n    this.fragmentSubject = fragmentSubject;\n    this.dataSubject = dataSubject;\n    this.outlet = outlet;\n    this.component = component;\n    this._futureSnapshot = futureSnapshot;\n    this.title = this.dataSubject?.pipe(map(d => d[RouteTitleKey])) ?? of(undefined);\n    // TODO(atscott): Verify that these can be changed to `.asObservable()` with TGP.\n    this.url = urlSubject;\n    this.params = paramsSubject;\n    this.queryParams = queryParamsSubject;\n    this.fragment = fragmentSubject;\n    this.data = dataSubject;\n  }\n  /** The configuration used to match this route. */\n  get routeConfig() {\n    return this._futureSnapshot.routeConfig;\n  }\n  /** The root of the router state. */\n  get root() {\n    return this._routerState.root;\n  }\n  /** The parent of this route in the router state tree. */\n  get parent() {\n    return this._routerState.parent(this);\n  }\n  /** The first child of this route in the router state tree. */\n  get firstChild() {\n    return this._routerState.firstChild(this);\n  }\n  /** The children of this route in the router state tree. */\n  get children() {\n    return this._routerState.children(this);\n  }\n  /** The path from the root of the router state tree to this route. */\n  get pathFromRoot() {\n    return this._routerState.pathFromRoot(this);\n  }\n  /**\n   * An Observable that contains a map of the required and optional parameters\n   * specific to the route.\n   * The map supports retrieving single and multiple values from the same parameter.\n   */\n  get paramMap() {\n    this._paramMap ??= this.params.pipe(map(p => convertToParamMap(p)));\n    return this._paramMap;\n  }\n  /**\n   * An Observable that contains a map of the query parameters available to all routes.\n   * The map supports retrieving single and multiple values from the query parameter.\n   */\n  get queryParamMap() {\n    this._queryParamMap ??= this.queryParams.pipe(map(p => convertToParamMap(p)));\n    return this._queryParamMap;\n  }\n  toString() {\n    return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;\n  }\n}\n/**\n * Returns the inherited params, data, and resolve for a given route.\n *\n * By default, we do not inherit parent data unless the current route is path-less or the parent\n * route is component-less.\n */\nfunction getInherited(route, parent, paramsInheritanceStrategy = 'emptyOnly') {\n  let inherited;\n  const {\n    routeConfig\n  } = route;\n  if (parent !== null && (paramsInheritanceStrategy === 'always' ||\n  // inherit parent data if route is empty path\n  routeConfig?.path === '' ||\n  // inherit parent data if parent was componentless\n  !parent.component && !parent.routeConfig?.loadComponent)) {\n    inherited = {\n      params: {\n        ...parent.params,\n        ...route.params\n      },\n      data: {\n        ...parent.data,\n        ...route.data\n      },\n      resolve: {\n        // Snapshots are created with data inherited from parent and guards (i.e. canActivate) can\n        // change data because it's not frozen...\n        // This first line could be deleted chose to break/disallow mutating the `data` object in\n        // guards.\n        // Note that data from parents still override this mutated data so anyone relying on this\n        // might be surprised that it doesn't work if parent data is inherited but otherwise does.\n        ...route.data,\n        // Ensure inherited resolved data overrides inherited static data\n        ...parent.data,\n        // static data from the current route overrides any inherited data\n        ...routeConfig?.data,\n        // resolved data from current route overrides everything\n        ...route._resolvedData\n      }\n    };\n  } else {\n    inherited = {\n      params: {\n        ...route.params\n      },\n      data: {\n        ...route.data\n      },\n      resolve: {\n        ...route.data,\n        ...(route._resolvedData ?? {})\n      }\n    };\n  }\n  if (routeConfig && hasStaticTitle(routeConfig)) {\n    inherited.resolve[RouteTitleKey] = routeConfig.title;\n  }\n  return inherited;\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * The following example initializes a component with route information extracted\n * from the snapshot of the root node at the time of creation.\n *\n * ```ts\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass ActivatedRouteSnapshot {\n  url;\n  params;\n  queryParams;\n  fragment;\n  data;\n  outlet;\n  component;\n  /** The configuration used to match this route **/\n  routeConfig;\n  /** @internal */\n  _resolve;\n  /** @internal */\n  _resolvedData;\n  /** @internal */\n  _routerState;\n  /** @internal */\n  _paramMap;\n  /** @internal */\n  _queryParamMap;\n  /** The resolved route title */\n  get title() {\n    // Note: This _must_ be a getter because the data is mutated in the resolvers. Title will not be\n    // available at the time of class instantiation.\n    return this.data?.[RouteTitleKey];\n  }\n  /** @internal */\n  constructor(/** The URL segments matched by this route */\n  url,\n  /**\n   *  The matrix parameters scoped to this route.\n   *\n   *  You can compute all params (or data) in the router state or to get params outside\n   *  of an activated component by traversing the `RouterState` tree as in the following\n   *  example:\n   *  ```ts\n   *  collectRouteParams(router: Router) {\n   *    let params = {};\n   *    let stack: ActivatedRouteSnapshot[] = [router.routerState.snapshot.root];\n   *    while (stack.length > 0) {\n   *      const route = stack.pop()!;\n   *      params = {...params, ...route.params};\n   *      stack.push(...route.children);\n   *    }\n   *    return params;\n   *  }\n   *  ```\n   */\n  params, /** The query parameters shared by all the routes */\n  queryParams, /** The URL fragment shared by all the routes */\n  fragment, /** The static and resolved data of this route */\n  data, /** The outlet name of the route */\n  outlet, /** The component of the route */\n  component, routeConfig, resolve) {\n    this.url = url;\n    this.params = params;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    this.data = data;\n    this.outlet = outlet;\n    this.component = component;\n    this.routeConfig = routeConfig;\n    this._resolve = resolve;\n  }\n  /** The root of the router state */\n  get root() {\n    return this._routerState.root;\n  }\n  /** The parent of this route in the router state tree */\n  get parent() {\n    return this._routerState.parent(this);\n  }\n  /** The first child of this route in the router state tree */\n  get firstChild() {\n    return this._routerState.firstChild(this);\n  }\n  /** The children of this route in the router state tree */\n  get children() {\n    return this._routerState.children(this);\n  }\n  /** The path from the root of the router state tree to this route */\n  get pathFromRoot() {\n    return this._routerState.pathFromRoot(this);\n  }\n  get paramMap() {\n    this._paramMap ??= convertToParamMap(this.params);\n    return this._paramMap;\n  }\n  get queryParamMap() {\n    this._queryParamMap ??= convertToParamMap(this.queryParams);\n    return this._queryParamMap;\n  }\n  toString() {\n    const url = this.url.map(segment => segment.toString()).join('/');\n    const matched = this.routeConfig ? this.routeConfig.path : '';\n    return `Route(url:'${url}', path:'${matched}')`;\n  }\n}\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * The following example shows how a component is initialized with information\n * from the snapshot of the root node's state at the time of creation.\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass RouterStateSnapshot extends Tree {\n  url;\n  /** @internal */\n  constructor(/** The url from which this snapshot was created */\n  url, root) {\n    super(root);\n    this.url = url;\n    setRouterState(this, root);\n  }\n  toString() {\n    return serializeNode(this._root);\n  }\n}\nfunction setRouterState(state, node) {\n  node.value._routerState = state;\n  node.children.forEach(c => setRouterState(state, c));\n}\nfunction serializeNode(node) {\n  const c = node.children.length > 0 ? ` { ${node.children.map(serializeNode).join(', ')} } ` : '';\n  return `${node.value}${c}`;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n  if (route.snapshot) {\n    const currentSnapshot = route.snapshot;\n    const nextSnapshot = route._futureSnapshot;\n    route.snapshot = nextSnapshot;\n    if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n      route.queryParamsSubject.next(nextSnapshot.queryParams);\n    }\n    if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n      route.fragmentSubject.next(nextSnapshot.fragment);\n    }\n    if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n      route.paramsSubject.next(nextSnapshot.params);\n    }\n    if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n      route.urlSubject.next(nextSnapshot.url);\n    }\n    if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n      route.dataSubject.next(nextSnapshot.data);\n    }\n  } else {\n    route.snapshot = route._futureSnapshot;\n    // this is for resolved data\n    route.dataSubject.next(route._futureSnapshot.data);\n  }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n  const equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n  const parentsMismatch = !a.parent !== !b.parent;\n  return equalUrlParams && !parentsMismatch && (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\nfunction hasStaticTitle(config) {\n  return typeof config.title === 'string' || config.title === null;\n}\n\n/**\n * An `InjectionToken` provided by the `RouterOutlet` and can be set using the `routerOutletData`\n * input.\n *\n * When unset, this value is `null` by default.\n *\n * @usageNotes\n *\n * To set the data from the template of the component with `router-outlet`:\n * ```html\n * <router-outlet [routerOutletData]=\"{name: 'Angular'}\" />\n * ```\n *\n * To read the data in the routed component:\n * ```ts\n * data = inject(ROUTER_OUTLET_DATA) as Signal<{name: string}>;\n * ```\n *\n * @publicApi\n */\nconst ROUTER_OUTLET_DATA = /*#__PURE__*/new InjectionToken(ngDevMode ? 'RouterOutlet data' : '');\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * Each outlet can have a unique name, determined by the optional `name` attribute.\n * The name cannot be set or changed dynamically. If not set, default value is \"primary\".\n *\n * ```html\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * Named outlets can be the targets of secondary routes.\n * The `Route` object for a secondary route has an `outlet` property to identify the target outlet:\n *\n * `{path: <base-path>, component: <component>, outlet: <target_outlet_name>}`\n *\n * Using named outlets and secondary routes, you can target multiple outlets in\n * the same `RouterLink` directive.\n *\n * The router keeps track of separate branches in a navigation tree for each named outlet and\n * generates a representation of that tree in the URL.\n * The URL for a secondary route uses the following syntax to specify both the primary and secondary\n * routes at the same time:\n *\n * `http://base-path/primary-route-path(outlet-name:route-path)`\n *\n * A router outlet emits an activate event when a new component is instantiated,\n * deactivate event when a component is destroyed.\n * An attached event emits when the `RouteReuseStrategy` instructs the outlet to reattach the\n * subtree, and the detached event emits when the `RouteReuseStrategy` instructs the outlet to\n * detach the subtree.\n *\n * ```html\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'\n *   (attach)='onAttach($event)'\n *   (detach)='onDetach($event)'></router-outlet>\n * ```\n *\n * @see {@link RouterLink}\n * @see {@link Route}\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterOutlet = /*#__PURE__*/(() => {\n  class RouterOutlet {\n    activated = null;\n    /** @internal */\n    get activatedComponentRef() {\n      return this.activated;\n    }\n    _activatedRoute = null;\n    /**\n     * The name of the outlet\n     *\n     */\n    name = PRIMARY_OUTLET;\n    activateEvents = new EventEmitter();\n    deactivateEvents = new EventEmitter();\n    /**\n     * Emits an attached component instance when the `RouteReuseStrategy` instructs to re-attach a\n     * previously detached subtree.\n     **/\n    attachEvents = new EventEmitter();\n    /**\n     * Emits a detached component instance when the `RouteReuseStrategy` instructs to detach the\n     * subtree.\n     */\n    detachEvents = new EventEmitter();\n    /**\n     * Data that will be provided to the child injector through the `ROUTER_OUTLET_DATA` token.\n     *\n     * When unset, the value of the token is `undefined` by default.\n     */\n    routerOutletData = input(undefined);\n    parentContexts = inject(ChildrenOutletContexts);\n    location = inject(ViewContainerRef);\n    changeDetector = inject(ChangeDetectorRef);\n    inputBinder = inject(INPUT_BINDER, {\n      optional: true\n    });\n    /** @nodoc */\n    supportsBindingToComponentInputs = true;\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (changes['name']) {\n        const {\n          firstChange,\n          previousValue\n        } = changes['name'];\n        if (firstChange) {\n          // The first change is handled by ngOnInit. Because ngOnChanges doesn't get called when no\n          // input is set at all, we need to centrally handle the first change there.\n          return;\n        }\n        // unregister with the old name\n        if (this.isTrackedInParentContexts(previousValue)) {\n          this.deactivate();\n          this.parentContexts.onChildOutletDestroyed(previousValue);\n        }\n        // register the new name\n        this.initializeOutletWithName();\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      // Ensure that the registered outlet is this one before removing it on the context.\n      if (this.isTrackedInParentContexts(this.name)) {\n        this.parentContexts.onChildOutletDestroyed(this.name);\n      }\n      this.inputBinder?.unsubscribeFromRouteData(this);\n    }\n    isTrackedInParentContexts(outletName) {\n      return this.parentContexts.getContext(outletName)?.outlet === this;\n    }\n    /** @nodoc */\n    ngOnInit() {\n      this.initializeOutletWithName();\n    }\n    initializeOutletWithName() {\n      this.parentContexts.onChildOutletCreated(this.name, this);\n      if (this.activated) {\n        return;\n      }\n      // If the outlet was not instantiated at the time the route got activated we need to populate\n      // the outlet when it is initialized (ie inside a NgIf)\n      const context = this.parentContexts.getContext(this.name);\n      if (context?.route) {\n        if (context.attachRef) {\n          // `attachRef` is populated when there is an existing component to mount\n          this.attach(context.attachRef, context.route);\n        } else {\n          // otherwise the component defined in the configuration is created\n          this.activateWith(context.route, context.injector);\n        }\n      }\n    }\n    get isActivated() {\n      return !!this.activated;\n    }\n    /**\n     * @returns The currently activated component instance.\n     * @throws An error if the outlet is not activated.\n     */\n    get component() {\n      if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      return this.activated.instance;\n    }\n    get activatedRoute() {\n      if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      return this._activatedRoute;\n    }\n    get activatedRouteData() {\n      if (this._activatedRoute) {\n        return this._activatedRoute.snapshot.data;\n      }\n      return {};\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    detach() {\n      if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      this.location.detach();\n      const cmp = this.activated;\n      this.activated = null;\n      this._activatedRoute = null;\n      this.detachEvents.emit(cmp.instance);\n      return cmp;\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    attach(ref, activatedRoute) {\n      this.activated = ref;\n      this._activatedRoute = activatedRoute;\n      this.location.insert(ref.hostView);\n      this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n      this.attachEvents.emit(ref.instance);\n    }\n    deactivate() {\n      if (this.activated) {\n        const c = this.component;\n        this.activated.destroy();\n        this.activated = null;\n        this._activatedRoute = null;\n        this.deactivateEvents.emit(c);\n      }\n    }\n    activateWith(activatedRoute, environmentInjector) {\n      if (this.isActivated) {\n        throw new ɵRuntimeError(4013 /* RuntimeErrorCode.OUTLET_ALREADY_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Cannot activate an already activated outlet');\n      }\n      this._activatedRoute = activatedRoute;\n      const location = this.location;\n      const snapshot = activatedRoute.snapshot;\n      const component = snapshot.component;\n      const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n      const injector = new OutletInjector(activatedRoute, childContexts, location.injector, this.routerOutletData);\n      this.activated = location.createComponent(component, {\n        index: location.length,\n        injector,\n        environmentInjector: environmentInjector\n      });\n      // Calling `markForCheck` to make sure we will run the change detection when the\n      // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n      this.changeDetector.markForCheck();\n      this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n      this.activateEvents.emit(this.activated.instance);\n    }\n    static ɵfac = function RouterOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterOutlet)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RouterOutlet,\n      selectors: [[\"router-outlet\"]],\n      inputs: {\n        name: \"name\",\n        routerOutletData: [1, \"routerOutletData\"]\n      },\n      outputs: {\n        activateEvents: \"activate\",\n        deactivateEvents: \"deactivate\",\n        attachEvents: \"attach\",\n        detachEvents: \"detach\"\n      },\n      exportAs: [\"outlet\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return RouterOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass OutletInjector {\n  route;\n  childContexts;\n  parent;\n  outletData;\n  /**\n   * This injector has a special handing for the `ActivatedRoute` and\n   * `ChildrenOutletContexts` tokens: it returns corresponding values for those\n   * tokens dynamically. This behavior is different from the regular injector logic,\n   * when we initialize and store a value, which is later returned for all inject\n   * requests.\n   *\n   * In some cases (e.g. when using `@defer`), this dynamic behavior requires special\n   * handling. This function allows to identify an instance of the `OutletInjector` and\n   * create an instance of it without referring to the class itself (so this logic can\n   * be invoked from the `core` package). This helps to retain dynamic behavior for the\n   * mentioned tokens.\n   *\n   * Note: it's a temporary solution and we should explore how to support this case better.\n   */\n  __ngOutletInjector(parentInjector) {\n    return new OutletInjector(this.route, this.childContexts, parentInjector, this.outletData);\n  }\n  constructor(route, childContexts, parent, outletData) {\n    this.route = route;\n    this.childContexts = childContexts;\n    this.parent = parent;\n    this.outletData = outletData;\n  }\n  get(token, notFoundValue) {\n    if (token === ActivatedRoute) {\n      return this.route;\n    }\n    if (token === ChildrenOutletContexts) {\n      return this.childContexts;\n    }\n    if (token === ROUTER_OUTLET_DATA) {\n      return this.outletData;\n    }\n    return this.parent.get(token, notFoundValue);\n  }\n}\nconst INPUT_BINDER = /*#__PURE__*/new InjectionToken('');\n/**\n * Injectable used as a tree-shakable provider for opting in to binding router data to component\n * inputs.\n *\n * The RouterOutlet registers itself with this service when an `ActivatedRoute` is attached or\n * activated. When this happens, the service subscribes to the `ActivatedRoute` observables (params,\n * queryParams, data) and sets the inputs of the component using `ComponentRef.setInput`.\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. If it were not done this way, the previous information would be\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n *\n * The `RouterOutlet` should unregister itself when destroyed via `unsubscribeFromRouteData` so that\n * the subscriptions are cleaned up.\n */\nlet RoutedComponentInputBinder = /*#__PURE__*/(() => {\n  class RoutedComponentInputBinder {\n    outletDataSubscriptions = new Map();\n    bindActivatedRouteToOutletComponent(outlet) {\n      this.unsubscribeFromRouteData(outlet);\n      this.subscribeToRouteData(outlet);\n    }\n    unsubscribeFromRouteData(outlet) {\n      this.outletDataSubscriptions.get(outlet)?.unsubscribe();\n      this.outletDataSubscriptions.delete(outlet);\n    }\n    subscribeToRouteData(outlet) {\n      const {\n        activatedRoute\n      } = outlet;\n      const dataSubscription = combineLatest([activatedRoute.queryParams, activatedRoute.params, activatedRoute.data]).pipe(switchMap(([queryParams, params, data], index) => {\n        data = {\n          ...queryParams,\n          ...params,\n          ...data\n        };\n        // Get the first result from the data subscription synchronously so it's available to\n        // the component as soon as possible (and doesn't require a second change detection).\n        if (index === 0) {\n          return of(data);\n        }\n        // Promise.resolve is used to avoid synchronously writing the wrong data when\n        // two of the Observables in the `combineLatest` stream emit one after\n        // another.\n        return Promise.resolve(data);\n      })).subscribe(data => {\n        // Outlet may have been deactivated or changed names to be associated with a different\n        // route\n        if (!outlet.isActivated || !outlet.activatedComponentRef || outlet.activatedRoute !== activatedRoute || activatedRoute.component === null) {\n          this.unsubscribeFromRouteData(outlet);\n          return;\n        }\n        const mirror = reflectComponentType(activatedRoute.component);\n        if (!mirror) {\n          this.unsubscribeFromRouteData(outlet);\n          return;\n        }\n        for (const {\n          templateName\n        } of mirror.inputs) {\n          outlet.activatedComponentRef.setInput(templateName, data[templateName]);\n        }\n      });\n      this.outletDataSubscriptions.set(outlet, dataSubscription);\n    }\n    static ɵfac = function RoutedComponentInputBinder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RoutedComponentInputBinder)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RoutedComponentInputBinder,\n      factory: RoutedComponentInputBinder.ɵfac\n    });\n  }\n  return RoutedComponentInputBinder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n  const root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n  return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n  // reuse an activated route that is currently displayed on the screen\n  if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n    const value = prevState.value;\n    value._futureSnapshot = curr.value;\n    const children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n    return new TreeNode(value, children);\n  } else {\n    if (routeReuseStrategy.shouldAttach(curr.value)) {\n      // retrieve an activated route that is used to be displayed, but is not currently displayed\n      const detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n      if (detachedRouteHandle !== null) {\n        const tree = detachedRouteHandle.route;\n        tree.value._futureSnapshot = curr.value;\n        tree.children = curr.children.map(c => createNode(routeReuseStrategy, c));\n        return tree;\n      }\n    }\n    const value = createActivatedRoute(curr.value);\n    const children = curr.children.map(c => createNode(routeReuseStrategy, c));\n    return new TreeNode(value, children);\n  }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n  return curr.children.map(child => {\n    for (const p of prevState.children) {\n      if (routeReuseStrategy.shouldReuseRoute(child.value, p.value.snapshot)) {\n        return createNode(routeReuseStrategy, child, p);\n      }\n    }\n    return createNode(routeReuseStrategy, child);\n  });\n}\nfunction createActivatedRoute(c) {\n  return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * Can be returned by a `Router` guard to instruct the `Router` to redirect rather than continue\n * processing the path of the in-flight navigation. The `redirectTo` indicates _where_ the new\n * navigation should go to and the optional `navigationBehaviorOptions` can provide more information\n * about _how_ to perform the navigation.\n *\n * ```ts\n * const route: Route = {\n *   path: \"user/:userId\",\n *   component: User,\n *   canActivate: [\n *     () => {\n *       const router = inject(Router);\n *       const authService = inject(AuthenticationService);\n *\n *       if (!authService.isLoggedIn()) {\n *         const loginPath = router.parseUrl(\"/login\");\n *         return new RedirectCommand(loginPath, {\n *           skipLocationChange: \"true\",\n *         });\n *       }\n *\n *       return true;\n *     },\n *   ],\n * };\n * ```\n * @see [Routing guide](guide/routing/common-router-tasks#preventing-unauthorized-access)\n *\n * @publicApi\n */\nclass RedirectCommand {\n  redirectTo;\n  navigationBehaviorOptions;\n  constructor(redirectTo, navigationBehaviorOptions) {\n    this.redirectTo = redirectTo;\n    this.navigationBehaviorOptions = navigationBehaviorOptions;\n  }\n}\nconst NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction redirectingNavigationError(urlSerializer, redirect) {\n  const {\n    redirectTo,\n    navigationBehaviorOptions\n  } = isUrlTree(redirect) ? {\n    redirectTo: redirect,\n    navigationBehaviorOptions: undefined\n  } : redirect;\n  const error = navigationCancelingError(ngDevMode && `Redirecting to \"${urlSerializer.serialize(redirectTo)}\"`, NavigationCancellationCode.Redirect);\n  error.url = redirectTo;\n  error.navigationBehaviorOptions = navigationBehaviorOptions;\n  return error;\n}\nfunction navigationCancelingError(message, code) {\n  const error = new Error(`NavigationCancelingError: ${message || ''}`);\n  error[NAVIGATION_CANCELING_ERROR] = true;\n  error.cancellationCode = code;\n  return error;\n}\nfunction isRedirectingNavigationCancelingError(error) {\n  return isNavigationCancelingError(error) && isUrlTree(error.url);\n}\nfunction isNavigationCancelingError(error) {\n  return !!error && error[NAVIGATION_CANCELING_ERROR];\n}\nlet warnedAboutUnsupportedInputBinding = false;\nconst activateRoutes = (rootContexts, routeReuseStrategy, forwardEvent, inputBindingEnabled) => map(t => {\n  new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent, inputBindingEnabled).activate(rootContexts);\n  return t;\n});\nclass ActivateRoutes {\n  routeReuseStrategy;\n  futureState;\n  currState;\n  forwardEvent;\n  inputBindingEnabled;\n  constructor(routeReuseStrategy, futureState, currState, forwardEvent, inputBindingEnabled) {\n    this.routeReuseStrategy = routeReuseStrategy;\n    this.futureState = futureState;\n    this.currState = currState;\n    this.forwardEvent = forwardEvent;\n    this.inputBindingEnabled = inputBindingEnabled;\n  }\n  activate(parentContexts) {\n    const futureRoot = this.futureState._root;\n    const currRoot = this.currState ? this.currState._root : null;\n    this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n    advanceActivatedRoute(this.futureState.root);\n    this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n  }\n  // De-activate the child route that are not re-used for the future state\n  deactivateChildRoutes(futureNode, currNode, contexts) {\n    const children = nodeChildrenAsMap(currNode);\n    // Recurse on the routes active in the future state to de-activate deeper children\n    futureNode.children.forEach(futureChild => {\n      const childOutletName = futureChild.value.outlet;\n      this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n      delete children[childOutletName];\n    });\n    // De-activate the routes that will not be re-used\n    Object.values(children).forEach(v => {\n      this.deactivateRouteAndItsChildren(v, contexts);\n    });\n  }\n  deactivateRoutes(futureNode, currNode, parentContext) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    if (future === curr) {\n      // Reusing the node, check to see if the children need to be de-activated\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const context = parentContext.getContext(future.outlet);\n        if (context) {\n          this.deactivateChildRoutes(futureNode, currNode, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.deactivateChildRoutes(futureNode, currNode, parentContext);\n      }\n    } else {\n      if (curr) {\n        // Deactivate the current route which will not be re-used\n        this.deactivateRouteAndItsChildren(currNode, parentContext);\n      }\n    }\n  }\n  deactivateRouteAndItsChildren(route, parentContexts) {\n    // If there is no component, the Route is never attached to an outlet (because there is no\n    // component to attach).\n    if (route.value.component && this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n      this.detachAndStoreRouteSubtree(route, parentContexts);\n    } else {\n      this.deactivateRouteAndOutlet(route, parentContexts);\n    }\n  }\n  detachAndStoreRouteSubtree(route, parentContexts) {\n    const context = parentContexts.getContext(route.value.outlet);\n    const contexts = context && route.value.component ? context.children : parentContexts;\n    const children = nodeChildrenAsMap(route);\n    for (const treeNode of Object.values(children)) {\n      this.deactivateRouteAndItsChildren(treeNode, contexts);\n    }\n    if (context && context.outlet) {\n      const componentRef = context.outlet.detach();\n      const contexts = context.children.onOutletDeactivated();\n      this.routeReuseStrategy.store(route.value.snapshot, {\n        componentRef,\n        route,\n        contexts\n      });\n    }\n  }\n  deactivateRouteAndOutlet(route, parentContexts) {\n    const context = parentContexts.getContext(route.value.outlet);\n    // The context could be `null` if we are on a componentless route but there may still be\n    // children that need deactivating.\n    const contexts = context && route.value.component ? context.children : parentContexts;\n    const children = nodeChildrenAsMap(route);\n    for (const treeNode of Object.values(children)) {\n      this.deactivateRouteAndItsChildren(treeNode, contexts);\n    }\n    if (context) {\n      if (context.outlet) {\n        // Destroy the component\n        context.outlet.deactivate();\n        // Destroy the contexts for all the outlets that were in the component\n        context.children.onOutletDeactivated();\n      }\n      // Clear the information about the attached component on the context but keep the reference to\n      // the outlet. Clear even if outlet was not yet activated to avoid activating later with old\n      // info\n      context.attachRef = null;\n      context.route = null;\n    }\n  }\n  activateChildRoutes(futureNode, currNode, contexts) {\n    const children = nodeChildrenAsMap(currNode);\n    futureNode.children.forEach(c => {\n      this.activateRoutes(c, children[c.value.outlet], contexts);\n      this.forwardEvent(new ActivationEnd(c.value.snapshot));\n    });\n    if (futureNode.children.length) {\n      this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n    }\n  }\n  activateRoutes(futureNode, currNode, parentContexts) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    advanceActivatedRoute(future);\n    // reusing the node\n    if (future === curr) {\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const context = parentContexts.getOrCreateContext(future.outlet);\n        this.activateChildRoutes(futureNode, currNode, context.children);\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, currNode, parentContexts);\n      }\n    } else {\n      if (future.component) {\n        // if we have a normal route, we need to place the component into the outlet and recurse.\n        const context = parentContexts.getOrCreateContext(future.outlet);\n        if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n          const stored = this.routeReuseStrategy.retrieve(future.snapshot);\n          this.routeReuseStrategy.store(future.snapshot, null);\n          context.children.onOutletReAttached(stored.contexts);\n          context.attachRef = stored.componentRef;\n          context.route = stored.route.value;\n          if (context.outlet) {\n            // Attach right away when the outlet has already been instantiated\n            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n            context.outlet.attach(stored.componentRef, stored.route.value);\n          }\n          advanceActivatedRoute(stored.route.value);\n          this.activateChildRoutes(futureNode, null, context.children);\n        } else {\n          context.attachRef = null;\n          context.route = future;\n          if (context.outlet) {\n            // Activate the outlet when it has already been instantiated\n            // Otherwise it will get activated from its `ngOnInit` when instantiated\n            context.outlet.activateWith(future, context.injector);\n          }\n          this.activateChildRoutes(futureNode, null, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, null, parentContexts);\n      }\n    }\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      const context = parentContexts.getOrCreateContext(future.outlet);\n      const outlet = context.outlet;\n      if (outlet && this.inputBindingEnabled && !outlet.supportsBindingToComponentInputs && !warnedAboutUnsupportedInputBinding) {\n        console.warn(`'withComponentInputBinding' feature is enabled but ` + `this application is using an outlet that may not support binding to component inputs.`);\n        warnedAboutUnsupportedInputBinding = true;\n      }\n    }\n  }\n}\nclass CanActivate {\n  path;\n  route;\n  constructor(path) {\n    this.path = path;\n    this.route = this.path[this.path.length - 1];\n  }\n}\nclass CanDeactivate {\n  component;\n  route;\n  constructor(component, route) {\n    this.component = component;\n    this.route = route;\n  }\n}\nfunction getAllRouteGuards(future, curr, parentContexts) {\n  const futureRoot = future._root;\n  const currRoot = curr ? curr._root : null;\n  return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n}\nfunction getCanActivateChild(p) {\n  const canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n  if (!canActivateChild || canActivateChild.length === 0) return null;\n  return {\n    node: p,\n    guards: canActivateChild\n  };\n}\nfunction getTokenOrFunctionIdentity(tokenOrFunction, injector) {\n  const NOT_FOUND = Symbol();\n  const result = injector.get(tokenOrFunction, NOT_FOUND);\n  if (result === NOT_FOUND) {\n    if (typeof tokenOrFunction === 'function' && !ɵisInjectable(tokenOrFunction)) {\n      // We think the token is just a function so return it as-is\n      return tokenOrFunction;\n    } else {\n      // This will throw the not found error\n      return injector.get(tokenOrFunction);\n    }\n  }\n  return result;\n}\nfunction getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks = {\n  canDeactivateChecks: [],\n  canActivateChecks: []\n}) {\n  const prevChildren = nodeChildrenAsMap(currNode);\n  // Process the children of the future route\n  futureNode.children.forEach(c => {\n    getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n    delete prevChildren[c.value.outlet];\n  });\n  // Process any children left from the current route (not active for the future route)\n  Object.entries(prevChildren).forEach(([k, v]) => deactivateRouteAndItsChildren(v, contexts.getContext(k), checks));\n  return checks;\n}\nfunction getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks = {\n  canDeactivateChecks: [],\n  canActivateChecks: []\n}) {\n  const future = futureNode.value;\n  const curr = currNode ? currNode.value : null;\n  const context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n  // reusing the node\n  if (curr && future.routeConfig === curr.routeConfig) {\n    const shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n    if (shouldRun) {\n      checks.canActivateChecks.push(new CanActivate(futurePath));\n    } else {\n      // we need to set the data\n      future.data = curr.data;\n      future._resolvedData = curr._resolvedData;\n    }\n    // If we have a component, we need to go through an outlet.\n    if (future.component) {\n      getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks);\n      // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n    }\n    if (shouldRun && context && context.outlet && context.outlet.isActivated) {\n      checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, curr));\n    }\n  } else {\n    if (curr) {\n      deactivateRouteAndItsChildren(currNode, context, checks);\n    }\n    checks.canActivateChecks.push(new CanActivate(futurePath));\n    // If we have a component, we need to go through an outlet.\n    if (future.component) {\n      getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks);\n      // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n    }\n  }\n  return checks;\n}\nfunction shouldRunGuardsAndResolvers(curr, future, mode) {\n  if (typeof mode === 'function') {\n    return mode(curr, future);\n  }\n  switch (mode) {\n    case 'pathParamsChange':\n      return !equalPath(curr.url, future.url);\n    case 'pathParamsOrQueryParamsChange':\n      return !equalPath(curr.url, future.url) || !shallowEqual(curr.queryParams, future.queryParams);\n    case 'always':\n      return true;\n    case 'paramsOrQueryParamsChange':\n      return !equalParamsAndUrlSegments(curr, future) || !shallowEqual(curr.queryParams, future.queryParams);\n    case 'paramsChange':\n    default:\n      return !equalParamsAndUrlSegments(curr, future);\n  }\n}\nfunction deactivateRouteAndItsChildren(route, context, checks) {\n  const children = nodeChildrenAsMap(route);\n  const r = route.value;\n  Object.entries(children).forEach(([childName, node]) => {\n    if (!r.component) {\n      deactivateRouteAndItsChildren(node, context, checks);\n    } else if (context) {\n      deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n    } else {\n      deactivateRouteAndItsChildren(node, null, checks);\n    }\n  });\n  if (!r.component) {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  } else if (context && context.outlet && context.outlet.isActivated) {\n    checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n  } else {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  }\n}\n\n/**\n * Simple function check, but generic so type inference will flow. Example:\n *\n * function product(a: number, b: number) {\n *   return a * b;\n * }\n *\n * if (isFunction<product>(fn)) {\n *   return fn(1, 2);\n * } else {\n *   throw \"Must provide the `product` function\";\n * }\n */\nfunction isFunction(v) {\n  return typeof v === 'function';\n}\nfunction isBoolean(v) {\n  return typeof v === 'boolean';\n}\nfunction isCanLoad(guard) {\n  return guard && isFunction(guard.canLoad);\n}\nfunction isCanActivate(guard) {\n  return guard && isFunction(guard.canActivate);\n}\nfunction isCanActivateChild(guard) {\n  return guard && isFunction(guard.canActivateChild);\n}\nfunction isCanDeactivate(guard) {\n  return guard && isFunction(guard.canDeactivate);\n}\nfunction isCanMatch(guard) {\n  return guard && isFunction(guard.canMatch);\n}\nfunction isEmptyError(e) {\n  return e instanceof EmptyError || e?.name === 'EmptyError';\n}\nconst INITIAL_VALUE = /* @__PURE__ */Symbol('INITIAL_VALUE');\nfunction prioritizedGuardValue() {\n  return switchMap(obs => {\n    return combineLatest(obs.map(o => o.pipe(take(1), startWith(INITIAL_VALUE)))).pipe(map(results => {\n      for (const result of results) {\n        if (result === true) {\n          // If result is true, check the next one\n          continue;\n        } else if (result === INITIAL_VALUE) {\n          // If guard has not finished, we need to stop processing.\n          return INITIAL_VALUE;\n        } else if (result === false || isRedirect(result)) {\n          // Result finished and was not true. Return the result.\n          // Note that we only allow false/UrlTree/RedirectCommand. Other values are considered invalid and\n          // ignored.\n          return result;\n        }\n      }\n      // Everything resolved to true. Return true.\n      return true;\n    }), filter(item => item !== INITIAL_VALUE), take(1));\n  });\n}\nfunction isRedirect(val) {\n  return isUrlTree(val) || val instanceof RedirectCommand;\n}\nfunction checkGuards(injector, forwardEvent) {\n  return mergeMap(t => {\n    const {\n      targetSnapshot,\n      currentSnapshot,\n      guards: {\n        canActivateChecks,\n        canDeactivateChecks\n      }\n    } = t;\n    if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n      return of({\n        ...t,\n        guardsResult: true\n      });\n    }\n    return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, injector).pipe(mergeMap(canDeactivate => {\n      return canDeactivate && isBoolean(canDeactivate) ? runCanActivateChecks(targetSnapshot, canActivateChecks, injector, forwardEvent) : of(canDeactivate);\n    }), map(guardsResult => ({\n      ...t,\n      guardsResult\n    })));\n  });\n}\nfunction runCanDeactivateChecks(checks, futureRSS, currRSS, injector) {\n  return from(checks).pipe(mergeMap(check => runCanDeactivate(check.component, check.route, currRSS, futureRSS, injector)), first(result => {\n    return result !== true;\n  }, true));\n}\nfunction runCanActivateChecks(futureSnapshot, checks, injector, forwardEvent) {\n  return from(checks).pipe(concatMap(check => {\n    return concat(fireChildActivationStart(check.route.parent, forwardEvent), fireActivationStart(check.route, forwardEvent), runCanActivateChild(futureSnapshot, check.path, injector), runCanActivate(futureSnapshot, check.route, injector));\n  }), first(result => {\n    return result !== true;\n  }, true));\n}\n/**\n * This should fire off `ActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ActivationStart(snapshot));\n  }\n  return of(true);\n}\n/**\n * This should fire off `ChildActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireChildActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ChildActivationStart(snapshot));\n  }\n  return of(true);\n}\nfunction runCanActivate(futureRSS, futureARS, injector) {\n  const canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n  if (!canActivate || canActivate.length === 0) return of(true);\n  const canActivateObservables = canActivate.map(canActivate => {\n    return defer(() => {\n      const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n      const guard = getTokenOrFunctionIdentity(canActivate, closestInjector);\n      const guardVal = isCanActivate(guard) ? guard.canActivate(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n      return wrapIntoObservable(guardVal).pipe(first());\n    });\n  });\n  return of(canActivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanActivateChild(futureRSS, path, injector) {\n  const futureARS = path[path.length - 1];\n  const canActivateChildGuards = path.slice(0, path.length - 1).reverse().map(p => getCanActivateChild(p)).filter(_ => _ !== null);\n  const canActivateChildGuardsMapped = canActivateChildGuards.map(d => {\n    return defer(() => {\n      const guardsMapped = d.guards.map(canActivateChild => {\n        const closestInjector = getClosestRouteInjector(d.node) ?? injector;\n        const guard = getTokenOrFunctionIdentity(canActivateChild, closestInjector);\n        const guardVal = isCanActivateChild(guard) ? guard.canActivateChild(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n        return wrapIntoObservable(guardVal).pipe(first());\n      });\n      return of(guardsMapped).pipe(prioritizedGuardValue());\n    });\n  });\n  return of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n}\nfunction runCanDeactivate(component, currARS, currRSS, futureRSS, injector) {\n  const canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n  if (!canDeactivate || canDeactivate.length === 0) return of(true);\n  const canDeactivateObservables = canDeactivate.map(c => {\n    const closestInjector = getClosestRouteInjector(currARS) ?? injector;\n    const guard = getTokenOrFunctionIdentity(c, closestInjector);\n    const guardVal = isCanDeactivate(guard) ? guard.canDeactivate(component, currARS, currRSS, futureRSS) : runInInjectionContext(closestInjector, () => guard(component, currARS, currRSS, futureRSS));\n    return wrapIntoObservable(guardVal).pipe(first());\n  });\n  return of(canDeactivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanLoadGuards(injector, route, segments, urlSerializer) {\n  const canLoad = route.canLoad;\n  if (canLoad === undefined || canLoad.length === 0) {\n    return of(true);\n  }\n  const canLoadObservables = canLoad.map(injectionToken => {\n    const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n    const guardVal = isCanLoad(guard) ? guard.canLoad(route, segments) : runInInjectionContext(injector, () => guard(route, segments));\n    return wrapIntoObservable(guardVal);\n  });\n  return of(canLoadObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\nfunction redirectIfUrlTree(urlSerializer) {\n  return pipe(tap(result => {\n    if (typeof result === 'boolean') return;\n    throw redirectingNavigationError(urlSerializer, result);\n  }), map(result => result === true));\n}\nfunction runCanMatchGuards(injector, route, segments, urlSerializer) {\n  const canMatch = route.canMatch;\n  if (!canMatch || canMatch.length === 0) return of(true);\n  const canMatchObservables = canMatch.map(injectionToken => {\n    const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n    const guardVal = isCanMatch(guard) ? guard.canMatch(route, segments) : runInInjectionContext(injector, () => guard(route, segments));\n    return wrapIntoObservable(guardVal);\n  });\n  return of(canMatchObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\nclass NoMatch {\n  segmentGroup;\n  constructor(segmentGroup) {\n    this.segmentGroup = segmentGroup || null;\n  }\n}\nclass AbsoluteRedirect extends Error {\n  urlTree;\n  constructor(urlTree) {\n    super();\n    this.urlTree = urlTree;\n  }\n}\nfunction noMatch$1(segmentGroup) {\n  return throwError(new NoMatch(segmentGroup));\n}\nfunction absoluteRedirect(newTree) {\n  return throwError(new AbsoluteRedirect(newTree));\n}\nfunction namedOutletsRedirect(redirectTo) {\n  return throwError(new ɵRuntimeError(4000 /* RuntimeErrorCode.NAMED_OUTLET_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`));\n}\nfunction canLoadFails(route) {\n  return throwError(navigationCancelingError((typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot load children because the guard of the route \"path: '${route.path}'\" returned false`, NavigationCancellationCode.GuardRejected));\n}\nclass ApplyRedirects {\n  urlSerializer;\n  urlTree;\n  constructor(urlSerializer, urlTree) {\n    this.urlSerializer = urlSerializer;\n    this.urlTree = urlTree;\n  }\n  lineralizeSegments(route, urlTree) {\n    let res = [];\n    let c = urlTree.root;\n    while (true) {\n      res = res.concat(c.segments);\n      if (c.numberOfChildren === 0) {\n        return of(res);\n      }\n      if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n        return namedOutletsRedirect(`${route.redirectTo}`);\n      }\n      c = c.children[PRIMARY_OUTLET];\n    }\n  }\n  applyRedirectCommands(segments, redirectTo, posParams, currentSnapshot, injector) {\n    if (typeof redirectTo !== 'string') {\n      const redirectToFn = redirectTo;\n      const {\n        queryParams,\n        fragment,\n        routeConfig,\n        url,\n        outlet,\n        params,\n        data,\n        title\n      } = currentSnapshot;\n      const newRedirect = runInInjectionContext(injector, () => redirectToFn({\n        params,\n        data,\n        queryParams,\n        fragment,\n        routeConfig,\n        url,\n        outlet,\n        title\n      }));\n      if (newRedirect instanceof UrlTree) {\n        throw new AbsoluteRedirect(newRedirect);\n      }\n      redirectTo = newRedirect;\n    }\n    const newTree = this.applyRedirectCreateUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    if (redirectTo[0] === '/') {\n      throw new AbsoluteRedirect(newTree);\n    }\n    return newTree;\n  }\n  applyRedirectCreateUrlTree(redirectTo, urlTree, segments, posParams) {\n    const newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n    return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n  }\n  createQueryParams(redirectToParams, actualParams) {\n    const res = {};\n    Object.entries(redirectToParams).forEach(([k, v]) => {\n      const copySourceValue = typeof v === 'string' && v[0] === ':';\n      if (copySourceValue) {\n        const sourceName = v.substring(1);\n        res[k] = actualParams[sourceName];\n      } else {\n        res[k] = v;\n      }\n    });\n    return res;\n  }\n  createSegmentGroup(redirectTo, group, segments, posParams) {\n    const updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n    let children = {};\n    Object.entries(group.children).forEach(([name, child]) => {\n      children[name] = this.createSegmentGroup(redirectTo, child, segments, posParams);\n    });\n    return new UrlSegmentGroup(updatedSegments, children);\n  }\n  createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {\n    return redirectToSegments.map(s => s.path[0] === ':' ? this.findPosParam(redirectTo, s, posParams) : this.findOrReturn(s, actualSegments));\n  }\n  findPosParam(redirectTo, redirectToUrlSegment, posParams) {\n    const pos = posParams[redirectToUrlSegment.path.substring(1)];\n    if (!pos) throw new ɵRuntimeError(4001 /* RuntimeErrorCode.MISSING_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);\n    return pos;\n  }\n  findOrReturn(redirectToUrlSegment, actualSegments) {\n    let idx = 0;\n    for (const s of actualSegments) {\n      if (s.path === redirectToUrlSegment.path) {\n        actualSegments.splice(idx);\n        return s;\n      }\n      idx++;\n    }\n    return redirectToUrlSegment;\n  }\n}\nconst noMatch = {\n  matched: false,\n  consumedSegments: [],\n  remainingSegments: [],\n  parameters: {},\n  positionalParamSegments: {}\n};\nfunction matchWithChecks(segmentGroup, route, segments, injector, urlSerializer) {\n  const result = match(segmentGroup, route, segments);\n  if (!result.matched) {\n    return of(result);\n  }\n  // Only create the Route's `EnvironmentInjector` if it matches the attempted\n  // navigation\n  injector = getOrCreateRouteInjectorIfNeeded(route, injector);\n  return runCanMatchGuards(injector, route, segments, urlSerializer).pipe(map(v => v === true ? result : {\n    ...noMatch\n  }));\n}\nfunction match(segmentGroup, route, segments) {\n  if (route.path === '**') {\n    return createWildcardMatchResult(segments);\n  }\n  if (route.path === '') {\n    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n      return {\n        ...noMatch\n      };\n    }\n    return {\n      matched: true,\n      consumedSegments: [],\n      remainingSegments: segments,\n      parameters: {},\n      positionalParamSegments: {}\n    };\n  }\n  const matcher = route.matcher || defaultUrlMatcher;\n  const res = matcher(segments, segmentGroup, route);\n  if (!res) return {\n    ...noMatch\n  };\n  const posParams = {};\n  Object.entries(res.posParams ?? {}).forEach(([k, v]) => {\n    posParams[k] = v.path;\n  });\n  const parameters = res.consumed.length > 0 ? {\n    ...posParams,\n    ...res.consumed[res.consumed.length - 1].parameters\n  } : posParams;\n  return {\n    matched: true,\n    consumedSegments: res.consumed,\n    remainingSegments: segments.slice(res.consumed.length),\n    // TODO(atscott): investigate combining parameters and positionalParamSegments\n    parameters,\n    positionalParamSegments: res.posParams ?? {}\n  };\n}\nfunction createWildcardMatchResult(segments) {\n  return {\n    matched: true,\n    parameters: segments.length > 0 ? last(segments).parameters : {},\n    consumedSegments: segments,\n    remainingSegments: [],\n    positionalParamSegments: {}\n  };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n  if (slicedSegments.length > 0 && containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n    const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n    return {\n      segmentGroup: s,\n      slicedSegments: []\n    };\n  }\n  if (slicedSegments.length === 0 && containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n    const s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n    return {\n      segmentGroup: s,\n      slicedSegments\n    };\n  }\n  const s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n  return {\n    segmentGroup: s,\n    slicedSegments\n  };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n  const res = {};\n  for (const r of routes) {\n    if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n      const s = new UrlSegmentGroup([], {});\n      res[getOutlet(r)] = s;\n    }\n  }\n  return {\n    ...children,\n    ...res\n  };\n}\nfunction createChildrenForEmptyPaths(routes, primarySegment) {\n  const res = {};\n  res[PRIMARY_OUTLET] = primarySegment;\n  for (const r of routes) {\n    if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n      const s = new UrlSegmentGroup([], {});\n      res[getOutlet(r)] = s;\n    }\n  }\n  return res;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n  return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n  return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r));\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n  if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n    return false;\n  }\n  return r.path === '';\n}\nfunction noLeftoversInUrl(segmentGroup, segments, outlet) {\n  return segments.length === 0 && !segmentGroup.children[outlet];\n}\n\n/**\n * Class used to indicate there were no additional route config matches but that all segments of\n * the URL were consumed during matching so the route was URL matched. When this happens, we still\n * try to match child configs in case there are empty path children.\n */\nclass NoLeftoversInUrl {}\nfunction recognize$1(injector, configLoader, rootComponentType, config, urlTree, urlSerializer, paramsInheritanceStrategy = 'emptyOnly') {\n  return new Recognizer(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer).recognize();\n}\nconst MAX_ALLOWED_REDIRECTS = 31;\nclass Recognizer {\n  injector;\n  configLoader;\n  rootComponentType;\n  config;\n  urlTree;\n  paramsInheritanceStrategy;\n  urlSerializer;\n  applyRedirects;\n  absoluteRedirectCount = 0;\n  allowRedirects = true;\n  constructor(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer) {\n    this.injector = injector;\n    this.configLoader = configLoader;\n    this.rootComponentType = rootComponentType;\n    this.config = config;\n    this.urlTree = urlTree;\n    this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    this.urlSerializer = urlSerializer;\n    this.applyRedirects = new ApplyRedirects(this.urlSerializer, this.urlTree);\n  }\n  noMatchError(e) {\n    return new ɵRuntimeError(4002 /* RuntimeErrorCode.NO_MATCH */, typeof ngDevMode === 'undefined' || ngDevMode ? `Cannot match any routes. URL Segment: '${e.segmentGroup}'` : `'${e.segmentGroup}'`);\n  }\n  recognize() {\n    const rootSegmentGroup = split(this.urlTree.root, [], [], this.config).segmentGroup;\n    return this.match(rootSegmentGroup).pipe(map(({\n      children,\n      rootSnapshot\n    }) => {\n      const rootNode = new TreeNode(rootSnapshot, children);\n      const routeState = new RouterStateSnapshot('', rootNode);\n      const tree = createUrlTreeFromSnapshot(rootSnapshot, [], this.urlTree.queryParams, this.urlTree.fragment);\n      // https://github.com/angular/angular/issues/47307\n      // Creating the tree stringifies the query params\n      // We don't want to do this here so reassign them to the original.\n      tree.queryParams = this.urlTree.queryParams;\n      routeState.url = this.urlSerializer.serialize(tree);\n      return {\n        state: routeState,\n        tree\n      };\n    }));\n  }\n  match(rootSegmentGroup) {\n    // Use Object.freeze to prevent readers of the Router state from modifying it outside\n    // of a navigation, resulting in the router being out of sync with the browser.\n    const rootSnapshot = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze({\n      ...this.urlTree.queryParams\n    }), this.urlTree.fragment, Object.freeze({}), PRIMARY_OUTLET, this.rootComponentType, null, {});\n    return this.processSegmentGroup(this.injector, this.config, rootSegmentGroup, PRIMARY_OUTLET, rootSnapshot).pipe(map(children => {\n      return {\n        children,\n        rootSnapshot\n      };\n    }), catchError(e => {\n      if (e instanceof AbsoluteRedirect) {\n        this.urlTree = e.urlTree;\n        return this.match(e.urlTree.root);\n      }\n      if (e instanceof NoMatch) {\n        throw this.noMatchError(e);\n      }\n      throw e;\n    }));\n  }\n  processSegmentGroup(injector, config, segmentGroup, outlet, parentRoute) {\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n      return this.processChildren(injector, config, segmentGroup, parentRoute);\n    }\n    return this.processSegment(injector, config, segmentGroup, segmentGroup.segments, outlet, true, parentRoute).pipe(map(child => child instanceof TreeNode ? [child] : []));\n  }\n  /**\n   * Matches every child outlet in the `segmentGroup` to a `Route` in the config. Returns `null` if\n   * we cannot find a match for _any_ of the children.\n   *\n   * @param config - The `Routes` to match against\n   * @param segmentGroup - The `UrlSegmentGroup` whose children need to be matched against the\n   *     config.\n   */\n  processChildren(injector, config, segmentGroup, parentRoute) {\n    // Expand outlets one at a time, starting with the primary outlet. We need to do it this way\n    // because an absolute redirect from the primary outlet takes precedence.\n    const childOutlets = [];\n    for (const child of Object.keys(segmentGroup.children)) {\n      if (child === 'primary') {\n        childOutlets.unshift(child);\n      } else {\n        childOutlets.push(child);\n      }\n    }\n    return from(childOutlets).pipe(concatMap(childOutlet => {\n      const child = segmentGroup.children[childOutlet];\n      // Sort the config so that routes with outlets that match the one being activated\n      // appear first, followed by routes for other outlets, which might match if they have\n      // an empty path.\n      const sortedConfig = sortByMatchingOutlets(config, childOutlet);\n      return this.processSegmentGroup(injector, sortedConfig, child, childOutlet, parentRoute);\n    }), scan((children, outletChildren) => {\n      children.push(...outletChildren);\n      return children;\n    }), defaultIfEmpty(null), last$1(), mergeMap(children => {\n      if (children === null) return noMatch$1(segmentGroup);\n      // Because we may have matched two outlets to the same empty path segment, we can have\n      // multiple activated results for the same outlet. We should merge the children of\n      // these results so the final return value is only one `TreeNode` per outlet.\n      const mergedChildren = mergeEmptyPathMatches(children);\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // This should really never happen - we are only taking the first match for each\n        // outlet and merge the empty path matches.\n        checkOutletNameUniqueness(mergedChildren);\n      }\n      sortActivatedRouteSnapshots(mergedChildren);\n      return of(mergedChildren);\n    }));\n  }\n  processSegment(injector, routes, segmentGroup, segments, outlet, allowRedirects, parentRoute) {\n    return from(routes).pipe(concatMap(r => {\n      return this.processSegmentAgainstRoute(r._injector ?? injector, routes, r, segmentGroup, segments, outlet, allowRedirects, parentRoute).pipe(catchError(e => {\n        if (e instanceof NoMatch) {\n          return of(null);\n        }\n        throw e;\n      }));\n    }), first(x => !!x), catchError(e => {\n      if (isEmptyError(e)) {\n        if (noLeftoversInUrl(segmentGroup, segments, outlet)) {\n          return of(new NoLeftoversInUrl());\n        }\n        return noMatch$1(segmentGroup);\n      }\n      throw e;\n    }));\n  }\n  processSegmentAgainstRoute(injector, routes, route, rawSegment, segments, outlet, allowRedirects, parentRoute) {\n    // We allow matches to empty paths when the outlets differ so we can match a url like `/(b:b)` to\n    // a config like\n    // * `{path: '', children: [{path: 'b', outlet: 'b'}]}`\n    // or even\n    // * `{path: '', outlet: 'a', children: [{path: 'b', outlet: 'b'}]`\n    //\n    // The exception here is when the segment outlet is for the primary outlet. This would\n    // result in a match inside the named outlet because all children there are written as primary\n    // outlets. So we need to prevent child named outlet matches in a url like `/b` in a config like\n    // * `{path: '', outlet: 'x' children: [{path: 'b'}]}`\n    // This should only match if the url is `/(x:b)`.\n    if (getOutlet(route) !== outlet && (outlet === PRIMARY_OUTLET || !emptyPathMatch(rawSegment, segments, route))) {\n      return noMatch$1(rawSegment);\n    }\n    if (route.redirectTo === undefined) {\n      return this.matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet, parentRoute);\n    }\n    if (this.allowRedirects && allowRedirects) {\n      return this.expandSegmentAgainstRouteUsingRedirect(injector, rawSegment, routes, route, segments, outlet, parentRoute);\n    }\n    return noMatch$1(rawSegment);\n  }\n  expandSegmentAgainstRouteUsingRedirect(injector, segmentGroup, routes, route, segments, outlet, parentRoute) {\n    const {\n      matched,\n      parameters,\n      consumedSegments,\n      positionalParamSegments,\n      remainingSegments\n    } = match(segmentGroup, route, segments);\n    if (!matched) return noMatch$1(segmentGroup);\n    // TODO(atscott): Move all of this under an if(ngDevMode) as a breaking change and allow stack\n    // size exceeded in production\n    if (typeof route.redirectTo === 'string' && route.redirectTo[0] === '/') {\n      this.absoluteRedirectCount++;\n      if (this.absoluteRedirectCount > MAX_ALLOWED_REDIRECTS) {\n        if (ngDevMode) {\n          throw new ɵRuntimeError(4016 /* RuntimeErrorCode.INFINITE_REDIRECT */, `Detected possible infinite redirect when redirecting from '${this.urlTree}' to '${route.redirectTo}'.\\n` + `This is currently a dev mode only error but will become a` + ` call stack size exceeded error in production in a future major version.`);\n        }\n        this.allowRedirects = false;\n      }\n    }\n    const currentSnapshot = new ActivatedRouteSnapshot(segments, parameters, Object.freeze({\n      ...this.urlTree.queryParams\n    }), this.urlTree.fragment, getData(route), getOutlet(route), route.component ?? route._loadedComponent ?? null, route, getResolve(route));\n    const inherited = getInherited(currentSnapshot, parentRoute, this.paramsInheritanceStrategy);\n    currentSnapshot.params = Object.freeze(inherited.params);\n    currentSnapshot.data = Object.freeze(inherited.data);\n    const newTree = this.applyRedirects.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments, currentSnapshot, injector);\n    return this.applyRedirects.lineralizeSegments(route, newTree).pipe(mergeMap(newSegments => {\n      return this.processSegment(injector, routes, segmentGroup, newSegments.concat(remainingSegments), outlet, false, parentRoute);\n    }));\n  }\n  matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet, parentRoute) {\n    const matchResult = matchWithChecks(rawSegment, route, segments, injector, this.urlSerializer);\n    if (route.path === '**') {\n      // Prior versions of the route matching algorithm would stop matching at the wildcard route.\n      // We should investigate a better strategy for any existing children. Otherwise, these\n      // child segments are silently dropped from the navigation.\n      // https://github.com/angular/angular/issues/40089\n      rawSegment.children = {};\n    }\n    return matchResult.pipe(switchMap(result => {\n      if (!result.matched) {\n        return noMatch$1(rawSegment);\n      }\n      // If the route has an injector created from providers, we should start using that.\n      injector = route._injector ?? injector;\n      return this.getChildConfig(injector, route, segments).pipe(switchMap(({\n        routes: childConfig\n      }) => {\n        const childInjector = route._loadedInjector ?? injector;\n        const {\n          parameters,\n          consumedSegments,\n          remainingSegments\n        } = result;\n        const snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze({\n          ...this.urlTree.queryParams\n        }), this.urlTree.fragment, getData(route), getOutlet(route), route.component ?? route._loadedComponent ?? null, route, getResolve(route));\n        const inherited = getInherited(snapshot, parentRoute, this.paramsInheritanceStrategy);\n        snapshot.params = Object.freeze(inherited.params);\n        snapshot.data = Object.freeze(inherited.data);\n        const {\n          segmentGroup,\n          slicedSegments\n        } = split(rawSegment, consumedSegments, remainingSegments, childConfig);\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n          return this.processChildren(childInjector, childConfig, segmentGroup, snapshot).pipe(map(children => {\n            return new TreeNode(snapshot, children);\n          }));\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n          return of(new TreeNode(snapshot, []));\n        }\n        const matchedOnOutlet = getOutlet(route) === outlet;\n        // If we matched a config due to empty path match on a different outlet, we need to\n        // continue passing the current outlet for the segment rather than switch to PRIMARY.\n        // Note that we switch to primary when we have a match because outlet configs look like\n        // this: {path: 'a', outlet: 'a', children: [\n        //  {path: 'b', component: B},\n        //  {path: 'c', component: C},\n        // ]}\n        // Notice that the children of the named outlet are configured with the primary outlet\n        return this.processSegment(childInjector, childConfig, segmentGroup, slicedSegments, matchedOnOutlet ? PRIMARY_OUTLET : outlet, true, snapshot).pipe(map(child => {\n          return new TreeNode(snapshot, child instanceof TreeNode ? [child] : []);\n        }));\n      }));\n    }));\n  }\n  getChildConfig(injector, route, segments) {\n    if (route.children) {\n      // The children belong to the same module\n      return of({\n        routes: route.children,\n        injector\n      });\n    }\n    if (route.loadChildren) {\n      // lazy children belong to the loaded module\n      if (route._loadedRoutes !== undefined) {\n        return of({\n          routes: route._loadedRoutes,\n          injector: route._loadedInjector\n        });\n      }\n      return runCanLoadGuards(injector, route, segments, this.urlSerializer).pipe(mergeMap(shouldLoadResult => {\n        if (shouldLoadResult) {\n          return this.configLoader.loadChildren(injector, route).pipe(tap(cfg => {\n            route._loadedRoutes = cfg.routes;\n            route._loadedInjector = cfg.injector;\n          }));\n        }\n        return canLoadFails(route);\n      }));\n    }\n    return of({\n      routes: [],\n      injector\n    });\n  }\n}\nfunction sortActivatedRouteSnapshots(nodes) {\n  nodes.sort((a, b) => {\n    if (a.value.outlet === PRIMARY_OUTLET) return -1;\n    if (b.value.outlet === PRIMARY_OUTLET) return 1;\n    return a.value.outlet.localeCompare(b.value.outlet);\n  });\n}\nfunction hasEmptyPathConfig(node) {\n  const config = node.value.routeConfig;\n  return config && config.path === '';\n}\n/**\n * Finds `TreeNode`s with matching empty path route configs and merges them into `TreeNode` with\n * the children from each duplicate. This is necessary because different outlets can match a\n * single empty path route config and the results need to then be merged.\n */\nfunction mergeEmptyPathMatches(nodes) {\n  const result = [];\n  // The set of nodes which contain children that were merged from two duplicate empty path nodes.\n  const mergedNodes = new Set();\n  for (const node of nodes) {\n    if (!hasEmptyPathConfig(node)) {\n      result.push(node);\n      continue;\n    }\n    const duplicateEmptyPathNode = result.find(resultNode => node.value.routeConfig === resultNode.value.routeConfig);\n    if (duplicateEmptyPathNode !== undefined) {\n      duplicateEmptyPathNode.children.push(...node.children);\n      mergedNodes.add(duplicateEmptyPathNode);\n    } else {\n      result.push(node);\n    }\n  }\n  // For each node which has children from multiple sources, we need to recompute a new `TreeNode`\n  // by also merging those children. This is necessary when there are multiple empty path configs\n  // in a row. Put another way: whenever we combine children of two nodes, we need to also check\n  // if any of those children can be combined into a single node as well.\n  for (const mergedNode of mergedNodes) {\n    const mergedChildren = mergeEmptyPathMatches(mergedNode.children);\n    result.push(new TreeNode(mergedNode.value, mergedChildren));\n  }\n  return result.filter(n => !mergedNodes.has(n));\n}\nfunction checkOutletNameUniqueness(nodes) {\n  const names = {};\n  nodes.forEach(n => {\n    const routeWithSameOutletName = names[n.value.outlet];\n    if (routeWithSameOutletName) {\n      const p = routeWithSameOutletName.url.map(s => s.toString()).join('/');\n      const c = n.value.url.map(s => s.toString()).join('/');\n      throw new ɵRuntimeError(4006 /* RuntimeErrorCode.TWO_SEGMENTS_WITH_SAME_OUTLET */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n    }\n    names[n.value.outlet] = n.value;\n  });\n}\nfunction getData(route) {\n  return route.data || {};\n}\nfunction getResolve(route) {\n  return route.resolve || {};\n}\nfunction recognize(injector, configLoader, rootComponentType, config, serializer, paramsInheritanceStrategy) {\n  return mergeMap(t => recognize$1(injector, configLoader, rootComponentType, config, t.extractedUrl, serializer, paramsInheritanceStrategy).pipe(map(({\n    state: targetSnapshot,\n    tree: urlAfterRedirects\n  }) => {\n    return {\n      ...t,\n      targetSnapshot,\n      urlAfterRedirects\n    };\n  })));\n}\nfunction resolveData(paramsInheritanceStrategy, injector) {\n  return mergeMap(t => {\n    const {\n      targetSnapshot,\n      guards: {\n        canActivateChecks\n      }\n    } = t;\n    if (!canActivateChecks.length) {\n      return of(t);\n    }\n    // Iterating a Set in javascript  happens in insertion order so it is safe to use a `Set` to\n    // preserve the correct order that the resolvers should run in.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#description\n    const routesWithResolversToRun = new Set(canActivateChecks.map(check => check.route));\n    const routesNeedingDataUpdates = new Set();\n    for (const route of routesWithResolversToRun) {\n      if (routesNeedingDataUpdates.has(route)) {\n        continue;\n      }\n      // All children under the route with a resolver to run need to recompute inherited data.\n      for (const newRoute of flattenRouteTree(route)) {\n        routesNeedingDataUpdates.add(newRoute);\n      }\n    }\n    let routesProcessed = 0;\n    return from(routesNeedingDataUpdates).pipe(concatMap(route => {\n      if (routesWithResolversToRun.has(route)) {\n        return runResolve(route, targetSnapshot, paramsInheritanceStrategy, injector);\n      } else {\n        route.data = getInherited(route, route.parent, paramsInheritanceStrategy).resolve;\n        return of(void 0);\n      }\n    }), tap(() => routesProcessed++), takeLast(1), mergeMap(_ => routesProcessed === routesNeedingDataUpdates.size ? of(t) : EMPTY));\n  });\n}\n/**\n *  Returns the `ActivatedRouteSnapshot` tree as an array, using DFS to traverse the route tree.\n */\nfunction flattenRouteTree(route) {\n  const descendants = route.children.map(child => flattenRouteTree(child)).flat();\n  return [route, ...descendants];\n}\nfunction runResolve(futureARS, futureRSS, paramsInheritanceStrategy, injector) {\n  const config = futureARS.routeConfig;\n  const resolve = futureARS._resolve;\n  if (config?.title !== undefined && !hasStaticTitle(config)) {\n    resolve[RouteTitleKey] = config.title;\n  }\n  return resolveNode(resolve, futureARS, futureRSS, injector).pipe(map(resolvedData => {\n    futureARS._resolvedData = resolvedData;\n    futureARS.data = getInherited(futureARS, futureARS.parent, paramsInheritanceStrategy).resolve;\n    return null;\n  }));\n}\nfunction resolveNode(resolve, futureARS, futureRSS, injector) {\n  const keys = getDataKeys(resolve);\n  if (keys.length === 0) {\n    return of({});\n  }\n  const data = {};\n  return from(keys).pipe(mergeMap(key => getResolver(resolve[key], futureARS, futureRSS, injector).pipe(first(), tap(value => {\n    if (value instanceof RedirectCommand) {\n      throw redirectingNavigationError(new DefaultUrlSerializer(), value);\n    }\n    data[key] = value;\n  }))), takeLast(1), map(() => data), catchError(e => isEmptyError(e) ? EMPTY : throwError(e)));\n}\nfunction getResolver(injectionToken, futureARS, futureRSS, injector) {\n  const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n  const resolver = getTokenOrFunctionIdentity(injectionToken, closestInjector);\n  const resolverValue = resolver.resolve ? resolver.resolve(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => resolver(futureARS, futureRSS));\n  return wrapIntoObservable(resolverValue);\n}\n\n/**\n * Perform a side effect through a switchMap for every emission on the source Observable,\n * but return an Observable that is identical to the source. It's essentially the same as\n * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n * it will wait before continuing with the original value.\n */\nfunction switchTap(next) {\n  return switchMap(v => {\n    const nextResult = next(v);\n    if (nextResult) {\n      return from(nextResult).pipe(map(() => v));\n    }\n    return of(v);\n  });\n}\n\n/**\n * Provides a strategy for setting the page title after a router navigation.\n *\n * The built-in implementation traverses the router state snapshot and finds the deepest primary\n * outlet with `title` property. Given the `Routes` below, navigating to\n * `/base/child(popup:aux)` would result in the document title being set to \"child\".\n * ```ts\n * [\n *   {path: 'base', title: 'base', children: [\n *     {path: 'child', title: 'child'},\n *   ],\n *   {path: 'aux', outlet: 'popup', title: 'popupTitle'}\n * ]\n * ```\n *\n * This class can be used as a base class for custom title strategies. That is, you can create your\n * own class that extends the `TitleStrategy`. Note that in the above example, the `title`\n * from the named outlet is never used. However, a custom strategy might be implemented to\n * incorporate titles in named outlets.\n *\n * @publicApi\n * @see [Page title guide](guide/routing/common-router-tasks#setting-the-page-title)\n */\nlet TitleStrategy = /*#__PURE__*/(() => {\n  class TitleStrategy {\n    /**\n     * @returns The `title` of the deepest primary route.\n     */\n    buildTitle(snapshot) {\n      let pageTitle;\n      let route = snapshot.root;\n      while (route !== undefined) {\n        pageTitle = this.getResolvedTitleForRoute(route) ?? pageTitle;\n        route = route.children.find(child => child.outlet === PRIMARY_OUTLET);\n      }\n      return pageTitle;\n    }\n    /**\n     * Given an `ActivatedRouteSnapshot`, returns the final value of the\n     * `Route.title` property, which can either be a static string or a resolved value.\n     */\n    getResolvedTitleForRoute(snapshot) {\n      return snapshot.data[RouteTitleKey];\n    }\n    static ɵfac = function TitleStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TitleStrategy)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TitleStrategy,\n      factory: () => (() => inject(DefaultTitleStrategy))(),\n      providedIn: 'root'\n    });\n  }\n  return TitleStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The default `TitleStrategy` used by the router that updates the title using the `Title` service.\n */\nlet DefaultTitleStrategy = /*#__PURE__*/(() => {\n  class DefaultTitleStrategy extends TitleStrategy {\n    title;\n    constructor(title) {\n      super();\n      this.title = title;\n    }\n    /**\n     * Sets the title of the browser to the given value.\n     *\n     * @param title The `pageTitle` from the deepest primary route.\n     */\n    updateTitle(snapshot) {\n      const title = this.buildTitle(snapshot);\n      if (title !== undefined) {\n        this.title.setTitle(title);\n      }\n    }\n    static ɵfac = function DefaultTitleStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DefaultTitleStrategy)(i0.ɵɵinject(i1.Title));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DefaultTitleStrategy,\n      factory: DefaultTitleStrategy.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DefaultTitleStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A DI token for the router service.\n *\n * @publicApi\n */\nconst ROUTER_CONFIGURATION = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router config' : '', {\n  providedIn: 'root',\n  factory: () => ({})\n});\n\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nlet ɵEmptyOutletComponent = /*#__PURE__*/(() => {\n  class ɵEmptyOutletComponent {\n    static ɵfac = function ɵEmptyOutletComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ɵEmptyOutletComponent)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ɵEmptyOutletComponent,\n      selectors: [[\"ng-component\"]],\n      exportAs: [\"emptyRouterOutlet\"],\n      decls: 1,\n      vars: 0,\n      template: function _EmptyOutletComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"router-outlet\");\n        }\n      },\n      dependencies: [RouterOutlet],\n      encapsulation: 2\n    });\n  }\n  return ɵEmptyOutletComponent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Makes a copy of the config and adds any default required properties.\n */\nfunction standardizeConfig(r) {\n  const children = r.children && r.children.map(standardizeConfig);\n  const c = children ? {\n    ...r,\n    children\n  } : {\n    ...r\n  };\n  if (!c.component && !c.loadComponent && (children || c.loadChildren) && c.outlet && c.outlet !== PRIMARY_OUTLET) {\n    c.component = ɵEmptyOutletComponent;\n  }\n  return c;\n}\n\n/**\n * The DI token for a router configuration.\n *\n * `ROUTES` is a low level API for router configuration via dependency injection.\n *\n * We recommend that in almost all cases to use higher level APIs such as `RouterModule.forRoot()`,\n * `provideRouter`, or `Router.resetConfig()`.\n *\n * @publicApi\n */\nconst ROUTES = /*#__PURE__*/new InjectionToken(ngDevMode ? 'ROUTES' : '');\nlet RouterConfigLoader = /*#__PURE__*/(() => {\n  class RouterConfigLoader {\n    componentLoaders = new WeakMap();\n    childrenLoaders = new WeakMap();\n    onLoadStartListener;\n    onLoadEndListener;\n    compiler = inject(Compiler);\n    loadComponent(route) {\n      if (this.componentLoaders.get(route)) {\n        return this.componentLoaders.get(route);\n      } else if (route._loadedComponent) {\n        return of(route._loadedComponent);\n      }\n      if (this.onLoadStartListener) {\n        this.onLoadStartListener(route);\n      }\n      const loadRunner = wrapIntoObservable(route.loadComponent()).pipe(map(maybeUnwrapDefaultExport), tap(component => {\n        if (this.onLoadEndListener) {\n          this.onLoadEndListener(route);\n        }\n        (typeof ngDevMode === 'undefined' || ngDevMode) && assertStandalone(route.path ?? '', component);\n        route._loadedComponent = component;\n      }), finalize(() => {\n        this.componentLoaders.delete(route);\n      }));\n      // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n      const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n      this.componentLoaders.set(route, loader);\n      return loader;\n    }\n    loadChildren(parentInjector, route) {\n      if (this.childrenLoaders.get(route)) {\n        return this.childrenLoaders.get(route);\n      } else if (route._loadedRoutes) {\n        return of({\n          routes: route._loadedRoutes,\n          injector: route._loadedInjector\n        });\n      }\n      if (this.onLoadStartListener) {\n        this.onLoadStartListener(route);\n      }\n      const moduleFactoryOrRoutes$ = loadChildren(route, this.compiler, parentInjector, this.onLoadEndListener);\n      const loadRunner = moduleFactoryOrRoutes$.pipe(finalize(() => {\n        this.childrenLoaders.delete(route);\n      }));\n      // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n      const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n      this.childrenLoaders.set(route, loader);\n      return loader;\n    }\n    static ɵfac = function RouterConfigLoader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterConfigLoader)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouterConfigLoader,\n      factory: RouterConfigLoader.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return RouterConfigLoader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Executes a `route.loadChildren` callback and converts the result to an array of child routes and\n * an injector if that callback returned a module.\n *\n * This function is used for the route discovery during prerendering\n * in @angular-devkit/build-angular. If there are any updates to the contract here, it will require\n * an update to the extractor.\n */\nfunction loadChildren(route, compiler, parentInjector, onLoadEndListener) {\n  return wrapIntoObservable(route.loadChildren()).pipe(map(maybeUnwrapDefaultExport), mergeMap(t => {\n    if (t instanceof NgModuleFactory || Array.isArray(t)) {\n      return of(t);\n    } else {\n      return from(compiler.compileModuleAsync(t));\n    }\n  }), map(factoryOrRoutes => {\n    if (onLoadEndListener) {\n      onLoadEndListener(route);\n    }\n    // This injector comes from the `NgModuleRef` when lazy loading an `NgModule`. There is\n    // no injector associated with lazy loading a `Route` array.\n    let injector;\n    let rawRoutes;\n    let requireStandaloneComponents = false;\n    if (Array.isArray(factoryOrRoutes)) {\n      rawRoutes = factoryOrRoutes;\n      requireStandaloneComponents = true;\n    } else {\n      injector = factoryOrRoutes.create(parentInjector).injector;\n      // When loading a module that doesn't provide `RouterModule.forChild()` preloader\n      // will get stuck in an infinite loop. The child module's Injector will look to\n      // its parent `Injector` when it doesn't find any ROUTES so it will return routes\n      // for it's parent module instead.\n      rawRoutes = injector.get(ROUTES, [], {\n        optional: true,\n        self: true\n      }).flat();\n    }\n    const routes = rawRoutes.map(standardizeConfig);\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateConfig(routes, route.path, requireStandaloneComponents);\n    return {\n      routes,\n      injector\n    };\n  }));\n}\nfunction isWrappedDefaultExport(value) {\n  // We use `in` here with a string key `'default'`, because we expect `DefaultExport` objects to be\n  // dynamically imported ES modules with a spec-mandated `default` key. Thus we don't expect that\n  // `default` will be a renamed property.\n  return value && typeof value === 'object' && 'default' in value;\n}\nfunction maybeUnwrapDefaultExport(input) {\n  // As per `isWrappedDefaultExport`, the `default` key here is generated by the browser and not\n  // subject to property renaming, so we reference it with bracket access.\n  return isWrappedDefaultExport(input) ? input['default'] : input;\n}\n\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @publicApi\n */\nlet UrlHandlingStrategy = /*#__PURE__*/(() => {\n  class UrlHandlingStrategy {\n    static ɵfac = function UrlHandlingStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UrlHandlingStrategy)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UrlHandlingStrategy,\n      factory: () => (() => inject(DefaultUrlHandlingStrategy))(),\n      providedIn: 'root'\n    });\n  }\n  return UrlHandlingStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @publicApi\n */\nlet DefaultUrlHandlingStrategy = /*#__PURE__*/(() => {\n  class DefaultUrlHandlingStrategy {\n    shouldProcessUrl(url) {\n      return true;\n    }\n    extract(url) {\n      return url;\n    }\n    merge(newUrlPart, wholeUrl) {\n      return newUrlPart;\n    }\n    static ɵfac = function DefaultUrlHandlingStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DefaultUrlHandlingStrategy)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DefaultUrlHandlingStrategy,\n      factory: DefaultUrlHandlingStrategy.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DefaultUrlHandlingStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/// <reference types=\"dom-view-transitions\" />\nconst CREATE_VIEW_TRANSITION = /*#__PURE__*/new InjectionToken(ngDevMode ? 'view transition helper' : '');\nconst VIEW_TRANSITION_OPTIONS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'view transition options' : '');\n/**\n * A helper function for using browser view transitions. This function skips the call to\n * `startViewTransition` if the browser does not support it.\n *\n * @returns A Promise that resolves when the view transition callback begins.\n */\nfunction createViewTransition(injector, from, to) {\n  const transitionOptions = injector.get(VIEW_TRANSITION_OPTIONS);\n  const document = injector.get(DOCUMENT);\n  // Create promises outside the Angular zone to avoid causing extra change detections\n  return injector.get(NgZone).runOutsideAngular(() => {\n    if (!document.startViewTransition || transitionOptions.skipNextTransition) {\n      transitionOptions.skipNextTransition = false;\n      // The timing of `startViewTransition` is closer to a macrotask. It won't be called\n      // until the current event loop exits so we use a promise resolved in a timeout instead\n      // of Promise.resolve().\n      return new Promise(resolve => setTimeout(resolve));\n    }\n    let resolveViewTransitionStarted;\n    const viewTransitionStarted = new Promise(resolve => {\n      resolveViewTransitionStarted = resolve;\n    });\n    const transition = document.startViewTransition(() => {\n      resolveViewTransitionStarted();\n      // We don't actually update dom within the transition callback. The resolving of the above\n      // promise unblocks the Router navigation, which synchronously activates and deactivates\n      // routes (the DOM update). This view transition waits for the next change detection to\n      // complete (below), which includes the update phase of the routed components.\n      return createRenderPromise(injector);\n    });\n    const {\n      onViewTransitionCreated\n    } = transitionOptions;\n    if (onViewTransitionCreated) {\n      runInInjectionContext(injector, () => onViewTransitionCreated({\n        transition,\n        from,\n        to\n      }));\n    }\n    return viewTransitionStarted;\n  });\n}\n/**\n * Creates a promise that resolves after next render.\n */\nfunction createRenderPromise(injector) {\n  return new Promise(resolve => {\n    // Wait for the microtask queue to empty after the next render happens (by waiting a macrotask).\n    // This ensures any follow-up renders in the microtask queue are completed before the\n    // view transition starts animating.\n    afterNextRender({\n      read: () => setTimeout(resolve)\n    }, {\n      injector\n    });\n  });\n}\nconst NAVIGATION_ERROR_HANDLER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'navigation error handler' : '');\nlet NavigationTransitions = /*#__PURE__*/(() => {\n  class NavigationTransitions {\n    currentNavigation = null;\n    currentTransition = null;\n    lastSuccessfulNavigation = null;\n    /**\n     * These events are used to communicate back to the Router about the state of the transition. The\n     * Router wants to respond to these events in various ways. Because the `NavigationTransition`\n     * class is not public, this event subject is not publicly exposed.\n     */\n    events = new Subject();\n    /**\n     * Used to abort the current transition with an error.\n     */\n    transitionAbortSubject = new Subject();\n    configLoader = inject(RouterConfigLoader);\n    environmentInjector = inject(EnvironmentInjector);\n    destroyRef = inject(DestroyRef);\n    urlSerializer = inject(UrlSerializer);\n    rootContexts = inject(ChildrenOutletContexts);\n    location = inject(Location);\n    inputBindingEnabled = inject(INPUT_BINDER, {\n      optional: true\n    }) !== null;\n    titleStrategy = inject(TitleStrategy);\n    options = inject(ROUTER_CONFIGURATION, {\n      optional: true\n    }) || {};\n    paramsInheritanceStrategy = this.options.paramsInheritanceStrategy || 'emptyOnly';\n    urlHandlingStrategy = inject(UrlHandlingStrategy);\n    createViewTransition = inject(CREATE_VIEW_TRANSITION, {\n      optional: true\n    });\n    navigationErrorHandler = inject(NAVIGATION_ERROR_HANDLER, {\n      optional: true\n    });\n    navigationId = 0;\n    get hasRequestedNavigation() {\n      return this.navigationId !== 0;\n    }\n    transitions;\n    /**\n     * Hook that enables you to pause navigation after the preactivation phase.\n     * Used by `RouterModule`.\n     *\n     * @internal\n     */\n    afterPreactivation = () => of(void 0);\n    /** @internal */\n    rootComponentType = null;\n    destroyed = false;\n    constructor() {\n      const onLoadStart = r => this.events.next(new RouteConfigLoadStart(r));\n      const onLoadEnd = r => this.events.next(new RouteConfigLoadEnd(r));\n      this.configLoader.onLoadEndListener = onLoadEnd;\n      this.configLoader.onLoadStartListener = onLoadStart;\n      this.destroyRef.onDestroy(() => {\n        this.destroyed = true;\n      });\n    }\n    complete() {\n      this.transitions?.complete();\n    }\n    handleNavigationRequest(request) {\n      const id = ++this.navigationId;\n      this.transitions?.next({\n        ...this.transitions.value,\n        ...request,\n        id\n      });\n    }\n    setupNavigations(router, initialUrlTree, initialRouterState) {\n      this.transitions = new BehaviorSubject({\n        id: 0,\n        currentUrlTree: initialUrlTree,\n        currentRawUrl: initialUrlTree,\n        extractedUrl: this.urlHandlingStrategy.extract(initialUrlTree),\n        urlAfterRedirects: this.urlHandlingStrategy.extract(initialUrlTree),\n        rawUrl: initialUrlTree,\n        extras: {},\n        resolve: () => {},\n        reject: () => {},\n        promise: Promise.resolve(true),\n        source: IMPERATIVE_NAVIGATION,\n        restoredState: null,\n        currentSnapshot: initialRouterState.snapshot,\n        targetSnapshot: null,\n        currentRouterState: initialRouterState,\n        targetRouterState: null,\n        guards: {\n          canActivateChecks: [],\n          canDeactivateChecks: []\n        },\n        guardsResult: null\n      });\n      return this.transitions.pipe(filter(t => t.id !== 0),\n      // Extract URL\n      map(t => ({\n        ...t,\n        extractedUrl: this.urlHandlingStrategy.extract(t.rawUrl)\n      })),\n      // Using switchMap so we cancel executing navigations when a new one comes in\n      switchMap(overallTransitionState => {\n        let completed = false;\n        let errored = false;\n        return of(overallTransitionState).pipe(switchMap(t => {\n          // It is possible that `switchMap` fails to cancel previous navigations if a new one happens synchronously while the operator\n          // is processing the `next` notification of that previous navigation. This can happen when a new navigation (say 2) cancels a\n          // previous one (1) and yet another navigation (3) happens synchronously in response to the `NavigationCancel` event for (1).\n          // https://github.com/ReactiveX/rxjs/issues/7455\n          if (this.navigationId > overallTransitionState.id) {\n            const cancellationReason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}` : '';\n            this.cancelNavigationTransition(overallTransitionState, cancellationReason, NavigationCancellationCode.SupersededByNewNavigation);\n            return EMPTY;\n          }\n          this.currentTransition = overallTransitionState;\n          // Store the Navigation object\n          this.currentNavigation = {\n            id: t.id,\n            initialUrl: t.rawUrl,\n            extractedUrl: t.extractedUrl,\n            targetBrowserUrl: typeof t.extras.browserUrl === 'string' ? this.urlSerializer.parse(t.extras.browserUrl) : t.extras.browserUrl,\n            trigger: t.source,\n            extras: t.extras,\n            previousNavigation: !this.lastSuccessfulNavigation ? null : {\n              ...this.lastSuccessfulNavigation,\n              previousNavigation: null\n            }\n          };\n          const urlTransition = !router.navigated || this.isUpdatingInternalState() || this.isUpdatedBrowserUrl();\n          const onSameUrlNavigation = t.extras.onSameUrlNavigation ?? router.onSameUrlNavigation;\n          if (!urlTransition && onSameUrlNavigation !== 'reload') {\n            const reason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation to ${t.rawUrl} was ignored because it is the same as the current Router URL.` : '';\n            this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.rawUrl), reason, NavigationSkippedCode.IgnoredSameUrlNavigation));\n            t.resolve(false);\n            return EMPTY;\n          }\n          if (this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl)) {\n            return of(t).pipe(\n            // Fire NavigationStart event\n            switchMap(t => {\n              const transition = this.transitions?.getValue();\n              this.events.next(new NavigationStart(t.id, this.urlSerializer.serialize(t.extractedUrl), t.source, t.restoredState));\n              if (transition !== this.transitions?.getValue()) {\n                return EMPTY;\n              }\n              // This delay is required to match old behavior that forced\n              // navigation to always be async\n              return Promise.resolve(t);\n            }),\n            // Recognize\n            recognize(this.environmentInjector, this.configLoader, this.rootComponentType, router.config, this.urlSerializer, this.paramsInheritanceStrategy),\n            // Update URL if in `eager` update mode\n            tap(t => {\n              overallTransitionState.targetSnapshot = t.targetSnapshot;\n              overallTransitionState.urlAfterRedirects = t.urlAfterRedirects;\n              this.currentNavigation = {\n                ...this.currentNavigation,\n                finalUrl: t.urlAfterRedirects\n              };\n              // Fire RoutesRecognized\n              const routesRecognized = new RoutesRecognized(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n              this.events.next(routesRecognized);\n            }));\n          } else if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(t.currentRawUrl)) {\n            /* When the current URL shouldn't be processed, but the previous one\n             * was, we handle this \"error condition\" by navigating to the\n             * previously successful URL, but leaving the URL intact.*/\n            const {\n              id,\n              extractedUrl,\n              source,\n              restoredState,\n              extras\n            } = t;\n            const navStart = new NavigationStart(id, this.urlSerializer.serialize(extractedUrl), source, restoredState);\n            this.events.next(navStart);\n            const targetSnapshot = createEmptyState(this.rootComponentType).snapshot;\n            this.currentTransition = overallTransitionState = {\n              ...t,\n              targetSnapshot,\n              urlAfterRedirects: extractedUrl,\n              extras: {\n                ...extras,\n                skipLocationChange: false,\n                replaceUrl: false\n              }\n            };\n            this.currentNavigation.finalUrl = extractedUrl;\n            return of(overallTransitionState);\n          } else {\n            /* When neither the current or previous URL can be processed, do\n             * nothing other than update router's internal reference to the\n             * current \"settled\" URL. This way the next navigation will be coming\n             * from the current URL in the browser.\n             */\n            const reason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation was ignored because the UrlHandlingStrategy` + ` indicated neither the current URL ${t.currentRawUrl} nor target URL ${t.rawUrl} should be processed.` : '';\n            this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, NavigationSkippedCode.IgnoredByUrlHandlingStrategy));\n            t.resolve(false);\n            return EMPTY;\n          }\n        }),\n        // --- GUARDS ---\n        tap(t => {\n          const guardsStart = new GuardsCheckStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n          this.events.next(guardsStart);\n        }), map(t => {\n          this.currentTransition = overallTransitionState = {\n            ...t,\n            guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, this.rootContexts)\n          };\n          return overallTransitionState;\n        }), checkGuards(this.environmentInjector, evt => this.events.next(evt)), tap(t => {\n          overallTransitionState.guardsResult = t.guardsResult;\n          if (t.guardsResult && typeof t.guardsResult !== 'boolean') {\n            throw redirectingNavigationError(this.urlSerializer, t.guardsResult);\n          }\n          const guardsEnd = new GuardsCheckEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n          this.events.next(guardsEnd);\n        }), filter(t => {\n          if (!t.guardsResult) {\n            this.cancelNavigationTransition(t, '', NavigationCancellationCode.GuardRejected);\n            return false;\n          }\n          return true;\n        }),\n        // --- RESOLVE ---\n        switchTap(t => {\n          if (t.guards.canActivateChecks.length) {\n            return of(t).pipe(tap(t => {\n              const resolveStart = new ResolveStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n              this.events.next(resolveStart);\n            }), switchMap(t => {\n              let dataResolved = false;\n              return of(t).pipe(resolveData(this.paramsInheritanceStrategy, this.environmentInjector), tap({\n                next: () => dataResolved = true,\n                complete: () => {\n                  if (!dataResolved) {\n                    this.cancelNavigationTransition(t, typeof ngDevMode === 'undefined' || ngDevMode ? `At least one route resolver didn't emit any value.` : '', NavigationCancellationCode.NoDataFromResolver);\n                  }\n                }\n              }));\n            }), tap(t => {\n              const resolveEnd = new ResolveEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n              this.events.next(resolveEnd);\n            }));\n          }\n          return undefined;\n        }),\n        // --- LOAD COMPONENTS ---\n        switchTap(t => {\n          const loadComponents = route => {\n            const loaders = [];\n            if (route.routeConfig?.loadComponent && !route.routeConfig._loadedComponent) {\n              loaders.push(this.configLoader.loadComponent(route.routeConfig).pipe(tap(loadedComponent => {\n                route.component = loadedComponent;\n              }), map(() => void 0)));\n            }\n            for (const child of route.children) {\n              loaders.push(...loadComponents(child));\n            }\n            return loaders;\n          };\n          return combineLatest(loadComponents(t.targetSnapshot.root)).pipe(defaultIfEmpty(null), take(1));\n        }), switchTap(() => this.afterPreactivation()), switchMap(() => {\n          const {\n            currentSnapshot,\n            targetSnapshot\n          } = overallTransitionState;\n          const viewTransitionStarted = this.createViewTransition?.(this.environmentInjector, currentSnapshot.root, targetSnapshot.root);\n          // If view transitions are enabled, block the navigation until the view\n          // transition callback starts. Otherwise, continue immediately.\n          return viewTransitionStarted ? from(viewTransitionStarted).pipe(map(() => overallTransitionState)) : of(overallTransitionState);\n        }), map(t => {\n          const targetRouterState = createRouterState(router.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n          this.currentTransition = overallTransitionState = {\n            ...t,\n            targetRouterState\n          };\n          this.currentNavigation.targetRouterState = targetRouterState;\n          return overallTransitionState;\n        }), tap(() => {\n          this.events.next(new BeforeActivateRoutes());\n        }), activateRoutes(this.rootContexts, router.routeReuseStrategy, evt => this.events.next(evt), this.inputBindingEnabled),\n        // Ensure that if some observable used to drive the transition doesn't\n        // complete, the navigation still finalizes This should never happen, but\n        // this is done as a safety measure to avoid surfacing this error (#49567).\n        take(1), tap({\n          next: t => {\n            completed = true;\n            this.lastSuccessfulNavigation = this.currentNavigation;\n            this.events.next(new NavigationEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects)));\n            this.titleStrategy?.updateTitle(t.targetRouterState.snapshot);\n            t.resolve(true);\n          },\n          complete: () => {\n            completed = true;\n          }\n        }),\n        // There used to be a lot more logic happening directly within the\n        // transition Observable. Some of this logic has been refactored out to\n        // other places but there may still be errors that happen there. This gives\n        // us a way to cancel the transition from the outside. This may also be\n        // required in the future to support something like the abort signal of the\n        // Navigation API where the navigation gets aborted from outside the\n        // transition.\n        takeUntil(this.transitionAbortSubject.pipe(tap(err => {\n          throw err;\n        }))), finalize(() => {\n          /* When the navigation stream finishes either through error or success,\n           * we set the `completed` or `errored` flag. However, there are some\n           * situations where we could get here without either of those being set.\n           * For instance, a redirect during NavigationStart. Therefore, this is a\n           * catch-all to make sure the NavigationCancel event is fired when a\n           * navigation gets cancelled but not caught by other means. */\n          if (!completed && !errored) {\n            const cancelationReason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}` : '';\n            this.cancelNavigationTransition(overallTransitionState, cancelationReason, NavigationCancellationCode.SupersededByNewNavigation);\n          }\n          // Only clear current navigation if it is still set to the one that\n          // finalized.\n          if (this.currentTransition?.id === overallTransitionState.id) {\n            this.currentNavigation = null;\n            this.currentTransition = null;\n          }\n        }), catchError(e => {\n          // If the application is already destroyed, the catch block should not\n          // execute anything in practice because other resources have already\n          // been released and destroyed.\n          if (this.destroyed) {\n            overallTransitionState.resolve(false);\n            return EMPTY;\n          }\n          errored = true;\n          /* This error type is issued during Redirect, and is handled as a\n           * cancellation rather than an error. */\n          if (isNavigationCancelingError(e)) {\n            this.events.next(new NavigationCancel(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e.message, e.cancellationCode));\n            // When redirecting, we need to delay resolving the navigation\n            // promise and push it to the redirect navigation\n            if (!isRedirectingNavigationCancelingError(e)) {\n              overallTransitionState.resolve(false);\n            } else {\n              this.events.next(new RedirectRequest(e.url, e.navigationBehaviorOptions));\n            }\n            /* All other errors should reset to the router's internal URL reference\n             * to the pre-error state. */\n          } else {\n            const navigationError = new NavigationError(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e, overallTransitionState.targetSnapshot ?? undefined);\n            try {\n              const navigationErrorHandlerResult = runInInjectionContext(this.environmentInjector, () => this.navigationErrorHandler?.(navigationError));\n              if (navigationErrorHandlerResult instanceof RedirectCommand) {\n                const {\n                  message,\n                  cancellationCode\n                } = redirectingNavigationError(this.urlSerializer, navigationErrorHandlerResult);\n                this.events.next(new NavigationCancel(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), message, cancellationCode));\n                this.events.next(new RedirectRequest(navigationErrorHandlerResult.redirectTo, navigationErrorHandlerResult.navigationBehaviorOptions));\n              } else {\n                this.events.next(navigationError);\n                throw e;\n              }\n            } catch (ee) {\n              // TODO(atscott): consider flipping the default behavior of\n              // resolveNavigationPromiseOnError to be `resolve(false)` when\n              // undefined. This is the most sane thing to do given that\n              // applications very rarely handle the promise rejection and, as a\n              // result, would get \"unhandled promise rejection\" console logs.\n              // The vast majority of applications would not be affected by this\n              // change so omitting a migration seems reasonable. Instead,\n              // applications that rely on rejection can specifically opt-in to the\n              // old behavior.\n              if (this.options.resolveNavigationPromiseOnError) {\n                overallTransitionState.resolve(false);\n              } else {\n                overallTransitionState.reject(ee);\n              }\n            }\n          }\n          return EMPTY;\n        }));\n        // casting because `pipe` returns observable({}) when called with 8+ arguments\n      }));\n    }\n    cancelNavigationTransition(t, reason, code) {\n      const navCancel = new NavigationCancel(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, code);\n      this.events.next(navCancel);\n      t.resolve(false);\n    }\n    /**\n     * @returns Whether we're navigating to somewhere that is not what the Router is\n     * currently set to.\n     */\n    isUpdatingInternalState() {\n      // TODO(atscott): The serializer should likely be used instead of\n      // `UrlTree.toString()`. Custom serializers are often written to handle\n      // things better than the default one (objects, for example will be\n      // [Object object] with the custom serializer and be \"the same\" when they\n      // aren't).\n      // (Same for isUpdatedBrowserUrl)\n      return this.currentTransition?.extractedUrl.toString() !== this.currentTransition?.currentUrlTree.toString();\n    }\n    /**\n     * @returns Whether we're updating the browser URL to something new (navigation is going\n     * to somewhere not displayed in the URL bar and we will update the URL\n     * bar if navigation succeeds).\n     */\n    isUpdatedBrowserUrl() {\n      // The extracted URL is the part of the URL that this application cares about. `extract` may\n      // return only part of the browser URL and that part may have not changed even if some other\n      // portion of the URL did.\n      const currentBrowserUrl = this.urlHandlingStrategy.extract(this.urlSerializer.parse(this.location.path(true)));\n      const targetBrowserUrl = this.currentNavigation?.targetBrowserUrl ?? this.currentNavigation?.extractedUrl;\n      return currentBrowserUrl.toString() !== targetBrowserUrl?.toString() && !this.currentNavigation?.extras.skipLocationChange;\n    }\n    static ɵfac = function NavigationTransitions_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NavigationTransitions)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NavigationTransitions,\n      factory: NavigationTransitions.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NavigationTransitions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isBrowserTriggeredNavigation(source) {\n  return source !== IMPERATIVE_NAVIGATION;\n}\n\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @publicApi\n */\nlet RouteReuseStrategy = /*#__PURE__*/(() => {\n  class RouteReuseStrategy {\n    static ɵfac = function RouteReuseStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouteReuseStrategy)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouteReuseStrategy,\n      factory: () => (() => inject(DefaultRouteReuseStrategy))(),\n      providedIn: 'root'\n    });\n  }\n  return RouteReuseStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * This base route reuse strategy only reuses routes when the matched router configs are\n * identical. This prevents components from being destroyed and recreated\n * when just the route parameters, query parameters or fragment change\n * (that is, the existing component is _reused_).\n *\n * This strategy does not store any routes for later reuse.\n *\n * Angular uses this strategy by default.\n *\n *\n * It can be used as a base class for custom route reuse strategies, i.e. you can create your own\n * class that extends the `BaseRouteReuseStrategy` one.\n * @publicApi\n */\nclass BaseRouteReuseStrategy {\n  /**\n   * Whether the given route should detach for later reuse.\n   * Always returns false for `BaseRouteReuseStrategy`.\n   * */\n  shouldDetach(route) {\n    return false;\n  }\n  /**\n   * A no-op; the route is never stored since this strategy never detaches routes for later re-use.\n   */\n  store(route, detachedTree) {}\n  /** Returns `false`, meaning the route (and its subtree) is never reattached */\n  shouldAttach(route) {\n    return false;\n  }\n  /** Returns `null` because this strategy does not store routes for later re-use. */\n  retrieve(route) {\n    return null;\n  }\n  /**\n   * Determines if a route should be reused.\n   * This strategy returns `true` when the future route config and current route config are\n   * identical.\n   */\n  shouldReuseRoute(future, curr) {\n    return future.routeConfig === curr.routeConfig;\n  }\n}\nlet DefaultRouteReuseStrategy = /*#__PURE__*/(() => {\n  class DefaultRouteReuseStrategy extends BaseRouteReuseStrategy {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵDefaultRouteReuseStrategy_BaseFactory;\n      return function DefaultRouteReuseStrategy_Factory(__ngFactoryType__) {\n        return (ɵDefaultRouteReuseStrategy_BaseFactory || (ɵDefaultRouteReuseStrategy_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultRouteReuseStrategy)))(__ngFactoryType__ || DefaultRouteReuseStrategy);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DefaultRouteReuseStrategy,\n      factory: DefaultRouteReuseStrategy.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DefaultRouteReuseStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StateManager = /*#__PURE__*/(() => {\n  class StateManager {\n    static ɵfac = function StateManager_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || StateManager)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: StateManager,\n      factory: () => (() => inject(HistoryStateManager))(),\n      providedIn: 'root'\n    });\n  }\n  return StateManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HistoryStateManager = /*#__PURE__*/(() => {\n  class HistoryStateManager extends StateManager {\n    location = inject(Location);\n    urlSerializer = inject(UrlSerializer);\n    options = inject(ROUTER_CONFIGURATION, {\n      optional: true\n    }) || {};\n    canceledNavigationResolution = this.options.canceledNavigationResolution || 'replace';\n    urlHandlingStrategy = inject(UrlHandlingStrategy);\n    urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n    currentUrlTree = new UrlTree();\n    getCurrentUrlTree() {\n      return this.currentUrlTree;\n    }\n    rawUrlTree = this.currentUrlTree;\n    getRawUrlTree() {\n      return this.rawUrlTree;\n    }\n    /**\n     * The id of the currently active page in the router.\n     * Updated to the transition's target id on a successful navigation.\n     *\n     * This is used to track what page the router last activated. When an attempted navigation fails,\n     * the router can then use this to compute how to restore the state back to the previously active\n     * page.\n     */\n    currentPageId = 0;\n    lastSuccessfulId = -1;\n    restoredState() {\n      return this.location.getState();\n    }\n    /**\n     * The ɵrouterPageId of whatever page is currently active in the browser history. This is\n     * important for computing the target page id for new navigations because we need to ensure each\n     * page id in the browser history is 1 more than the previous entry.\n     */\n    get browserPageId() {\n      if (this.canceledNavigationResolution !== 'computed') {\n        return this.currentPageId;\n      }\n      return this.restoredState()?.ɵrouterPageId ?? this.currentPageId;\n    }\n    routerState = createEmptyState(null);\n    getRouterState() {\n      return this.routerState;\n    }\n    stateMemento = this.createStateMemento();\n    createStateMemento() {\n      return {\n        rawUrlTree: this.rawUrlTree,\n        currentUrlTree: this.currentUrlTree,\n        routerState: this.routerState\n      };\n    }\n    registerNonRouterCurrentEntryChangeListener(listener) {\n      return this.location.subscribe(event => {\n        if (event['type'] === 'popstate') {\n          listener(event['url'], event.state);\n        }\n      });\n    }\n    handleRouterEvent(e, currentTransition) {\n      if (e instanceof NavigationStart) {\n        this.stateMemento = this.createStateMemento();\n      } else if (e instanceof NavigationSkipped) {\n        this.rawUrlTree = currentTransition.initialUrl;\n      } else if (e instanceof RoutesRecognized) {\n        if (this.urlUpdateStrategy === 'eager') {\n          if (!currentTransition.extras.skipLocationChange) {\n            const rawUrl = this.urlHandlingStrategy.merge(currentTransition.finalUrl, currentTransition.initialUrl);\n            this.setBrowserUrl(currentTransition.targetBrowserUrl ?? rawUrl, currentTransition);\n          }\n        }\n      } else if (e instanceof BeforeActivateRoutes) {\n        this.currentUrlTree = currentTransition.finalUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(currentTransition.finalUrl, currentTransition.initialUrl);\n        this.routerState = currentTransition.targetRouterState;\n        if (this.urlUpdateStrategy === 'deferred' && !currentTransition.extras.skipLocationChange) {\n          this.setBrowserUrl(currentTransition.targetBrowserUrl ?? this.rawUrlTree, currentTransition);\n        }\n      } else if (e instanceof NavigationCancel && (e.code === NavigationCancellationCode.GuardRejected || e.code === NavigationCancellationCode.NoDataFromResolver)) {\n        this.restoreHistory(currentTransition);\n      } else if (e instanceof NavigationError) {\n        this.restoreHistory(currentTransition, true);\n      } else if (e instanceof NavigationEnd) {\n        this.lastSuccessfulId = e.id;\n        this.currentPageId = this.browserPageId;\n      }\n    }\n    setBrowserUrl(url, transition) {\n      const path = url instanceof UrlTree ? this.urlSerializer.serialize(url) : url;\n      if (this.location.isCurrentPathEqualTo(path) || !!transition.extras.replaceUrl) {\n        // replacements do not update the target page\n        const currentBrowserPageId = this.browserPageId;\n        const state = {\n          ...transition.extras.state,\n          ...this.generateNgRouterState(transition.id, currentBrowserPageId)\n        };\n        this.location.replaceState(path, '', state);\n      } else {\n        const state = {\n          ...transition.extras.state,\n          ...this.generateNgRouterState(transition.id, this.browserPageId + 1)\n        };\n        this.location.go(path, '', state);\n      }\n    }\n    /**\n     * Performs the necessary rollback action to restore the browser URL to the\n     * state before the transition.\n     */\n    restoreHistory(navigation, restoringFromCaughtError = false) {\n      if (this.canceledNavigationResolution === 'computed') {\n        const currentBrowserPageId = this.browserPageId;\n        const targetPagePosition = this.currentPageId - currentBrowserPageId;\n        if (targetPagePosition !== 0) {\n          this.location.historyGo(targetPagePosition);\n        } else if (this.currentUrlTree === navigation.finalUrl && targetPagePosition === 0) {\n          // We got to the activation stage (where currentUrlTree is set to the navigation's\n          // finalUrl), but we weren't moving anywhere in history (skipLocationChange or replaceUrl).\n          // We still need to reset the router state back to what it was when the navigation started.\n          this.resetState(navigation);\n          this.resetUrlToCurrentUrlTree();\n        } else {\n          // The browser URL and router state was not updated before the navigation cancelled so\n          // there's no restoration needed.\n        }\n      } else if (this.canceledNavigationResolution === 'replace') {\n        // TODO(atscott): It seems like we should _always_ reset the state here. It would be a no-op\n        // for `deferred` navigations that haven't change the internal state yet because guards\n        // reject. For 'eager' navigations, it seems like we also really should reset the state\n        // because the navigation was cancelled. Investigate if this can be done by running TGP.\n        if (restoringFromCaughtError) {\n          this.resetState(navigation);\n        }\n        this.resetUrlToCurrentUrlTree();\n      }\n    }\n    resetState(navigation) {\n      this.routerState = this.stateMemento.routerState;\n      this.currentUrlTree = this.stateMemento.currentUrlTree;\n      // Note here that we use the urlHandlingStrategy to get the reset `rawUrlTree` because it may be\n      // configured to handle only part of the navigation URL. This means we would only want to reset\n      // the part of the navigation handled by the Angular router rather than the whole URL. In\n      // addition, the URLHandlingStrategy may be configured to specifically preserve parts of the URL\n      // when merging, such as the query params so they are not lost on a refresh.\n      this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, navigation.finalUrl ?? this.rawUrlTree);\n    }\n    resetUrlToCurrentUrlTree() {\n      this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId));\n    }\n    generateNgRouterState(navigationId, routerPageId) {\n      if (this.canceledNavigationResolution === 'computed') {\n        return {\n          navigationId,\n          ɵrouterPageId: routerPageId\n        };\n      }\n      return {\n        navigationId\n      };\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵHistoryStateManager_BaseFactory;\n      return function HistoryStateManager_Factory(__ngFactoryType__) {\n        return (ɵHistoryStateManager_BaseFactory || (ɵHistoryStateManager_BaseFactory = i0.ɵɵgetInheritedFactory(HistoryStateManager)))(__ngFactoryType__ || HistoryStateManager);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HistoryStateManager,\n      factory: HistoryStateManager.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return HistoryStateManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Performs the given action once the router finishes its next/current navigation.\n *\n * The navigation is considered complete under the following conditions:\n * - `NavigationCancel` event emits and the code is not `NavigationCancellationCode.Redirect` or\n * `NavigationCancellationCode.SupersededByNewNavigation`. In these cases, the\n * redirecting/superseding navigation must finish.\n * - `NavigationError`, `NavigationEnd`, or `NavigationSkipped` event emits\n */\nfunction afterNextNavigation(router, action) {\n  router.events.pipe(filter(e => e instanceof NavigationEnd || e instanceof NavigationCancel || e instanceof NavigationError || e instanceof NavigationSkipped), map(e => {\n    if (e instanceof NavigationEnd || e instanceof NavigationSkipped) {\n      return 0 /* NavigationResult.COMPLETE */;\n    }\n    const redirecting = e instanceof NavigationCancel ? e.code === NavigationCancellationCode.Redirect || e.code === NavigationCancellationCode.SupersededByNewNavigation : false;\n    return redirecting ? 2 /* NavigationResult.REDIRECTING */ : 1 /* NavigationResult.FAILED */;\n  }), filter(result => result !== 2 /* NavigationResult.REDIRECTING */), take(1)).subscribe(() => {\n    action();\n  });\n}\n\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `true`\n * (exact = true).\n */\nconst exactMatchOptions = {\n  paths: 'exact',\n  fragment: 'ignored',\n  matrixParams: 'ignored',\n  queryParams: 'exact'\n};\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `false`\n * (exact = false).\n */\nconst subsetMatchOptions = {\n  paths: 'subset',\n  fragment: 'ignored',\n  matrixParams: 'ignored',\n  queryParams: 'subset'\n};\n/**\n * @description\n *\n * A service that facilitates navigation among views and URL manipulation capabilities.\n * This service is provided in the root scope and configured with [provideRouter](api/router/provideRouter).\n *\n * @see {@link Route}\n * @see {@link provideRouter}\n * @see [Routing and Navigation Guide](guide/routing/common-router-tasks).\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet Router = /*#__PURE__*/(() => {\n  class Router {\n    get currentUrlTree() {\n      return this.stateManager.getCurrentUrlTree();\n    }\n    get rawUrlTree() {\n      return this.stateManager.getRawUrlTree();\n    }\n    disposed = false;\n    nonRouterCurrentEntryChangeSubscription;\n    console = inject(ɵConsole);\n    stateManager = inject(StateManager);\n    options = inject(ROUTER_CONFIGURATION, {\n      optional: true\n    }) || {};\n    pendingTasks = inject(ɵPendingTasksInternal);\n    urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n    navigationTransitions = inject(NavigationTransitions);\n    urlSerializer = inject(UrlSerializer);\n    location = inject(Location);\n    urlHandlingStrategy = inject(UrlHandlingStrategy);\n    /**\n     * The private `Subject` type for the public events exposed in the getter. This is used internally\n     * to push events to. The separate field allows us to expose separate types in the public API\n     * (i.e., an Observable rather than the Subject).\n     */\n    _events = new Subject();\n    /**\n     * An event stream for routing events.\n     */\n    get events() {\n      // TODO(atscott): This _should_ be events.asObservable(). However, this change requires internal\n      // cleanup: tests are doing `(route.events as Subject<Event>).next(...)`. This isn't\n      // allowed/supported but we still have to fix these or file bugs against the teams before making\n      // the change.\n      return this._events;\n    }\n    /**\n     * The current state of routing in this NgModule.\n     */\n    get routerState() {\n      return this.stateManager.getRouterState();\n    }\n    /**\n     * True if at least one navigation event has occurred,\n     * false otherwise.\n     */\n    navigated = false;\n    /**\n     * A strategy for re-using routes.\n     *\n     * @deprecated Configure using `providers` instead:\n     *   `{provide: RouteReuseStrategy, useClass: MyStrategy}`.\n     */\n    routeReuseStrategy = inject(RouteReuseStrategy);\n    /**\n     * How to handle a navigation request to the current URL.\n     *\n     *\n     * @deprecated Configure this through `provideRouter` or `RouterModule.forRoot` instead.\n     * @see {@link withRouterConfig}\n     * @see {@link provideRouter}\n     * @see {@link RouterModule}\n     */\n    onSameUrlNavigation = this.options.onSameUrlNavigation || 'ignore';\n    config = inject(ROUTES, {\n      optional: true\n    })?.flat() ?? [];\n    /**\n     * Indicates whether the application has opted in to binding Router data to component inputs.\n     *\n     * This option is enabled by the `withComponentInputBinding` feature of `provideRouter` or\n     * `bindToComponentInputs` in the `ExtraOptions` of `RouterModule.forRoot`.\n     */\n    componentInputBindingEnabled = !!inject(INPUT_BINDER, {\n      optional: true\n    });\n    constructor() {\n      this.resetConfig(this.config);\n      this.navigationTransitions.setupNavigations(this, this.currentUrlTree, this.routerState).subscribe({\n        error: e => {\n          this.console.warn(ngDevMode ? `Unhandled Navigation Error: ${e}` : e);\n        }\n      });\n      this.subscribeToNavigationEvents();\n    }\n    eventsSubscription = new Subscription();\n    subscribeToNavigationEvents() {\n      const subscription = this.navigationTransitions.events.subscribe(e => {\n        try {\n          const currentTransition = this.navigationTransitions.currentTransition;\n          const currentNavigation = this.navigationTransitions.currentNavigation;\n          if (currentTransition !== null && currentNavigation !== null) {\n            this.stateManager.handleRouterEvent(e, currentNavigation);\n            if (e instanceof NavigationCancel && e.code !== NavigationCancellationCode.Redirect && e.code !== NavigationCancellationCode.SupersededByNewNavigation) {\n              // It seems weird that `navigated` is set to `true` when the navigation is rejected,\n              // however it's how things were written initially. Investigation would need to be done\n              // to determine if this can be removed.\n              this.navigated = true;\n            } else if (e instanceof NavigationEnd) {\n              this.navigated = true;\n            } else if (e instanceof RedirectRequest) {\n              const opts = e.navigationBehaviorOptions;\n              const mergedTree = this.urlHandlingStrategy.merge(e.url, currentTransition.currentRawUrl);\n              const extras = {\n                browserUrl: currentTransition.extras.browserUrl,\n                info: currentTransition.extras.info,\n                skipLocationChange: currentTransition.extras.skipLocationChange,\n                // The URL is already updated at this point if we have 'eager' URL\n                // updates or if the navigation was triggered by the browser (back\n                // button, URL bar, etc). We want to replace that item in history\n                // if the navigation is rejected.\n                replaceUrl: currentTransition.extras.replaceUrl || this.urlUpdateStrategy === 'eager' || isBrowserTriggeredNavigation(currentTransition.source),\n                // allow developer to override default options with RedirectCommand\n                ...opts\n              };\n              this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras, {\n                resolve: currentTransition.resolve,\n                reject: currentTransition.reject,\n                promise: currentTransition.promise\n              });\n            }\n          }\n          // Note that it's important to have the Router process the events _before_ the event is\n          // pushed through the public observable. This ensures the correct router state is in place\n          // before applications observe the events.\n          if (isPublicRouterEvent(e)) {\n            this._events.next(e);\n          }\n        } catch (e) {\n          this.navigationTransitions.transitionAbortSubject.next(e);\n        }\n      });\n      this.eventsSubscription.add(subscription);\n    }\n    /** @internal */\n    resetRootComponentType(rootComponentType) {\n      // TODO: vsavkin router 4.0 should make the root component set to null\n      // this will simplify the lifecycle of the router.\n      this.routerState.root.component = rootComponentType;\n      this.navigationTransitions.rootComponentType = rootComponentType;\n    }\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    initialNavigation() {\n      this.setUpLocationChangeListener();\n      if (!this.navigationTransitions.hasRequestedNavigation) {\n        this.navigateToSyncWithBrowser(this.location.path(true), IMPERATIVE_NAVIGATION, this.stateManager.restoredState());\n      }\n    }\n    /**\n     * Sets up the location change listener. This listener detects navigations triggered from outside\n     * the Router (the browser back/forward buttons, for example) and schedules a corresponding Router\n     * navigation so that the correct events, guards, etc. are triggered.\n     */\n    setUpLocationChangeListener() {\n      // Don't need to use Zone.wrap any more, because zone.js\n      // already patch onPopState, so location change callback will\n      // run into ngZone\n      this.nonRouterCurrentEntryChangeSubscription ??= this.stateManager.registerNonRouterCurrentEntryChangeListener((url, state) => {\n        // The `setTimeout` was added in #12160 and is likely to support Angular/AngularJS\n        // hybrid apps.\n        setTimeout(() => {\n          this.navigateToSyncWithBrowser(url, 'popstate', state);\n        }, 0);\n      });\n    }\n    /**\n     * Schedules a router navigation to synchronize Router state with the browser state.\n     *\n     * This is done as a response to a popstate event and the initial navigation. These\n     * two scenarios represent times when the browser URL/state has been updated and\n     * the Router needs to respond to ensure its internal state matches.\n     */\n    navigateToSyncWithBrowser(url, source, state) {\n      const extras = {\n        replaceUrl: true\n      };\n      // TODO: restoredState should always include the entire state, regardless\n      // of navigationId. This requires a breaking change to update the type on\n      // NavigationStart’s restoredState, which currently requires navigationId\n      // to always be present. The Router used to only restore history state if\n      // a navigationId was present.\n      // The stored navigationId is used by the RouterScroller to retrieve the scroll\n      // position for the page.\n      const restoredState = state?.navigationId ? state : null;\n      // Separate to NavigationStart.restoredState, we must also restore the state to\n      // history.state and generate a new navigationId, since it will be overwritten\n      if (state) {\n        const stateCopy = {\n          ...state\n        };\n        delete stateCopy.navigationId;\n        delete stateCopy.ɵrouterPageId;\n        if (Object.keys(stateCopy).length !== 0) {\n          extras.state = stateCopy;\n        }\n      }\n      const urlTree = this.parseUrl(url);\n      this.scheduleNavigation(urlTree, source, restoredState, extras);\n    }\n    /** The current URL. */\n    get url() {\n      return this.serializeUrl(this.currentUrlTree);\n    }\n    /**\n     * Returns the current `Navigation` object when the router is navigating,\n     * and `null` when idle.\n     */\n    getCurrentNavigation() {\n      return this.navigationTransitions.currentNavigation;\n    }\n    /**\n     * The `Navigation` object of the most recent navigation to succeed and `null` if there\n     *     has not been a successful navigation yet.\n     */\n    get lastSuccessfulNavigation() {\n      return this.navigationTransitions.lastSuccessfulNavigation;\n    }\n    /**\n     * Resets the route configuration used for navigation and generating links.\n     *\n     * @param config The route array for the new configuration.\n     *\n     * @usageNotes\n     *\n     * ```ts\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    resetConfig(config) {\n      (typeof ngDevMode === 'undefined' || ngDevMode) && validateConfig(config);\n      this.config = config.map(standardizeConfig);\n      this.navigated = false;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.dispose();\n    }\n    /** Disposes of the router. */\n    dispose() {\n      // We call `unsubscribe()` to release observers, as users may forget to\n      // unsubscribe manually when subscribing to `router.events`. We do not call\n      // `complete()` because it is unsafe; if someone subscribes using the `first`\n      // operator and the observable completes before emitting a value,\n      // RxJS will throw an error.\n      this._events.unsubscribe();\n      this.navigationTransitions.complete();\n      if (this.nonRouterCurrentEntryChangeSubscription) {\n        this.nonRouterCurrentEntryChangeSubscription.unsubscribe();\n        this.nonRouterCurrentEntryChangeSubscription = undefined;\n      }\n      this.disposed = true;\n      this.eventsSubscription.unsubscribe();\n    }\n    /**\n     * Appends URL segments to the current URL tree to create a new URL tree.\n     *\n     * @param commands An array of URL fragments with which to construct the new URL tree.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL tree or the one provided  in the `relativeTo`\n     * property of the options object, if supplied.\n     * @param navigationExtras Options that control the navigation strategy.\n     * @returns The new URL tree.\n     *\n     * @usageNotes\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it,\n     * // you can do the following:\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     *\n     * Note that a value of `null` or `undefined` for `relativeTo` indicates that the\n     * tree should be created relative to the root.\n     * ```\n     */\n    createUrlTree(commands, navigationExtras = {}) {\n      const {\n        relativeTo,\n        queryParams,\n        fragment,\n        queryParamsHandling,\n        preserveFragment\n      } = navigationExtras;\n      const f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n      let q = null;\n      switch (queryParamsHandling ?? this.options.defaultQueryParamsHandling) {\n        case 'merge':\n          q = {\n            ...this.currentUrlTree.queryParams,\n            ...queryParams\n          };\n          break;\n        case 'preserve':\n          q = this.currentUrlTree.queryParams;\n          break;\n        default:\n          q = queryParams || null;\n      }\n      if (q !== null) {\n        q = this.removeEmptyProps(q);\n      }\n      let relativeToUrlSegmentGroup;\n      try {\n        const relativeToSnapshot = relativeTo ? relativeTo.snapshot : this.routerState.snapshot.root;\n        relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeToSnapshot);\n      } catch (e) {\n        // This is strictly for backwards compatibility with tests that create\n        // invalid `ActivatedRoute` mocks.\n        // Note: the difference between having this fallback for invalid `ActivatedRoute` setups and\n        // just throwing is ~500 test failures. Fixing all of those tests by hand is not feasible at\n        // the moment.\n        if (typeof commands[0] !== 'string' || commands[0][0] !== '/') {\n          // Navigations that were absolute in the old way of creating UrlTrees\n          // would still work because they wouldn't attempt to match the\n          // segments in the `ActivatedRoute` to the `currentUrlTree` but\n          // instead just replace the root segment with the navigation result.\n          // Non-absolute navigations would fail to apply the commands because\n          // the logic could not find the segment to replace (so they'd act like there were no\n          // commands).\n          commands = [];\n        }\n        relativeToUrlSegmentGroup = this.currentUrlTree.root;\n      }\n      return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, q, f ?? null);\n    }\n    /**\n     * Navigates to a view using an absolute route path.\n     *\n     * @param url An absolute path for a defined route. The function does not apply any delta to the\n     *     current URL.\n     * @param extras An object containing properties that modify the navigation strategy.\n     *\n     * @returns A Promise that resolves to 'true' when navigation succeeds,\n     * to 'false' when navigation fails, or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to an absolute path.\n     *\n     * ```ts\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/routing/common-router-tasks)\n     *\n     */\n    navigateByUrl(url, extras = {\n      skipLocationChange: false\n    }) {\n      const urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n      const mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n      return this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras);\n    }\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * @param commands An array of URL fragments with which to construct the target URL.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL or the one provided  in the `relativeTo` property\n     * of the options object, if supplied.\n     * @param extras An options object that determines how the URL should be constructed or\n     *     interpreted.\n     *\n     * @returns A Promise that resolves to `true` when navigation succeeds, or `false` when navigation\n     *     fails. The Promise is rejected when an error occurs if `resolveNavigationPromiseOnError` is\n     * not `true`.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to a dynamic route path relative to the current URL.\n     *\n     * ```ts\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL, overriding the default behavior\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/routing/common-router-tasks)\n     *\n     */\n    navigate(commands, extras = {\n      skipLocationChange: false\n    }) {\n      validateCommands(commands);\n      return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    }\n    /** Serializes a `UrlTree` into a string */\n    serializeUrl(url) {\n      return this.urlSerializer.serialize(url);\n    }\n    /** Parses a string into a `UrlTree` */\n    parseUrl(url) {\n      try {\n        return this.urlSerializer.parse(url);\n      } catch {\n        return this.urlSerializer.parse('/');\n      }\n    }\n    isActive(url, matchOptions) {\n      let options;\n      if (matchOptions === true) {\n        options = {\n          ...exactMatchOptions\n        };\n      } else if (matchOptions === false) {\n        options = {\n          ...subsetMatchOptions\n        };\n      } else {\n        options = matchOptions;\n      }\n      if (isUrlTree(url)) {\n        return containsTree(this.currentUrlTree, url, options);\n      }\n      const urlTree = this.parseUrl(url);\n      return containsTree(this.currentUrlTree, urlTree, options);\n    }\n    removeEmptyProps(params) {\n      return Object.entries(params).reduce((result, [key, value]) => {\n        if (value !== null && value !== undefined) {\n          result[key] = value;\n        }\n        return result;\n      }, {});\n    }\n    scheduleNavigation(rawUrl, source, restoredState, extras, priorPromise) {\n      if (this.disposed) {\n        return Promise.resolve(false);\n      }\n      let resolve;\n      let reject;\n      let promise;\n      if (priorPromise) {\n        resolve = priorPromise.resolve;\n        reject = priorPromise.reject;\n        promise = priorPromise.promise;\n      } else {\n        promise = new Promise((res, rej) => {\n          resolve = res;\n          reject = rej;\n        });\n      }\n      // Indicate that the navigation is happening.\n      const taskId = this.pendingTasks.add();\n      afterNextNavigation(this, () => {\n        // Remove pending task in a microtask to allow for cancelled\n        // initial navigations and redirects within the same task.\n        queueMicrotask(() => this.pendingTasks.remove(taskId));\n      });\n      this.navigationTransitions.handleNavigationRequest({\n        source,\n        restoredState,\n        currentUrlTree: this.currentUrlTree,\n        currentRawUrl: this.currentUrlTree,\n        rawUrl,\n        extras,\n        resolve: resolve,\n        reject: reject,\n        promise,\n        currentSnapshot: this.routerState.snapshot,\n        currentRouterState: this.routerState\n      });\n      // Make sure that the error is propagated even though `processNavigations` catch\n      // handler does not rethrow\n      return promise.catch(e => {\n        return Promise.reject(e);\n      });\n    }\n    static ɵfac = function Router_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Router)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Router,\n      factory: Router.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return Router;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction validateCommands(commands) {\n  for (let i = 0; i < commands.length; i++) {\n    const cmd = commands[i];\n    if (cmd == null) {\n      throw new ɵRuntimeError(4008 /* RuntimeErrorCode.NULLISH_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) && `The requested path contains ${cmd} segment at index ${i}`);\n    }\n  }\n}\nfunction isPublicRouterEvent(e) {\n  return !(e instanceof BeforeActivateRoutes) && !(e instanceof RedirectRequest);\n}\n\n/**\n * @description\n *\n * When applied to an element in a template, makes that element a link\n * that initiates navigation to a route. Navigation opens one or more routed components\n * in one or more `<router-outlet>` locations on the page.\n *\n * Given a route configuration `[{ path: 'user/:name', component: UserCmp }]`,\n * the following creates a static link to the route:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * You can use dynamic values to generate the link.\n * For a dynamic link, pass an array of path segments,\n * followed by the params for each segment.\n * For example, `['/team', teamId, 'user', userName, {details: true}]`\n * generates a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one term and combined with dynamic segments.\n * For example, `['/team/11/user', userName, {details: true}]`\n *\n * The input that you provide to the link is treated as a delta to the current URL.\n * For instance, suppose the current URL is `/user/(box//aux:team)`.\n * The link `<a [routerLink]=\"['/user/jim']\">Jim</a>` creates the URL\n * `/user/(jim//aux:team)`.\n * See {@link Router#createUrlTree} for more information.\n *\n * @usageNotes\n *\n * You can use absolute or relative paths in a link, set query parameters,\n * control how parameters are handled, and keep a history of navigation states.\n *\n * ### Relative link paths\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * * If the first segment begins with `/`, the router looks up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router\n *   looks in the children of the current activated route.\n * * If the first segment begins with `../`, the router goes up one level in the route tree.\n *\n * ### Setting and handling query params and fragments\n *\n * The following link adds a query parameter and a fragment to the generated URL:\n *\n * ```html\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * By default, the directive constructs the new URL using the given query parameters.\n * The example generates the link: `/user/bob?debug=true#education`.\n *\n * You can instruct the directive to handle query parameters differently\n * by specifying the `queryParamsHandling` option in the link.\n * Allowed values are:\n *\n *  - `'merge'`: Merge the given `queryParams` into the current query params.\n *  - `'preserve'`: Preserve the current query params.\n *\n * For example:\n *\n * ```html\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * `queryParams`, `fragment`, `queryParamsHandling`, `preserveFragment`, and `relativeTo`\n * cannot be used when the `routerLink` input is a `UrlTree`.\n *\n * See {@link UrlCreationOptions#queryParamsHandling}.\n *\n * ### Preserving navigation history\n *\n * You can provide a `state` value to be persisted to the browser's\n * [`History.state` property](https://developer.mozilla.org/en-US/docs/Web/API/History#Properties).\n * For example:\n *\n * ```html\n * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n *   link to user component\n * </a>\n * ```\n *\n * Use {@link Router#getCurrentNavigation} to retrieve a saved\n * navigation-state value. For example, to capture the `tracingId` during the `NavigationStart`\n * event:\n *\n * ```ts\n * // Get NavigationStart events\n * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n *   const navigation = router.getCurrentNavigation();\n *   tracingService.trace({id: navigation.extras.state.tracingId});\n * });\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterLink = /*#__PURE__*/(() => {\n  class RouterLink {\n    router;\n    route;\n    tabIndexAttribute;\n    renderer;\n    el;\n    locationStrategy;\n    /**\n     * Represents an `href` attribute value applied to a host element,\n     * when a host element is `<a>`. For other tags, the value is `null`.\n     */\n    href = null;\n    /**\n     * Represents the `target` attribute on a host element.\n     * This is only used when the host element is an `<a>` tag.\n     */\n    target;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#queryParams}\n     * @see {@link Router#createUrlTree}\n     */\n    queryParams;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#fragment}\n     * @see {@link Router#createUrlTree}\n     */\n    fragment;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#queryParamsHandling}\n     * @see {@link Router#createUrlTree}\n     */\n    queryParamsHandling;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#state}\n     * @see {@link Router#navigateByUrl}\n     */\n    state;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#info}\n     * @see {@link Router#navigateByUrl}\n     */\n    info;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * Specify a value here when you do not want to use the default value\n     * for `routerLink`, which is the current activated route.\n     * Note that a value of `undefined` here will use the `routerLink` default.\n     * @see {@link UrlCreationOptions#relativeTo}\n     * @see {@link Router#createUrlTree}\n     */\n    relativeTo;\n    /** Whether a host element is an `<a>` tag. */\n    isAnchorElement;\n    subscription;\n    /** @internal */\n    onChanges = new Subject();\n    constructor(router, route, tabIndexAttribute, renderer, el, locationStrategy) {\n      this.router = router;\n      this.route = route;\n      this.tabIndexAttribute = tabIndexAttribute;\n      this.renderer = renderer;\n      this.el = el;\n      this.locationStrategy = locationStrategy;\n      const tagName = el.nativeElement.tagName?.toLowerCase();\n      this.isAnchorElement = tagName === 'a' || tagName === 'area';\n      if (this.isAnchorElement) {\n        this.subscription = router.events.subscribe(s => {\n          if (s instanceof NavigationEnd) {\n            this.updateHref();\n          }\n        });\n      } else {\n        this.setTabIndexIfNotOnNativeEl('0');\n      }\n    }\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#preserveFragment}\n     * @see {@link Router#createUrlTree}\n     */\n    preserveFragment = false;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#skipLocationChange}\n     * @see {@link Router#navigateByUrl}\n     */\n    skipLocationChange = false;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#replaceUrl}\n     * @see {@link Router#navigateByUrl}\n     */\n    replaceUrl = false;\n    /**\n     * Modifies the tab index if there was not a tabindex attribute on the element during\n     * instantiation.\n     */\n    setTabIndexIfNotOnNativeEl(newTabIndex) {\n      if (this.tabIndexAttribute != null /* both `null` and `undefined` */ || this.isAnchorElement) {\n        return;\n      }\n      this.applyAttributeValue('tabindex', newTabIndex);\n    }\n    /** @nodoc */\n    // TODO(atscott): Remove changes parameter in major version as a breaking change.\n    ngOnChanges(changes) {\n      if (ngDevMode && isUrlTree(this.routerLinkInput) && (this.fragment !== undefined || this.queryParams || this.queryParamsHandling || this.preserveFragment || this.relativeTo)) {\n        throw new ɵRuntimeError(4016 /* RuntimeErrorCode.INVALID_ROUTER_LINK_INPUTS */, 'Cannot configure queryParams or fragment when using a UrlTree as the routerLink input value.');\n      }\n      if (this.isAnchorElement) {\n        this.updateHref();\n      }\n      // This is subscribed to by `RouterLinkActive` so that it knows to update when there are changes\n      // to the RouterLinks it's tracking.\n      this.onChanges.next(this);\n    }\n    routerLinkInput = null;\n    /**\n     * Commands to pass to {@link Router#createUrlTree} or a `UrlTree`.\n     *   - **array**: commands to pass to {@link Router#createUrlTree}.\n     *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n     *   - **UrlTree**: a `UrlTree` for this link rather than creating one from the commands\n     *     and other inputs that correspond to properties of `UrlCreationOptions`.\n     *   - **null|undefined**: effectively disables the `routerLink`\n     * @see {@link Router#createUrlTree}\n     */\n    set routerLink(commandsOrUrlTree) {\n      if (commandsOrUrlTree == null) {\n        this.routerLinkInput = null;\n        this.setTabIndexIfNotOnNativeEl(null);\n      } else {\n        if (isUrlTree(commandsOrUrlTree)) {\n          this.routerLinkInput = commandsOrUrlTree;\n        } else {\n          this.routerLinkInput = Array.isArray(commandsOrUrlTree) ? commandsOrUrlTree : [commandsOrUrlTree];\n        }\n        this.setTabIndexIfNotOnNativeEl('0');\n      }\n    }\n    /** @nodoc */\n    onClick(button, ctrlKey, shiftKey, altKey, metaKey) {\n      const urlTree = this.urlTree;\n      if (urlTree === null) {\n        return true;\n      }\n      if (this.isAnchorElement) {\n        if (button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {\n          return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n          return true;\n        }\n      }\n      const extras = {\n        skipLocationChange: this.skipLocationChange,\n        replaceUrl: this.replaceUrl,\n        state: this.state,\n        info: this.info\n      };\n      this.router.navigateByUrl(urlTree, extras);\n      // Return `false` for `<a>` elements to prevent default action\n      // and cancel the native behavior, since the navigation is handled\n      // by the Router.\n      return !this.isAnchorElement;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.subscription?.unsubscribe();\n    }\n    updateHref() {\n      const urlTree = this.urlTree;\n      this.href = urlTree !== null && this.locationStrategy ? this.locationStrategy?.prepareExternalUrl(this.router.serializeUrl(urlTree)) : null;\n      const sanitizedValue = this.href === null ? null :\n      // This class represents a directive that can be added to both `<a>` elements,\n      // as well as other elements. As a result, we can't define security context at\n      // compile time. So the security context is deferred to runtime.\n      // The `ɵɵsanitizeUrlOrResourceUrl` selects the necessary sanitizer function\n      // based on the tag and property names. The logic mimics the one from\n      // `packages/compiler/src/schema/dom_security_schema.ts`, which is used at compile time.\n      //\n      // Note: we should investigate whether we can switch to using `@HostBinding('attr.href')`\n      // instead of applying a value via a renderer, after a final merge of the\n      // `RouterLinkWithHref` directive.\n      ɵɵsanitizeUrlOrResourceUrl(this.href, this.el.nativeElement.tagName.toLowerCase(), 'href');\n      this.applyAttributeValue('href', sanitizedValue);\n    }\n    applyAttributeValue(attrName, attrValue) {\n      const renderer = this.renderer;\n      const nativeElement = this.el.nativeElement;\n      if (attrValue !== null) {\n        renderer.setAttribute(nativeElement, attrName, attrValue);\n      } else {\n        renderer.removeAttribute(nativeElement, attrName);\n      }\n    }\n    get urlTree() {\n      if (this.routerLinkInput === null) {\n        return null;\n      } else if (isUrlTree(this.routerLinkInput)) {\n        return this.routerLinkInput;\n      }\n      return this.router.createUrlTree(this.routerLinkInput, {\n        // If the `relativeTo` input is not defined, we want to use `this.route` by default.\n        // Otherwise, we should use the value provided by the user in the input.\n        relativeTo: this.relativeTo !== undefined ? this.relativeTo : this.route,\n        queryParams: this.queryParams,\n        fragment: this.fragment,\n        queryParamsHandling: this.queryParamsHandling,\n        preserveFragment: this.preserveFragment\n      });\n    }\n    static ɵfac = function RouterLink_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterLink)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(ActivatedRoute), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.LocationStrategy));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RouterLink,\n      selectors: [[\"\", \"routerLink\", \"\"]],\n      hostVars: 1,\n      hostBindings: function RouterLink_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function RouterLink_click_HostBindingHandler($event) {\n            return ctx.onClick($event.button, $event.ctrlKey, $event.shiftKey, $event.altKey, $event.metaKey);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"target\", ctx.target);\n        }\n      },\n      inputs: {\n        target: \"target\",\n        queryParams: \"queryParams\",\n        fragment: \"fragment\",\n        queryParamsHandling: \"queryParamsHandling\",\n        state: \"state\",\n        info: \"info\",\n        relativeTo: \"relativeTo\",\n        preserveFragment: [2, \"preserveFragment\", \"preserveFragment\", booleanAttribute],\n        skipLocationChange: [2, \"skipLocationChange\", \"skipLocationChange\", booleanAttribute],\n        replaceUrl: [2, \"replaceUrl\", \"replaceUrl\", booleanAttribute],\n        routerLink: \"routerLink\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return RouterLink;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n *\n * @description\n *\n * Tracks whether the linked route of an element is currently active, and allows you\n * to specify one or more CSS classes to add to the element when the linked route\n * is active.\n *\n * Use this directive to create a visual distinction for elements associated with an active route.\n * For example, the following code highlights the word \"Bob\" when the router\n * activates the associated route:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * Whenever the URL is either '/user' or '/user/bob', the \"active-link\" class is\n * added to the anchor tag. If the URL changes, the class is removed.\n *\n * You can set more than one class using a space-separated string or an array.\n * For example:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * To add the classes only when the URL matches the link exactly, add the option `exact: true`:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * To directly check the `isActive` status of the link, assign the `RouterLinkActive`\n * instance to a template variable.\n * For example, the following checks the status without assigning any CSS classes:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * You can apply the `RouterLinkActive` directive to an ancestor of linked elements.\n * For example, the following sets the active-link class on the `<div>`  parent tag\n * when the URL is either '/user/jim' or '/user/bob'.\n *\n * ```html\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * The `RouterLinkActive` directive can also be used to set the aria-current attribute\n * to provide an alternative distinction for active elements to visually impaired users.\n *\n * For example, the following code adds the 'active' class to the Home Page link when it is\n * indeed active and in such case also sets its aria-current attribute to 'page':\n *\n * ```html\n * <a routerLink=\"/\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">Home Page</a>\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterLinkActive = /*#__PURE__*/(() => {\n  class RouterLinkActive {\n    router;\n    element;\n    renderer;\n    cdr;\n    link;\n    links;\n    classes = [];\n    routerEventsSubscription;\n    linkInputChangesSubscription;\n    _isActive = false;\n    get isActive() {\n      return this._isActive;\n    }\n    /**\n     * Options to configure how to determine if the router link is active.\n     *\n     * These options are passed to the `Router.isActive()` function.\n     *\n     * @see {@link Router#isActive}\n     */\n    routerLinkActiveOptions = {\n      exact: false\n    };\n    /**\n     * Aria-current attribute to apply when the router link is active.\n     *\n     * Possible values: `'page'` | `'step'` | `'location'` | `'date'` | `'time'` | `true` | `false`.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current}\n     */\n    ariaCurrentWhenActive;\n    /**\n     *\n     * You can use the output `isActiveChange` to get notified each time the link becomes\n     * active or inactive.\n     *\n     * Emits:\n     * true  -> Route is active\n     * false -> Route is inactive\n     *\n     * ```html\n     * <a\n     *  routerLink=\"/user/bob\"\n     *  routerLinkActive=\"active-link\"\n     *  (isActiveChange)=\"this.onRouterLinkActive($event)\">Bob</a>\n     * ```\n     */\n    isActiveChange = new EventEmitter();\n    constructor(router, element, renderer, cdr, link) {\n      this.router = router;\n      this.element = element;\n      this.renderer = renderer;\n      this.cdr = cdr;\n      this.link = link;\n      this.routerEventsSubscription = router.events.subscribe(s => {\n        if (s instanceof NavigationEnd) {\n          this.update();\n        }\n      });\n    }\n    /** @nodoc */\n    ngAfterContentInit() {\n      // `of(null)` is used to force subscribe body to execute once immediately (like `startWith`).\n      of(this.links.changes, of(null)).pipe(mergeAll()).subscribe(_ => {\n        this.update();\n        this.subscribeToEachLinkOnChanges();\n      });\n    }\n    subscribeToEachLinkOnChanges() {\n      this.linkInputChangesSubscription?.unsubscribe();\n      const allLinkChanges = [...this.links.toArray(), this.link].filter(link => !!link).map(link => link.onChanges);\n      this.linkInputChangesSubscription = from(allLinkChanges).pipe(mergeAll()).subscribe(link => {\n        if (this._isActive !== this.isLinkActive(this.router)(link)) {\n          this.update();\n        }\n      });\n    }\n    set routerLinkActive(data) {\n      const classes = Array.isArray(data) ? data : data.split(' ');\n      this.classes = classes.filter(c => !!c);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this.update();\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.routerEventsSubscription.unsubscribe();\n      this.linkInputChangesSubscription?.unsubscribe();\n    }\n    update() {\n      if (!this.links || !this.router.navigated) return;\n      queueMicrotask(() => {\n        const hasActiveLinks = this.hasActiveLinks();\n        this.classes.forEach(c => {\n          if (hasActiveLinks) {\n            this.renderer.addClass(this.element.nativeElement, c);\n          } else {\n            this.renderer.removeClass(this.element.nativeElement, c);\n          }\n        });\n        if (hasActiveLinks && this.ariaCurrentWhenActive !== undefined) {\n          this.renderer.setAttribute(this.element.nativeElement, 'aria-current', this.ariaCurrentWhenActive.toString());\n        } else {\n          this.renderer.removeAttribute(this.element.nativeElement, 'aria-current');\n        }\n        // Only emit change if the active state changed.\n        if (this._isActive !== hasActiveLinks) {\n          this._isActive = hasActiveLinks;\n          this.cdr.markForCheck();\n          // Emit on isActiveChange after classes are updated\n          this.isActiveChange.emit(hasActiveLinks);\n        }\n      });\n    }\n    isLinkActive(router) {\n      const options = isActiveMatchOptions(this.routerLinkActiveOptions) ? this.routerLinkActiveOptions :\n      // While the types should disallow `undefined` here, it's possible without strict inputs\n      this.routerLinkActiveOptions.exact || false;\n      return link => {\n        const urlTree = link.urlTree;\n        return urlTree ? router.isActive(urlTree, options) : false;\n      };\n    }\n    hasActiveLinks() {\n      const isActiveCheckFn = this.isLinkActive(this.router);\n      return this.link && isActiveCheckFn(this.link) || this.links.some(isActiveCheckFn);\n    }\n    static ɵfac = function RouterLinkActive_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterLinkActive)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(RouterLink, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RouterLinkActive,\n      selectors: [[\"\", \"routerLinkActive\", \"\"]],\n      contentQueries: function RouterLinkActive_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, RouterLink, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.links = _t);\n        }\n      },\n      inputs: {\n        routerLinkActiveOptions: \"routerLinkActiveOptions\",\n        ariaCurrentWhenActive: \"ariaCurrentWhenActive\",\n        routerLinkActive: \"routerLinkActive\"\n      },\n      outputs: {\n        isActiveChange: \"isActiveChange\"\n      },\n      exportAs: [\"routerLinkActive\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return RouterLinkActive;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use instead of `'paths' in options` to be compatible with property renaming\n */\nfunction isActiveMatchOptions(options) {\n  return !!options.paths;\n}\n\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @publicApi\n */\nclass PreloadingStrategy {}\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```ts\n * RouterModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @publicApi\n */\nlet PreloadAllModules = /*#__PURE__*/(() => {\n  class PreloadAllModules {\n    preload(route, fn) {\n      return fn().pipe(catchError(() => of(null)));\n    }\n    static ɵfac = function PreloadAllModules_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PreloadAllModules)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PreloadAllModules,\n      factory: PreloadAllModules.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PreloadAllModules;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @publicApi\n */\nlet NoPreloading = /*#__PURE__*/(() => {\n  class NoPreloading {\n    preload(route, fn) {\n      return of(null);\n    }\n    static ɵfac = function NoPreloading_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NoPreloading)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NoPreloading,\n      factory: NoPreloading.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NoPreloading;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * @publicApi\n */\nlet RouterPreloader = /*#__PURE__*/(() => {\n  class RouterPreloader {\n    router;\n    injector;\n    preloadingStrategy;\n    loader;\n    subscription;\n    constructor(router, compiler, injector, preloadingStrategy, loader) {\n      this.router = router;\n      this.injector = injector;\n      this.preloadingStrategy = preloadingStrategy;\n      this.loader = loader;\n    }\n    setUpPreloading() {\n      this.subscription = this.router.events.pipe(filter(e => e instanceof NavigationEnd), concatMap(() => this.preload())).subscribe(() => {});\n    }\n    preload() {\n      return this.processRoutes(this.injector, this.router.config);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n    processRoutes(injector, routes) {\n      const res = [];\n      for (const route of routes) {\n        if (route.providers && !route._injector) {\n          route._injector = createEnvironmentInjector(route.providers, injector, `Route: ${route.path}`);\n        }\n        const injectorForCurrentRoute = route._injector ?? injector;\n        const injectorForChildren = route._loadedInjector ?? injectorForCurrentRoute;\n        // Note that `canLoad` is only checked as a condition that prevents `loadChildren` and not\n        // `loadComponent`. `canLoad` guards only block loading of child routes by design. This\n        // happens as a consequence of needing to descend into children for route matching immediately\n        // while component loading is deferred until route activation. Because `canLoad` guards can\n        // have side effects, we cannot execute them here so we instead skip preloading altogether\n        // when present. Lastly, it remains to be decided whether `canLoad` should behave this way\n        // at all. Code splitting and lazy loading is separate from client-side authorization checks\n        // and should not be used as a security measure to prevent loading of code.\n        if (route.loadChildren && !route._loadedRoutes && route.canLoad === undefined || route.loadComponent && !route._loadedComponent) {\n          res.push(this.preloadConfig(injectorForCurrentRoute, route));\n        }\n        if (route.children || route._loadedRoutes) {\n          res.push(this.processRoutes(injectorForChildren, route.children ?? route._loadedRoutes));\n        }\n      }\n      return from(res).pipe(mergeAll());\n    }\n    preloadConfig(injector, route) {\n      return this.preloadingStrategy.preload(route, () => {\n        let loadedChildren$;\n        if (route.loadChildren && route.canLoad === undefined) {\n          loadedChildren$ = this.loader.loadChildren(injector, route);\n        } else {\n          loadedChildren$ = of(null);\n        }\n        const recursiveLoadChildren$ = loadedChildren$.pipe(mergeMap(config => {\n          if (config === null) {\n            return of(void 0);\n          }\n          route._loadedRoutes = config.routes;\n          route._loadedInjector = config.injector;\n          // If the loaded config was a module, use that as the module/module injector going\n          // forward. Otherwise, continue using the current module/module injector.\n          return this.processRoutes(config.injector ?? injector, config.routes);\n        }));\n        if (route.loadComponent && !route._loadedComponent) {\n          const loadComponent$ = this.loader.loadComponent(route);\n          return from([recursiveLoadChildren$, loadComponent$]).pipe(mergeAll());\n        } else {\n          return recursiveLoadChildren$;\n        }\n      });\n    }\n    static ɵfac = function RouterPreloader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterPreloader)(i0.ɵɵinject(Router), i0.ɵɵinject(i0.Compiler), i0.ɵɵinject(i0.EnvironmentInjector), i0.ɵɵinject(PreloadingStrategy), i0.ɵɵinject(RouterConfigLoader));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouterPreloader,\n      factory: RouterPreloader.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return RouterPreloader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst ROUTER_SCROLLER = /*#__PURE__*/new InjectionToken('');\nlet RouterScroller = /*#__PURE__*/(() => {\n  class RouterScroller {\n    urlSerializer;\n    transitions;\n    viewportScroller;\n    zone;\n    options;\n    routerEventsSubscription;\n    scrollEventsSubscription;\n    lastId = 0;\n    lastSource = 'imperative';\n    restoredId = 0;\n    store = {};\n    /** @nodoc */\n    constructor(urlSerializer, transitions, viewportScroller, zone, options = {}) {\n      this.urlSerializer = urlSerializer;\n      this.transitions = transitions;\n      this.viewportScroller = viewportScroller;\n      this.zone = zone;\n      this.options = options;\n      // Default both options to 'disabled'\n      options.scrollPositionRestoration ||= 'disabled';\n      options.anchorScrolling ||= 'disabled';\n    }\n    init() {\n      // we want to disable the automatic scrolling because having two places\n      // responsible for scrolling results race conditions, especially given\n      // that browser don't implement this behavior consistently\n      if (this.options.scrollPositionRestoration !== 'disabled') {\n        this.viewportScroller.setHistoryScrollRestoration('manual');\n      }\n      this.routerEventsSubscription = this.createScrollEvents();\n      this.scrollEventsSubscription = this.consumeScrollEvents();\n    }\n    createScrollEvents() {\n      return this.transitions.events.subscribe(e => {\n        if (e instanceof NavigationStart) {\n          // store the scroll position of the current stable navigations.\n          this.store[this.lastId] = this.viewportScroller.getScrollPosition();\n          this.lastSource = e.navigationTrigger;\n          this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n        } else if (e instanceof NavigationEnd) {\n          this.lastId = e.id;\n          this.scheduleScrollEvent(e, this.urlSerializer.parse(e.urlAfterRedirects).fragment);\n        } else if (e instanceof NavigationSkipped && e.code === NavigationSkippedCode.IgnoredSameUrlNavigation) {\n          this.lastSource = undefined;\n          this.restoredId = 0;\n          this.scheduleScrollEvent(e, this.urlSerializer.parse(e.url).fragment);\n        }\n      });\n    }\n    consumeScrollEvents() {\n      return this.transitions.events.subscribe(e => {\n        if (!(e instanceof Scroll)) return;\n        // a popstate event. The pop state event will always ignore anchor scrolling.\n        if (e.position) {\n          if (this.options.scrollPositionRestoration === 'top') {\n            this.viewportScroller.scrollToPosition([0, 0]);\n          } else if (this.options.scrollPositionRestoration === 'enabled') {\n            this.viewportScroller.scrollToPosition(e.position);\n          }\n          // imperative navigation \"forward\"\n        } else {\n          if (e.anchor && this.options.anchorScrolling === 'enabled') {\n            this.viewportScroller.scrollToAnchor(e.anchor);\n          } else if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.scrollToPosition([0, 0]);\n          }\n        }\n      });\n    }\n    scheduleScrollEvent(routerEvent, anchor) {\n      this.zone.runOutsideAngular(() => {\n        // The scroll event needs to be delayed until after change detection. Otherwise, we may\n        // attempt to restore the scroll position before the router outlet has fully rendered the\n        // component by executing its update block of the template function.\n        setTimeout(() => {\n          this.zone.run(() => {\n            this.transitions.events.next(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n          });\n        }, 0);\n      });\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.routerEventsSubscription?.unsubscribe();\n      this.scrollEventsSubscription?.unsubscribe();\n    }\n    static ɵfac = function RouterScroller_Factory(__ngFactoryType__) {\n      i0.ɵɵinvalidFactory();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouterScroller,\n      factory: RouterScroller.ɵfac\n    });\n  }\n  return RouterScroller;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Sets up providers necessary to enable `Router` functionality for the application.\n * Allows to configure a set of routes as well as extra features that should be enabled.\n *\n * @usageNotes\n *\n * Basic example of how you can add a Router to your application:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent, {\n *   providers: [provideRouter(appRoutes)]\n * });\n * ```\n *\n * You can also enable optional features in the Router by adding functions from the `RouterFeatures`\n * type:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes,\n *         withDebugTracing(),\n *         withRouterConfig({paramsInheritanceStrategy: 'always'}))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link RouterFeatures}\n *\n * @publicApi\n * @param routes A set of `Route`s to use for the application routing table.\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to setup a Router.\n */\nfunction provideRouter(routes, ...features) {\n  return makeEnvironmentProviders([{\n    provide: ROUTES,\n    multi: true,\n    useValue: routes\n  }, typeof ngDevMode === 'undefined' || ngDevMode ? {\n    provide: ROUTER_IS_PROVIDED,\n    useValue: true\n  } : [], {\n    provide: ActivatedRoute,\n    useFactory: rootRoute,\n    deps: [Router]\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useFactory: getBootstrapListener\n  }, features.map(feature => feature.ɵproviders)]);\n}\nfunction rootRoute(router) {\n  return router.routerState.root;\n}\n/**\n * Helper function to create an object that represents a Router feature.\n */\nfunction routerFeature(kind, providers) {\n  return {\n    ɵkind: kind,\n    ɵproviders: providers\n  };\n}\n/**\n * An Injection token used to indicate whether `provideRouter` or `RouterModule.forRoot` was ever\n * called.\n */\nconst ROUTER_IS_PROVIDED = /*#__PURE__*/new InjectionToken('', {\n  providedIn: 'root',\n  factory: () => false\n});\nconst routerIsProvidedDevModeCheck = {\n  provide: ENVIRONMENT_INITIALIZER,\n  multi: true,\n  useFactory() {\n    return () => {\n      if (!inject(ROUTER_IS_PROVIDED)) {\n        console.warn('`provideRoutes` was called without `provideRouter` or `RouterModule.forRoot`. ' + 'This is likely a mistake.');\n      }\n    };\n  }\n};\n/**\n * Registers a DI provider for a set of routes.\n * @param routes The route configuration to provide.\n *\n * @usageNotes\n *\n * ```ts\n * @NgModule({\n *   providers: [provideRoutes(ROUTES)]\n * })\n * class LazyLoadedChildModule {}\n * ```\n *\n * @deprecated If necessary, provide routes using the `ROUTES` `InjectionToken`.\n * @see {@link ROUTES}\n * @publicApi\n */\nfunction provideRoutes(routes) {\n  return [{\n    provide: ROUTES,\n    multi: true,\n    useValue: routes\n  }, typeof ngDevMode === 'undefined' || ngDevMode ? routerIsProvidedDevModeCheck : []];\n}\n/**\n * Enables customizable scrolling behavior for router navigations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable scrolling feature:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withInMemoryScrolling())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link ViewportScroller}\n *\n * @publicApi\n * @param options Set of configuration parameters to customize scrolling behavior, see\n *     `InMemoryScrollingOptions` for additional information.\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withInMemoryScrolling(options = {}) {\n  const providers = [{\n    provide: ROUTER_SCROLLER,\n    useFactory: () => {\n      const viewportScroller = inject(ViewportScroller);\n      const zone = inject(NgZone);\n      const transitions = inject(NavigationTransitions);\n      const urlSerializer = inject(UrlSerializer);\n      return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, options);\n    }\n  }];\n  return routerFeature(4 /* RouterFeatureKind.InMemoryScrollingFeature */, providers);\n}\nfunction getBootstrapListener() {\n  const injector = inject(Injector);\n  return bootstrappedComponentRef => {\n    const ref = injector.get(ApplicationRef);\n    if (bootstrappedComponentRef !== ref.components[0]) {\n      return;\n    }\n    const router = injector.get(Router);\n    const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n    if (injector.get(INITIAL_NAVIGATION) === 1 /* InitialNavigation.EnabledNonBlocking */) {\n      router.initialNavigation();\n    }\n    injector.get(ROUTER_PRELOADER, null, InjectFlags.Optional)?.setUpPreloading();\n    injector.get(ROUTER_SCROLLER, null, InjectFlags.Optional)?.init();\n    router.resetRootComponentType(ref.componentTypes[0]);\n    if (!bootstrapDone.closed) {\n      bootstrapDone.next();\n      bootstrapDone.complete();\n      bootstrapDone.unsubscribe();\n    }\n  };\n}\n/**\n * A subject used to indicate that the bootstrapping phase is done. When initial navigation is\n * `enabledBlocking`, the first navigation waits until bootstrapping is finished before continuing\n * to the activation phase.\n */\nconst BOOTSTRAP_DONE = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'bootstrap done indicator' : '', {\n  factory: () => {\n    return new Subject();\n  }\n});\nconst INITIAL_NAVIGATION = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'initial navigation' : '', {\n  providedIn: 'root',\n  factory: () => 1 /* InitialNavigation.EnabledNonBlocking */\n});\n/**\n * Configures initial navigation to start before the root component is created.\n *\n * The bootstrap is blocked until the initial navigation is complete. This should be set in case\n * you use [server-side rendering](guide/ssr), but do not enable [hydration](guide/hydration) for\n * your application.\n *\n * @usageNotes\n *\n * Basic example of how you can enable this navigation behavior:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withEnabledBlockingInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @publicApi\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withEnabledBlockingInitialNavigation() {\n  const providers = [{\n    provide: INITIAL_NAVIGATION,\n    useValue: 0 /* InitialNavigation.EnabledBlocking */\n  }, {\n    provide: APP_INITIALIZER,\n    multi: true,\n    deps: [Injector],\n    useFactory: injector => {\n      const locationInitialized = injector.get(LOCATION_INITIALIZED, Promise.resolve());\n      return () => {\n        return locationInitialized.then(() => {\n          return new Promise(resolve => {\n            const router = injector.get(Router);\n            const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n            afterNextNavigation(router, () => {\n              // Unblock APP_INITIALIZER in case the initial navigation was canceled or errored\n              // without a redirect.\n              resolve(true);\n            });\n            injector.get(NavigationTransitions).afterPreactivation = () => {\n              // Unblock APP_INITIALIZER once we get to `afterPreactivation`. At this point, we\n              // assume activation will complete successfully (even though this is not\n              // guaranteed).\n              resolve(true);\n              return bootstrapDone.closed ? of(void 0) : bootstrapDone;\n            };\n            router.initialNavigation();\n          });\n        });\n      };\n    }\n  }];\n  return routerFeature(2 /* RouterFeatureKind.EnabledBlockingInitialNavigationFeature */, providers);\n}\n/**\n * Disables initial navigation.\n *\n * Use if there is a reason to have more control over when the router starts its initial navigation\n * due to some complex initialization logic.\n *\n * @usageNotes\n *\n * Basic example of how you can disable initial navigation:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDisabledInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDisabledInitialNavigation() {\n  const providers = [{\n    provide: APP_INITIALIZER,\n    multi: true,\n    useFactory: () => {\n      const router = inject(Router);\n      return () => {\n        router.setUpLocationChangeListener();\n      };\n    }\n  }, {\n    provide: INITIAL_NAVIGATION,\n    useValue: 2 /* InitialNavigation.Disabled */\n  }];\n  return routerFeature(3 /* RouterFeatureKind.DisabledInitialNavigationFeature */, providers);\n}\n/**\n * Enables logging of all internal navigation events to the console.\n * Extra logging might be useful for debugging purposes to inspect Router event sequence.\n *\n * @usageNotes\n *\n * Basic example of how you can enable debug tracing:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDebugTracing())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDebugTracing() {\n  let providers = [];\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    providers = [{\n      provide: ENVIRONMENT_INITIALIZER,\n      multi: true,\n      useFactory: () => {\n        const router = inject(Router);\n        return () => router.events.subscribe(e => {\n          // tslint:disable:no-console\n          console.group?.(`Router Event: ${e.constructor.name}`);\n          console.log(stringifyEvent(e));\n          console.log(e);\n          console.groupEnd?.();\n          // tslint:enable:no-console\n        });\n      }\n    }];\n  } else {\n    providers = [];\n  }\n  return routerFeature(1 /* RouterFeatureKind.DebugTracingFeature */, providers);\n}\nconst ROUTER_PRELOADER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router preloader' : '');\n/**\n * Allows to configure a preloading strategy to use. The strategy is configured by providing a\n * reference to a class that implements a `PreloadingStrategy`.\n *\n * @usageNotes\n *\n * Basic example of how you can configure preloading:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withPreloading(PreloadAllModules))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param preloadingStrategy A reference to a class that implements a `PreloadingStrategy` that\n *     should be used.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withPreloading(preloadingStrategy) {\n  const providers = [{\n    provide: ROUTER_PRELOADER,\n    useExisting: RouterPreloader\n  }, {\n    provide: PreloadingStrategy,\n    useExisting: preloadingStrategy\n  }];\n  return routerFeature(0 /* RouterFeatureKind.PreloadingFeature */, providers);\n}\n/**\n * Allows to provide extra parameters to configure Router.\n *\n * @usageNotes\n *\n * Basic example of how you can provide extra configuration options:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withRouterConfig({\n *          onSameUrlNavigation: 'reload'\n *       }))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param options A set of parameters to configure Router, see `RouterConfigOptions` for\n *     additional information.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withRouterConfig(options) {\n  const providers = [{\n    provide: ROUTER_CONFIGURATION,\n    useValue: options\n  }];\n  return routerFeature(5 /* RouterFeatureKind.RouterConfigurationFeature */, providers);\n}\n/**\n * Provides the location strategy that uses the URL fragment instead of the history API.\n *\n * @usageNotes\n *\n * Basic example of how you can use the hash location option:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withHashLocation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link HashLocationStrategy}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withHashLocation() {\n  const providers = [{\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  }];\n  return routerFeature(6 /* RouterFeatureKind.RouterHashLocationFeature */, providers);\n}\n/**\n * Provides a function which is called when a navigation error occurs.\n *\n * This function is run inside application's [injection context](guide/di/dependency-injection-context)\n * so you can use the [`inject`](api/core/inject) function.\n *\n * This function can return a `RedirectCommand` to convert the error to a redirect, similar to returning\n * a `UrlTree` or `RedirectCommand` from a guard. This will also prevent the `Router` from emitting\n * `NavigationError`; it will instead emit `NavigationCancel` with code NavigationCancellationCode.Redirect.\n * Return values other than `RedirectCommand` are ignored and do not change any behavior with respect to\n * how the `Router` handles the error.\n *\n * @usageNotes\n *\n * Basic example of how you can use the error handler option:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withNavigationErrorHandler((e: NavigationError) =>\n * inject(MyErrorTracker).trackError(e)))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link NavigationError}\n * @see {@link core/inject}\n * @see {@link runInInjectionContext}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withNavigationErrorHandler(handler) {\n  const providers = [{\n    provide: NAVIGATION_ERROR_HANDLER,\n    useValue: handler\n  }];\n  return routerFeature(7 /* RouterFeatureKind.NavigationErrorHandlerFeature */, providers);\n}\n/**\n * Enables binding information from the `Router` state directly to the inputs of the component in\n * `Route` configurations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withComponentInputBinding())\n *     ]\n *   }\n * );\n * ```\n *\n * The router bindings information from any of the following sources:\n *\n *  - query parameters\n *  - path and matrix parameters\n *  - static route data\n *  - data from resolvers\n *\n * Duplicate keys are resolved in the same order from above, from least to greatest,\n * meaning that resolvers have the highest precedence and override any of the other information\n * from the route.\n *\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. This prevents previous information from being\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n * Default values can be provided with a resolver on the route to ensure the value is always present\n * or an input and use an input transform in the component.\n *\n * @see {@link guide/components/inputs#input-transforms input transforms}\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withComponentInputBinding() {\n  const providers = [RoutedComponentInputBinder, {\n    provide: INPUT_BINDER,\n    useExisting: RoutedComponentInputBinder\n  }];\n  return routerFeature(8 /* RouterFeatureKind.ComponentInputBindingFeature */, providers);\n}\n/**\n * Enables view transitions in the Router by running the route activation and deactivation inside of\n * `document.startViewTransition`.\n *\n * Note: The View Transitions API is not available in all browsers. If the browser does not support\n * view transitions, the Router will not attempt to start a view transition and continue processing\n * the navigation as usual.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withViewTransitions())\n *     ]\n *   }\n * );\n * ```\n *\n * @returns A set of providers for use with `provideRouter`.\n * @see https://developer.chrome.com/docs/web-platform/view-transitions/\n * @see https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API\n * @developerPreview\n */\nfunction withViewTransitions(options) {\n  const providers = [{\n    provide: CREATE_VIEW_TRANSITION,\n    useValue: createViewTransition\n  }, {\n    provide: VIEW_TRANSITION_OPTIONS,\n    useValue: {\n      skipNextTransition: !!options?.skipInitialTransition,\n      ...options\n    }\n  }];\n  return routerFeature(9 /* RouterFeatureKind.ViewTransitionsFeature */, providers);\n}\n\n/**\n * The directives defined in the `RouterModule`.\n */\nconst ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkActive, ɵEmptyOutletComponent];\n/**\n * @docsNotRequired\n */\nconst ROUTER_FORROOT_GUARD = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router duplicate forRoot guard' : '');\n// TODO(atscott): All of these except `ActivatedRoute` are `providedIn: 'root'`. They are only kept\n// here to avoid a breaking change whereby the provider order matters based on where the\n// `RouterModule`/`RouterTestingModule` is imported. These can/should be removed as a \"breaking\"\n// change in a major version.\nconst ROUTER_PROVIDERS = [Location, {\n  provide: UrlSerializer,\n  useClass: DefaultUrlSerializer\n}, Router, ChildrenOutletContexts, {\n  provide: ActivatedRoute,\n  useFactory: rootRoute,\n  deps: [Router]\n}, RouterConfigLoader,\n// Only used to warn when `provideRoutes` is used without `RouterModule` or `provideRouter`. Can\n// be removed when `provideRoutes` is removed.\ntypeof ngDevMode === 'undefined' || ngDevMode ? {\n  provide: ROUTER_IS_PROVIDED,\n  useValue: true\n} : []];\n/**\n * @description\n *\n * Adds directives and providers for in-app navigation among views defined in an application.\n * Use the Angular `Router` service to declaratively specify application states and manage state\n * transitions.\n *\n * You can import this NgModule multiple times, once for each lazy-loaded bundle.\n * However, only one `Router` service can be active.\n * To ensure this, there are two ways to register routes when importing this module:\n *\n * * The `forRoot()` method creates an `NgModule` that contains all the directives, the given\n * routes, and the `Router` service itself.\n * * The `forChild()` method creates an `NgModule` that contains all the directives and the given\n * routes, but does not include the `Router` service.\n *\n * @see [Routing and Navigation guide](guide/routing/common-router-tasks) for an\n * overview of how the `Router` service should be used.\n *\n * @publicApi\n */\nlet RouterModule = /*#__PURE__*/(() => {\n  class RouterModule {\n    constructor() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        inject(ROUTER_FORROOT_GUARD, {\n          optional: true\n        });\n      }\n    }\n    /**\n     * Creates and configures a module with all the router providers and directives.\n     * Optionally sets up an application listener to perform an initial navigation.\n     *\n     * When registering the NgModule at the root, import as follows:\n     *\n     * ```ts\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the application.\n     * @param config An `ExtraOptions` configuration object that controls how navigation is performed.\n     * @return The new `NgModule`.\n     *\n     */\n    static forRoot(routes, config) {\n      return {\n        ngModule: RouterModule,\n        providers: [ROUTER_PROVIDERS, typeof ngDevMode === 'undefined' || ngDevMode ? config?.enableTracing ? withDebugTracing().ɵproviders : [] : [], {\n          provide: ROUTES,\n          multi: true,\n          useValue: routes\n        }, typeof ngDevMode === 'undefined' || ngDevMode ? {\n          provide: ROUTER_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[Router, new Optional(), new SkipSelf()]]\n        } : [], config?.errorHandler ? {\n          provide: NAVIGATION_ERROR_HANDLER,\n          useValue: config.errorHandler\n        } : [], {\n          provide: ROUTER_CONFIGURATION,\n          useValue: config ? config : {}\n        }, config?.useHash ? provideHashLocationStrategy() : providePathLocationStrategy(), provideRouterScroller(), config?.preloadingStrategy ? withPreloading(config.preloadingStrategy).ɵproviders : [], config?.initialNavigation ? provideInitialNavigation(config) : [], config?.bindToComponentInputs ? withComponentInputBinding().ɵproviders : [], config?.enableViewTransitions ? withViewTransitions().ɵproviders : [], provideRouterInitializer()]\n      };\n    }\n    /**\n     * Creates a module with all the router directives and a provider registering routes,\n     * without creating a new Router service.\n     * When registering for submodules and lazy-loaded submodules, create the NgModule as follows:\n     *\n     * ```ts\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the submodule.\n     * @return The new NgModule.\n     *\n     */\n    static forChild(routes) {\n      return {\n        ngModule: RouterModule,\n        providers: [{\n          provide: ROUTES,\n          multi: true,\n          useValue: routes\n        }]\n      };\n    }\n    static ɵfac = function RouterModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: RouterModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return RouterModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * For internal use by `RouterModule` only. Note that this differs from `withInMemoryRouterScroller`\n * because it reads from the `ExtraOptions` which should not be used in the standalone world.\n */\nfunction provideRouterScroller() {\n  return {\n    provide: ROUTER_SCROLLER,\n    useFactory: () => {\n      const viewportScroller = inject(ViewportScroller);\n      const zone = inject(NgZone);\n      const config = inject(ROUTER_CONFIGURATION);\n      const transitions = inject(NavigationTransitions);\n      const urlSerializer = inject(UrlSerializer);\n      if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n      }\n      return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, config);\n    }\n  };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` should\n// provide hash location directly via `{provide: LocationStrategy, useClass: HashLocationStrategy}`.\nfunction provideHashLocationStrategy() {\n  return {\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` does not\n// need this at all because `PathLocationStrategy` is the default factory for `LocationStrategy`.\nfunction providePathLocationStrategy() {\n  return {\n    provide: LocationStrategy,\n    useClass: PathLocationStrategy\n  };\n}\nfunction provideForRootGuard(router) {\n  if (router) {\n    throw new ɵRuntimeError(4007 /* RuntimeErrorCode.FOR_ROOT_CALLED_TWICE */, `The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector.` + ` Lazy loaded modules should use RouterModule.forChild() instead.`);\n  }\n  return 'guarded';\n}\n// Note: For internal use only with `RouterModule`. Standalone router setup with `provideRouter`\n// users call `withXInitialNavigation` directly.\nfunction provideInitialNavigation(config) {\n  return [config.initialNavigation === 'disabled' ? withDisabledInitialNavigation().ɵproviders : [], config.initialNavigation === 'enabledBlocking' ? withEnabledBlockingInitialNavigation().ɵproviders : []];\n}\n// TODO(atscott): This should not be in the public API\n/**\n * A DI token for the router initializer that\n * is called after the app is bootstrapped.\n *\n * @publicApi\n */\nconst ROUTER_INITIALIZER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'Router Initializer' : '');\nfunction provideRouterInitializer() {\n  return [\n  // ROUTER_INITIALIZER token should be removed. It's public API but shouldn't be. We can just\n  // have `getBootstrapListener` directly attached to APP_BOOTSTRAP_LISTENER.\n  {\n    provide: ROUTER_INITIALIZER,\n    useFactory: getBootstrapListener\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useExisting: ROUTER_INITIALIZER\n  }];\n}\n\n/**\n * Maps an array of injectable classes with canMatch functions to an array of equivalent\n * `CanMatchFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanMatch(providers) {\n  return providers.map(provider => (...params) => inject(provider).canMatch(...params));\n}\n/**\n * Maps an array of injectable classes with canActivate functions to an array of equivalent\n * `CanActivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivate(providers) {\n  return providers.map(provider => (...params) => inject(provider).canActivate(...params));\n}\n/**\n * Maps an array of injectable classes with canActivateChild functions to an array of equivalent\n * `CanActivateChildFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivateChild(providers) {\n  return providers.map(provider => (...params) => inject(provider).canActivateChild(...params));\n}\n/**\n * Maps an array of injectable classes with canDeactivate functions to an array of equivalent\n * `CanDeactivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanDeactivate(providers) {\n  return providers.map(provider => (...params) => inject(provider).canDeactivate(...params));\n}\n/**\n * Maps an injectable class with a resolve function to an equivalent `ResolveFn`\n * for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='Resolve'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToResolve(provider) {\n  return (...params) => inject(provider).resolve(...params);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('19.1.7');\nfunction getLoadedRoutes(route) {\n  return route._loadedRoutes;\n}\n/*#__PURE__*/ɵpublishExternalGlobalUtil('ɵgetLoadedRoutes', getLoadedRoutes);\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActivatedRoute, ActivatedRouteSnapshot, ActivationEnd, ActivationStart, BaseRouteReuseStrategy, ChildActivationEnd, ChildActivationStart, ChildrenOutletContexts, DefaultTitleStrategy, DefaultUrlSerializer, EventType, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationCancellationCode, NavigationEnd, NavigationError, NavigationSkipped, NavigationSkippedCode, NavigationStart, NoPreloading, OutletContext, PRIMARY_OUTLET, PreloadAllModules, PreloadingStrategy, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, ROUTER_OUTLET_DATA, ROUTES, RedirectCommand, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouteReuseStrategy, Router, RouterEvent, RouterLink, RouterLinkActive, RouterLink as RouterLinkWithHref, RouterModule, RouterOutlet, RouterPreloader, RouterState, RouterStateSnapshot, RoutesRecognized, Scroll, TitleStrategy, UrlHandlingStrategy, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, convertToParamMap, createUrlTreeFromSnapshot, defaultUrlMatcher, mapToCanActivate, mapToCanActivateChild, mapToCanDeactivate, mapToCanMatch, mapToResolve, provideRouter, provideRoutes, withComponentInputBinding, withDebugTracing, withDisabledInitialNavigation, withEnabledBlockingInitialNavigation, withHashLocation, withInMemoryScrolling, withNavigationErrorHandler, withPreloading, withRouterConfig, withViewTransitions, ɵEmptyOutletComponent, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, afterNextNavigation as ɵafterNextNavigation, loadChildren as ɵloadChildren };\n","/**\n * @license Angular v19.1.7\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise, ɵisSubscribable, ɵRuntimeError, Self, untracked, computed, signal, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, Injectable, inject, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { from, forkJoin, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BaseControlValueAccessor = /*#__PURE__*/(() => {\n  class BaseControlValueAccessor {\n    _renderer;\n    _elementRef;\n    /**\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @nodoc\n     */\n    onChange = _ => {};\n    /**\n     * The registered callback function called when a blur event occurs on the input element.\n     * @nodoc\n     */\n    onTouched = () => {};\n    constructor(_renderer, _elementRef) {\n      this._renderer = _renderer;\n      this._elementRef = _elementRef;\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @nodoc\n     */\n    setProperty(key, value) {\n      this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n      this.setProperty('disabled', isDisabled);\n    }\n    static ɵfac = function BaseControlValueAccessor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BaseControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BaseControlValueAccessor\n    });\n  }\n  return BaseControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BuiltInControlValueAccessor = /*#__PURE__*/(() => {\n  class BuiltInControlValueAccessor extends BaseControlValueAccessor {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵBuiltInControlValueAccessor_BaseFactory;\n      return function BuiltInControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵBuiltInControlValueAccessor_BaseFactory || (ɵBuiltInControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(BuiltInControlValueAccessor)))(__ngFactoryType__ || BuiltInControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BuiltInControlValueAccessor,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return BuiltInControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet CheckboxControlValueAccessor = /*#__PURE__*/(() => {\n  class CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('checked', value);\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵCheckboxControlValueAccessor_BaseFactory;\n      return function CheckboxControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵCheckboxControlValueAccessor_BaseFactory || (ɵCheckboxControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxControlValueAccessor)))(__ngFactoryType__ || CheckboxControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CheckboxControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]],\n      hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.checked);\n          })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CheckboxControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DEFAULT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n  const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = /*#__PURE__*/new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```html\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet DefaultValueAccessor = /*#__PURE__*/(() => {\n  class DefaultValueAccessor extends BaseControlValueAccessor {\n    _compositionMode;\n    /** Whether the user is creating a composition string (IME events). */\n    _composing = false;\n    constructor(renderer, elementRef, _compositionMode) {\n      super(renderer, elementRef);\n      this._compositionMode = _compositionMode;\n      if (this._compositionMode == null) {\n        this._compositionMode = !_isAndroid();\n      }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n      if (!this._compositionMode || this._compositionMode && !this._composing) {\n        this.onChange(value);\n      }\n    }\n    /** @internal */\n    _compositionStart() {\n      this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n      this._composing = false;\n      this._compositionMode && this.onChange(value);\n    }\n    static ɵfac = function DefaultValueAccessor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DefaultValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: DefaultValueAccessor,\n      selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]],\n      hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) {\n            return ctx._handleInput($event.target.value);\n          })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() {\n            return ctx._compositionStart();\n          })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) {\n            return ctx._compositionEnd($event.target.value);\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return DefaultValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isEmptyInputValue(value) {\n  /**\n   * Check if the object is a string or array before evaluating the length attribute.\n   * This avoids falsely rejecting objects that contain a custom length attribute.\n   * For example, the object {id: 1, length: 0, width: 0} should not be returned as empty.\n   */\n  return value == null || (typeof value === 'string' || Array.isArray(value)) && value.length === 0;\n}\nfunction hasValidLength(value) {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```ts\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```ts\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n  /**\n   * @description\n   * Validator that requires the control's value to be greater than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a minimum of 3\n   *\n   * ```ts\n   * const control = new FormControl(2, Validators.min(3));\n   *\n   * console.log(control.errors); // {min: {min: 3, actual: 2}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `min` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static min(min) {\n    return minValidator(min);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to be less than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a maximum of 15\n   *\n   * ```ts\n   * const control = new FormControl(16, Validators.max(15));\n   *\n   * console.log(control.errors); // {max: {max: 15, actual: 16}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `max` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static max(max) {\n    return maxValidator(max);\n  }\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```ts\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static required(control) {\n    return requiredValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value be true. This validator is commonly\n   * used for required checkboxes.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field value is true\n   *\n   * ```ts\n   * const control = new FormControl('some value', Validators.requiredTrue);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map that contains the `required` property\n   * set to `true` if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static requiredTrue(control) {\n    return requiredTrueValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value pass an email validation test.\n   *\n   * Tests the value using a [regular\n   * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n   * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n   * address in the [WHATWG HTML\n   * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n   * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n   * lengths of different parts of the address).\n   *\n   * The differences from the WHATWG version include:\n   * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n   * - Disallow `local-part` to be longer than 64 characters.\n   * - Disallow the whole address to be longer than 254 characters.\n   *\n   * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n   * validate the value against a different pattern.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field matches a valid email pattern\n   *\n   * ```ts\n   * const control = new FormControl('bad@', Validators.email);\n   *\n   * console.log(control.errors); // {email: true}\n   * ```\n   *\n   * @returns An error map with the `email` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static email(control) {\n    return emailValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use the\n   * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays. The\n   * `minLength` validator logic is also not invoked for values when their `length` property is 0\n   * (for example in case of an empty string or an empty array), to support optional controls. You\n   * can use the standard `required` validator if empty values should not be considered valid.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```ts\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static minLength(minLength) {\n    return minLengthValidator(minLength);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use the\n   * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```ts\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static maxLength(maxLength) {\n    return maxLengthValidator(maxLength);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to match a regex pattern. This validator is also\n   * provided by default if you use the HTML5 `pattern` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field only contains letters or spaces\n   *\n   * ```ts\n   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n   *\n   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n   * ```\n   *\n   * ```html\n   * <input pattern=\"[a-zA-Z ]*\">\n   * ```\n   *\n   * ### Pattern matching with the global or sticky flag\n   *\n   * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n   * can produce different results on the same input when validations are run consecutively. This is\n   * due to how the behavior of `RegExp.prototype.test` is\n   * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n   * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n   * Due to this behavior, it is recommended that when using\n   * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n   * flag enabled.\n   *\n   * ```ts\n   * // Not recommended (since the `g` flag is used)\n   * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n   *\n   * // Good\n   * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n   * ```\n   *\n   * @param pattern A regular expression to be used as is to test the values, or a string.\n   * If a string is passed, the `^` character is prepended and the `$` character is\n   * appended to the provided string (if not already present), and the resulting regular\n   * expression is used to test the values.\n   *\n   * @returns A validator function that returns an error map with the\n   * `pattern` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static pattern(pattern) {\n    return patternValidator(pattern);\n  }\n  /**\n   * @description\n   * Validator that performs no operation.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static nullValidator(control) {\n    return nullValidator(control);\n  }\n  static compose(validators) {\n    return compose(validators);\n  }\n  /**\n   * @description\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error objects for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error objects of the async validators if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static composeAsync(validators) {\n    return composeAsync(validators);\n  }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    return !isNaN(value) && value < min ? {\n      'min': {\n        'min': min,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    return !isNaN(value) && value > max ? {\n      'max': {\n        'max': max,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n  return isEmptyInputValue(control.value) ? {\n    'required': true\n  } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n  return control.value === true ? null : {\n    'required': true\n  };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n  if (isEmptyInputValue(control.value)) {\n    return null; // don't validate empty values to allow optional controls\n  }\n  return EMAIL_REGEXP.test(control.value) ? null : {\n    'email': true\n  };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n  return control => {\n    if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n      // don't validate empty values to allow optional controls\n      // don't validate values without `length` property\n      return null;\n    }\n    return control.value.length < minLength ? {\n      'minlength': {\n        'requiredLength': minLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n  return control => {\n    return hasValidLength(control.value) && control.value.length > maxLength ? {\n      'maxlength': {\n        'requiredLength': maxLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n  if (!pattern) return nullValidator;\n  let regex;\n  let regexStr;\n  if (typeof pattern === 'string') {\n    regexStr = '';\n    if (pattern.charAt(0) !== '^') regexStr += '^';\n    regexStr += pattern;\n    if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';\n    regex = new RegExp(regexStr);\n  } else {\n    regexStr = pattern.toString();\n    regex = pattern;\n  }\n  return control => {\n    if (isEmptyInputValue(control.value)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = control.value;\n    return regex.test(value) ? null : {\n      'pattern': {\n        'requiredPattern': regexStr,\n        'actualValue': value\n      }\n    };\n  };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n  return null;\n}\nfunction isPresent(o) {\n  return o != null;\n}\nfunction toObservable(value) {\n  const obs = ɵisPromise(value) ? from(value) : value;\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ɵisSubscribable(obs)) {\n    let errorMessage = `Expected async validator to return Promise or Observable.`;\n    // A synchronous validator will return object or null.\n    if (typeof value === 'object') {\n      errorMessage += ' Are you using a synchronous validator where an async validator is expected?';\n    }\n    throw new ɵRuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n  }\n  return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n  let res = {};\n  arrayOfErrors.forEach(errors => {\n    res = errors != null ? {\n      ...res,\n      ...errors\n    } : res;\n  });\n  return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n  return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n  return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n  return validators.map(validator => {\n    return isValidatorFn(validator) ? validator : c => validator.validate(c);\n  });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    return mergeErrors(executeValidators(control, presentValidators));\n  };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n  return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    const observables = executeValidators(control, presentValidators).map(toObservable);\n    return forkJoin(observables).pipe(map(mergeErrors));\n  };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n  return validators != null ? composeAsync(normalizeValidators(validators)) : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n  if (controlValidators === null) return [dirValidator];\n  return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n  return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n  return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n  if (!validators) return [];\n  return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n  return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n  const current = makeValidatorsArray(currentValidators);\n  const validatorsToAdd = makeValidatorsArray(validators);\n  validatorsToAdd.forEach(v => {\n    // Note: if there are duplicate entries in the new validators array,\n    // only the first one would be added to the current list of validators.\n    // Duplicate ones would be ignored since `hasValidator` would detect\n    // the presence of a validator function and we update the current list in place.\n    if (!hasValidator(current, v)) {\n      current.push(v);\n    }\n  });\n  return current;\n}\nfunction removeValidators(validators, currentValidators) {\n  return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n  /**\n   * @description\n   * Reports the value of the control if it is present, otherwise null.\n   */\n  get value() {\n    return this.control ? this.control.value : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is valid. A control is considered valid if no\n   * validation errors exist with the current value.\n   * If the control is not present, null is returned.\n   */\n  get valid() {\n    return this.control ? this.control.valid : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is invalid, meaning that an error exists in the input value.\n   * If the control is not present, null is returned.\n   */\n  get invalid() {\n    return this.control ? this.control.invalid : null;\n  }\n  /**\n   * @description\n   * Reports whether a control is pending, meaning that async validation is occurring and\n   * errors are not yet available for the input value. If the control is not present, null is\n   * returned.\n   */\n  get pending() {\n    return this.control ? this.control.pending : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is disabled, meaning that the control is disabled\n   * in the UI and is exempt from validation checks and excluded from aggregate\n   * values of ancestor controls. If the control is not present, null is returned.\n   */\n  get disabled() {\n    return this.control ? this.control.disabled : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is enabled, meaning that the control is included in ancestor\n   * calculations of validity or value. If the control is not present, null is returned.\n   */\n  get enabled() {\n    return this.control ? this.control.enabled : null;\n  }\n  /**\n   * @description\n   * Reports the control's validation errors. If the control is not present, null is returned.\n   */\n  get errors() {\n    return this.control ? this.control.errors : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is pristine, meaning that the user has not yet changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get pristine() {\n    return this.control ? this.control.pristine : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is dirty, meaning that the user has changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get dirty() {\n    return this.control ? this.control.dirty : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is touched, meaning that the user has triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get touched() {\n    return this.control ? this.control.touched : null;\n  }\n  /**\n   * @description\n   * Reports the validation status of the control. Possible values include:\n   * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n   * If the control is not present, null is returned.\n   */\n  get status() {\n    return this.control ? this.control.status : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is untouched, meaning that the user has not yet triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get untouched() {\n    return this.control ? this.control.untouched : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable that emits a validation status whenever it is\n   * calculated for the control. If the control is not present, null is returned.\n   */\n  get statusChanges() {\n    return this.control ? this.control.statusChanges : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable of value changes for the control that emits every time the\n   * value of the control changes in the UI or programmatically.\n   * If the control is not present, null is returned.\n   */\n  get valueChanges() {\n    return this.control ? this.control.valueChanges : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return null;\n  }\n  /**\n   * Contains the result of merging synchronous validators into a single validator function\n   * (combined using `Validators.compose`).\n   */\n  _composedValidatorFn;\n  /**\n   * Contains the result of merging asynchronous validators into a single validator function\n   * (combined using `Validators.composeAsync`).\n   */\n  _composedAsyncValidatorFn;\n  /**\n   * Set of synchronous validators as they were provided while calling `setValidators` function.\n   * @internal\n   */\n  _rawValidators = [];\n  /**\n   * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n   * function.\n   * @internal\n   */\n  _rawAsyncValidators = [];\n  /**\n   * Sets synchronous validators for this directive.\n   * @internal\n   */\n  _setValidators(validators) {\n    this._rawValidators = validators || [];\n    this._composedValidatorFn = composeValidators(this._rawValidators);\n  }\n  /**\n   * Sets asynchronous validators for this directive.\n   * @internal\n   */\n  _setAsyncValidators(validators) {\n    this._rawAsyncValidators = validators || [];\n    this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n  }\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators registered with this\n   * directive.\n   */\n  get validator() {\n    return this._composedValidatorFn || null;\n  }\n  /**\n   * @description\n   * Asynchronous validator function composed of all the asynchronous validators registered with\n   * this directive.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn || null;\n  }\n  /*\n   * The set of callbacks to be invoked when directive instance is being destroyed.\n   */\n  _onDestroyCallbacks = [];\n  /**\n   * Internal function to register callbacks that should be invoked\n   * when directive instance is being destroyed.\n   * @internal\n   */\n  _registerOnDestroy(fn) {\n    this._onDestroyCallbacks.push(fn);\n  }\n  /**\n   * Internal function to invoke all registered \"on destroy\" callbacks.\n   * Note: calling this function also clears the list of callbacks.\n   * @internal\n   */\n  _invokeOnDestroyCallbacks() {\n    this._onDestroyCallbacks.forEach(fn => fn());\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Resets the control with the provided value if the control is present.\n   */\n  reset(value = undefined) {\n    if (this.control) this.control.reset(value);\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n  /**\n   * @description\n   * The name for the control\n   */\n  // TODO(issue/24571): remove '!'.\n  name;\n  /**\n   * @description\n   * The top-level form directive for the control.\n   */\n  get formDirective() {\n    return null;\n  }\n  /**\n   * @description\n   * The path to this group.\n   */\n  get path() {\n    return null;\n  }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n  /**\n   * @description\n   * The parent form for the control.\n   *\n   * @internal\n   */\n  _parent = null;\n  /**\n   * @description\n   * The name for the control\n   */\n  name = null;\n  /**\n   * @description\n   * The value accessor for the control\n   */\n  valueAccessor = null;\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n  _cd;\n  constructor(cd) {\n    this._cd = cd;\n  }\n  get isTouched() {\n    // track the touched signal\n    this._cd?.control?._touched?.();\n    return !!this._cd?.control?.touched;\n  }\n  get isUntouched() {\n    return !!this._cd?.control?.untouched;\n  }\n  get isPristine() {\n    // track the pristine signal\n    this._cd?.control?._pristine?.();\n    return !!this._cd?.control?.pristine;\n  }\n  get isDirty() {\n    // pristine signal already tracked above\n    return !!this._cd?.control?.dirty;\n  }\n  get isValid() {\n    // track the status signal\n    this._cd?.control?._status?.();\n    return !!this._cd?.control?.valid;\n  }\n  get isInvalid() {\n    // status signal already tracked above\n    return !!this._cd?.control?.invalid;\n  }\n  get isPending() {\n    // status signal already tracked above\n    return !!this._cd?.control?.pending;\n  }\n  get isSubmitted() {\n    // track the submitted signal\n    this._cd?._submitted?.();\n    // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n    // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n    return !!this._cd?.submitted;\n  }\n}\nconst ngControlStatusHost = {\n  '[class.ng-untouched]': 'isUntouched',\n  '[class.ng-touched]': 'isTouched',\n  '[class.ng-pristine]': 'isPristine',\n  '[class.ng-dirty]': 'isDirty',\n  '[class.ng-valid]': 'isValid',\n  '[class.ng-invalid]': 'isInvalid',\n  '[class.ng-pending]': 'isPending'\n};\nconst ngGroupStatusHost = {\n  ...ngControlStatusHost,\n  '[class.ng-submitted]': 'isSubmitted'\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatus = /*#__PURE__*/(() => {\n  class NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static ɵfac = function NgControlStatus_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgControlStatus)(i0.ɵɵdirectiveInject(NgControl, 2));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgControlStatus,\n      selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]],\n      hostVars: 14,\n      hostBindings: function NgControlStatus_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending);\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgControlStatus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatusGroup = /*#__PURE__*/(() => {\n  class NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static ɵfac = function NgControlStatusGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgControlStatusGroup)(i0.ɵɵdirectiveInject(ControlContainer, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgControlStatusGroup,\n      selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]],\n      hostVars: 16,\n      hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending)(\"ng-submitted\", ctx.isSubmitted);\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgControlStatusGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\nfunction controlParentException(nameOrIndex) {\n  return new ɵRuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive. You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      ${describeFormControl(nameOrIndex)}\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction describeFormControl(nameOrIndex) {\n  if (nameOrIndex == null || nameOrIndex === '') {\n    return '';\n  }\n  const valueType = typeof nameOrIndex === 'string' ? 'name' : 'index';\n  return `Affected Form Control ${valueType}: \"${nameOrIndex}\"`;\n}\nfunction ngModelGroupException() {\n  return new ɵRuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n  return new ɵRuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n  return new ɵRuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n  return new ɵRuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n  return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n  return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n  return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n  return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n  return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Base class for every event sent by `AbstractControl.events()`\n *\n * @publicApi\n */\nclass ControlEvent {}\n/**\n * Event fired when the value of a control changes.\n *\n * @publicApi\n */\nclass ValueChangeEvent extends ControlEvent {\n  value;\n  source;\n  constructor(value, source) {\n    super();\n    this.value = value;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's pristine state changes (pristine <=> dirty).\n *\n * @publicApi */\nclass PristineChangeEvent extends ControlEvent {\n  pristine;\n  source;\n  constructor(pristine, source) {\n    super();\n    this.pristine = pristine;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's touched status changes (touched <=> untouched).\n *\n * @publicApi\n */\nclass TouchedChangeEvent extends ControlEvent {\n  touched;\n  source;\n  constructor(touched, source) {\n    super();\n    this.touched = touched;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's status changes.\n *\n * @publicApi\n */\nclass StatusChangeEvent extends ControlEvent {\n  status;\n  source;\n  constructor(status, source) {\n    super();\n    this.status = status;\n    this.source = source;\n  }\n}\n/**\n * Event fired when a form is submitted\n *\n * @publicApi\n */\nclass FormSubmittedEvent extends ControlEvent {\n  source;\n  constructor(source) {\n    super();\n    this.source = source;\n  }\n}\n/**\n * Event fired when a form is reset.\n *\n * @publicApi\n */\nclass FormResetEvent extends ControlEvent {\n  source;\n  constructor(source) {\n    super();\n    this.source = source;\n  }\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n      console.warn(asyncValidatorsDroppedWithOptsWarning);\n    }\n  }\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n  const controls = parent.controls;\n  const collection = isGroup ? Object.keys(controls) : controls;\n  if (!collection.length) {\n    throw new ɵRuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n  }\n  if (!controls[key]) {\n    throw new ɵRuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n  }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n  control._forEachChild((_, key) => {\n    if (value[key] === undefined) {\n      throw new ɵRuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n    }\n  });\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see [Dynamic Forms Guide](guide/forms/dynamic-forms)\n *\n * @publicApi\n */\nclass AbstractControl {\n  /** @internal */\n  _pendingDirty = false;\n  /**\n   * Indicates that a control has its own pending asynchronous validation in progress.\n   * It also stores if the control should emit events when the validation status changes.\n   *\n   * @internal\n   */\n  _hasOwnPendingAsyncValidator = null;\n  /** @internal */\n  _pendingTouched = false;\n  /** @internal */\n  _onCollectionChange = () => {};\n  /** @internal */\n  _updateOn;\n  _parent = null;\n  _asyncValidationSubscription;\n  /**\n   * Contains the result of merging synchronous validators into a single validator function\n   * (combined using `Validators.compose`).\n   *\n   * @internal\n   */\n  _composedValidatorFn;\n  /**\n   * Contains the result of merging asynchronous validators into a single validator function\n   * (combined using `Validators.composeAsync`).\n   *\n   * @internal\n   */\n  _composedAsyncValidatorFn;\n  /**\n   * Synchronous validators as they were provided:\n   *  - in `AbstractControl` constructor\n   *  - as an argument while calling `setValidators` function\n   *  - while calling the setter on the `validator` field (e.g. `control.validator = validatorFn`)\n   *\n   * @internal\n   */\n  _rawValidators;\n  /**\n   * Asynchronous validators as they were provided:\n   *  - in `AbstractControl` constructor\n   *  - as an argument while calling `setAsyncValidators` function\n   *  - while calling the setter on the `asyncValidator` field (e.g. `control.asyncValidator =\n   * asyncValidatorFn`)\n   *\n   * @internal\n   */\n  _rawAsyncValidators;\n  /**\n   * The current value of the control.\n   *\n   * * For a `FormControl`, the current value.\n   * * For an enabled `FormGroup`, the values of enabled controls as an object\n   * with a key-value pair for each member of the group.\n   * * For a disabled `FormGroup`, the values of all controls as an object\n   * with a key-value pair for each member of the group.\n   * * For a `FormArray`, the values of enabled controls as an array.\n   *\n   */\n  value;\n  /**\n   * Initialize the AbstractControl instance.\n   *\n   * @param validators The function or array of functions that is used to determine the validity of\n   *     this control synchronously.\n   * @param asyncValidators The function or array of functions that is used to determine validity of\n   *     this control asynchronously.\n   */\n  constructor(validators, asyncValidators) {\n    this._assignValidators(validators);\n    this._assignAsyncValidators(asyncValidators);\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control synchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get validator() {\n    return this._composedValidatorFn;\n  }\n  set validator(validatorFn) {\n    this._rawValidators = this._composedValidatorFn = validatorFn;\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control asynchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn;\n  }\n  set asyncValidator(asyncValidatorFn) {\n    this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n  }\n  /**\n   * The parent control.\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * The validation status of the control.\n   *\n   * @see {@link FormControlStatus}\n   *\n   * These status values are mutually exclusive, so a control cannot be\n   * both valid AND invalid or invalid AND disabled.\n   */\n  get status() {\n    return untracked(this.statusReactive);\n  }\n  set status(v) {\n    untracked(() => this.statusReactive.set(v));\n  }\n  /** @internal */\n  _status = /*#__PURE__*/computed(() => this.statusReactive());\n  statusReactive = /*#__PURE__*/signal(undefined);\n  /**\n   * A control is `valid` when its `status` is `VALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control has passed all of its validation tests,\n   * false otherwise.\n   */\n  get valid() {\n    return this.status === VALID;\n  }\n  /**\n   * A control is `invalid` when its `status` is `INVALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control has failed one or more of its validation checks,\n   * false otherwise.\n   */\n  get invalid() {\n    return this.status === INVALID;\n  }\n  /**\n   * A control is `pending` when its `status` is `PENDING`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control is in the process of conducting a validation check,\n   * false otherwise.\n   */\n  get pending() {\n    return this.status == PENDING;\n  }\n  /**\n   * A control is `disabled` when its `status` is `DISABLED`.\n   *\n   * Disabled controls are exempt from validation checks and\n   * are not included in the aggregate value of their ancestor\n   * controls.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control is disabled, false otherwise.\n   */\n  get disabled() {\n    return this.status === DISABLED;\n  }\n  /**\n   * A control is `enabled` as long as its `status` is not `DISABLED`.\n   *\n   * @returns True if the control has any status other than 'DISABLED',\n   * false if the status is 'DISABLED'.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  get enabled() {\n    return this.status !== DISABLED;\n  }\n  /**\n   * An object containing any errors generated by failing validation,\n   * or null if there are no errors.\n   */\n  errors;\n  /**\n   * A control is `pristine` if the user has not yet changed\n   * the value in the UI.\n   *\n   * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get pristine() {\n    return untracked(this.pristineReactive);\n  }\n  set pristine(v) {\n    untracked(() => this.pristineReactive.set(v));\n  }\n  /** @internal */\n  _pristine = /*#__PURE__*/computed(() => this.pristineReactive());\n  pristineReactive = /*#__PURE__*/signal(true);\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get dirty() {\n    return !this.pristine;\n  }\n  /**\n   * True if the control is marked as `touched`.\n   *\n   * A control is marked `touched` once the user has triggered\n   * a `blur` event on it.\n   */\n  get touched() {\n    return untracked(this.touchedReactive);\n  }\n  set touched(v) {\n    untracked(() => this.touchedReactive.set(v));\n  }\n  /** @internal */\n  _touched = /*#__PURE__*/computed(() => this.touchedReactive());\n  touchedReactive = /*#__PURE__*/signal(false);\n  /**\n   * True if the control has not been marked as touched\n   *\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   */\n  get untouched() {\n    return !this.touched;\n  }\n  /**\n   * Exposed as observable, see below.\n   *\n   * @internal\n   */\n  _events = /*#__PURE__*/new Subject();\n  /**\n   * A multicasting observable that emits an event every time the state of the control changes.\n   * It emits for value, status, pristine or touched changes.\n   *\n   * **Note**: On value change, the emit happens right after a value of this control is updated. The\n   * value of a parent control (for example if this FormControl is a part of a FormGroup) is updated\n   * later, so accessing a value of a parent control (using the `value` property) from the callback\n   * of this event might result in getting a value that has not been updated yet. Subscribe to the\n   * `events` of the parent control instead.\n   * For other event types, the events are emitted after the parent control has been updated.\n   *\n   */\n  events = /*#__PURE__*/this._events.asObservable();\n  /**\n   * A multicasting observable that emits an event every time the value of the control changes, in\n   * the UI or programmatically. It also emits an event each time you call enable() or disable()\n   * without passing along {emitEvent: false} as a function argument.\n   *\n   * **Note**: the emit happens right after a value of this control is updated. The value of a\n   * parent control (for example if this FormControl is a part of a FormGroup) is updated later, so\n   * accessing a value of a parent control (using the `value` property) from the callback of this\n   * event might result in getting a value that has not been updated yet. Subscribe to the\n   * `valueChanges` event of the parent control instead.\n   *\n   * TODO: this should be piped from events() but is breaking in G3\n   */\n  valueChanges;\n  /**\n   * A multicasting observable that emits an event every time the validation `status` of the control\n   * recalculates.\n   *\n   * @see {@link FormControlStatus}\n   * @see {@link AbstractControl.status}\n   *\n   * TODO: this should be piped from events() but is breaking in G3\n   */\n  statusChanges;\n  /**\n   * Reports the update strategy of the `AbstractControl` (meaning\n   * the event on which the control updates itself).\n   * Possible values: `'change'` | `'blur'` | `'submit'`\n   * Default value: `'change'`\n   */\n  get updateOn() {\n    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n  }\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this overwrites any existing synchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addValidators()` method instead.\n   */\n  setValidators(validators) {\n    this._assignValidators(validators);\n  }\n  /**\n   * Sets the asynchronous validators that are active on this control. Calling this\n   * overwrites any existing asynchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addAsyncValidators()` method instead.\n   */\n  setAsyncValidators(validators) {\n    this._assignAsyncValidators(validators);\n  }\n  /**\n   * Add a synchronous validator or validators to this control, without affecting other validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect. If duplicate validator functions\n   * are present in the `validators` array, only the first instance would be added to a form\n   * control.\n   *\n   * @param validators The new validator function or functions to add to this control.\n   */\n  addValidators(validators) {\n    this.setValidators(addValidators(validators, this._rawValidators));\n  }\n  /**\n   * Add an asynchronous validator or validators to this control, without affecting other\n   * validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect.\n   *\n   * @param validators The new asynchronous validator function or functions to add to this control.\n   */\n  addAsyncValidators(validators) {\n    this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Remove a synchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found,\n   * it is ignored.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<string | null>('', Validators.required);\n   * ctrl.removeValidators(Validators.required);\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<string | null>('', minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   *\n   * ctrl.removeValidators(minValidator);\n   * ```\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The validator or validators to remove.\n   */\n  removeValidators(validators) {\n    this.setValidators(removeValidators(validators, this._rawValidators));\n  }\n  /**\n   * Remove an asynchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found, it\n   * is ignored.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The asynchronous validator or validators to remove.\n   */\n  removeAsyncValidators(validators) {\n    this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Check whether a synchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<number | null>(0, Validators.required);\n   * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<number | null>(0, minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   * ```\n   *\n   * @param validator The validator to check for presence. Compared by function reference.\n   * @returns Whether the provided validator was found on this control.\n   */\n  hasValidator(validator) {\n    return hasValidator(this._rawValidators, validator);\n  }\n  /**\n   * Check whether an asynchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @param validator The asynchronous validator to check for presence. Compared by function\n   *     reference.\n   * @returns Whether the provided asynchronous validator was found on this control.\n   */\n  hasAsyncValidator(validator) {\n    return hasValidator(this._rawAsyncValidators, validator);\n  }\n  /**\n   * Empties out the synchronous validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearValidators() {\n    this.validator = null;\n  }\n  /**\n   * Empties out the async validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearAsyncValidators() {\n    this.asyncValidator = null;\n  }\n  markAsTouched(opts = {}) {\n    const changed = this.touched === false;\n    this.touched = true;\n    const sourceControl = opts.sourceControl ?? this;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched({\n        ...opts,\n        sourceControl\n      });\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new TouchedChangeEvent(true, sourceControl));\n    }\n  }\n  /**\n   * Marks the control and all its descendant controls as `touched`.\n   * @see {@link markAsTouched()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `emitEvent`: When true or not supplied (the default), the `events`\n   * observable emits a `TouchedChangeEvent` with the `touched` property being `true`.\n   * When false, no events are emitted.\n   */\n  markAllAsTouched(opts = {}) {\n    this.markAsTouched({\n      onlySelf: true,\n      emitEvent: opts.emitEvent,\n      sourceControl: this\n    });\n    this._forEachChild(control => control.markAllAsTouched(opts));\n  }\n  markAsUntouched(opts = {}) {\n    const changed = this.touched === true;\n    this.touched = false;\n    this._pendingTouched = false;\n    const sourceControl = opts.sourceControl ?? this;\n    this._forEachChild(control => {\n      control.markAsUntouched({\n        onlySelf: true,\n        emitEvent: opts.emitEvent,\n        sourceControl\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts, sourceControl);\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new TouchedChangeEvent(false, sourceControl));\n    }\n  }\n  markAsDirty(opts = {}) {\n    const changed = this.pristine === true;\n    this.pristine = false;\n    const sourceControl = opts.sourceControl ?? this;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty({\n        ...opts,\n        sourceControl\n      });\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new PristineChangeEvent(false, sourceControl));\n    }\n  }\n  markAsPristine(opts = {}) {\n    const changed = this.pristine === false;\n    this.pristine = true;\n    this._pendingDirty = false;\n    const sourceControl = opts.sourceControl ?? this;\n    this._forEachChild(control => {\n      /** We don't propagate the source control downwards */\n      control.markAsPristine({\n        onlySelf: true,\n        emitEvent: opts.emitEvent\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts, sourceControl);\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new PristineChangeEvent(true, sourceControl));\n    }\n  }\n  markAsPending(opts = {}) {\n    this.status = PENDING;\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending({\n        ...opts,\n        sourceControl\n      });\n    }\n  }\n  disable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = DISABLED;\n    this.errors = null;\n    this._forEachChild(control => {\n      /** We don't propagate the source control downwards */\n      control.disable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this._updateValue();\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new ValueChangeEvent(this.value, sourceControl));\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    }, this);\n    this._onDisabledChange.forEach(changeFn => changeFn(true));\n  }\n  /**\n   * Enables the control. This means the control is included in validation checks and\n   * the aggregate value of its parent. Its status recalculates based on its value and\n   * its validators.\n   *\n   * By default, if the control has children, all children are enabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configure options that control how the control propagates changes and\n   * emits events when marked as untouched\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`,\n   * `valueChanges` and `events`\n   * observables emit events with the latest status and value when the control is enabled.\n   * When false, no events are emitted.\n   */\n  enable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = VALID;\n    this._forEachChild(control => {\n      control.enable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    }, this);\n    this._onDisabledChange.forEach(changeFn => changeFn(false));\n  }\n  _updateAncestors(opts, sourceControl) {\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n      if (!opts.skipPristineCheck) {\n        this._parent._updatePristine({}, sourceControl);\n      }\n      this._parent._updateTouched({}, sourceControl);\n    }\n  }\n  /**\n   * Sets the parent of the control\n   *\n   * @param parent The new parent.\n   */\n  setParent(parent) {\n    this._parent = parent;\n  }\n  /**\n   * The raw value of this control. For most control implementations, the raw value will include\n   * disabled children.\n   */\n  getRawValue() {\n    return this.value;\n  }\n  updateValueAndValidity(opts = {}) {\n    this._setInitialStatus();\n    this._updateValue();\n    if (this.enabled) {\n      const shouldHaveEmitted = this._cancelExistingSubscription();\n      this.errors = this._runValidator();\n      this.status = this._calculateStatus();\n      if (this.status === VALID || this.status === PENDING) {\n        // If the canceled subscription should have emitted\n        // we make sure the async validator emits the status change on completion\n        this._runAsyncValidator(shouldHaveEmitted, opts.emitEvent);\n      }\n    }\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new ValueChangeEvent(this.value, sourceControl));\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity({\n        ...opts,\n        sourceControl\n      });\n    }\n  }\n  /** @internal */\n  _updateTreeValidity(opts = {\n    emitEvent: true\n  }) {\n    this._forEachChild(ctrl => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n  }\n  _setInitialStatus() {\n    this.status = this._allControlsDisabled() ? DISABLED : VALID;\n  }\n  _runValidator() {\n    return this.validator ? this.validator(this) : null;\n  }\n  _runAsyncValidator(shouldHaveEmitted, emitEvent) {\n    if (this.asyncValidator) {\n      this.status = PENDING;\n      this._hasOwnPendingAsyncValidator = {\n        emitEvent: emitEvent !== false\n      };\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe(errors => {\n        this._hasOwnPendingAsyncValidator = null;\n        // This will trigger the recalculation of the validation status, which depends on\n        // the state of the asynchronous validation (whether it is in progress or not). So, it is\n        // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n        this.setErrors(errors, {\n          emitEvent,\n          shouldHaveEmitted\n        });\n      });\n    }\n  }\n  _cancelExistingSubscription() {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n      // we're cancelling the validator subscribtion, we keep if it should have emitted\n      // because we want to emit eventually if it was required at least once.\n      const shouldHaveEmitted = this._hasOwnPendingAsyncValidator?.emitEvent ?? false;\n      this._hasOwnPendingAsyncValidator = null;\n      return shouldHaveEmitted;\n    }\n    return false;\n  }\n  setErrors(errors, opts = {}) {\n    this.errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false, this, opts.shouldHaveEmitted);\n  }\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * @param path A dot-delimited string or array of string/number values that define the path to the\n   * control. If a string is provided, passing it as a string literal will result in improved type\n   * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n   * information to be available.\n   *\n   * @usageNotes\n   * ### Retrieve a nested control\n   *\n   * For example, to get a `name` control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n   *\n   * ### Retrieve a control in a FormArray\n   *\n   * When accessing an element inside a FormArray, you can use an element index.\n   * For example, to get a `price` control from the first element in an `items` array you can use:\n   *\n   * * `this.form.get('items.0.price');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['items', 0, 'price']);`\n   */\n  get(path) {\n    let currPath = path;\n    if (currPath == null) return null;\n    if (!Array.isArray(currPath)) currPath = currPath.split('.');\n    if (currPath.length === 0) return null;\n    return currPath.reduce((control, name) => control && control._find(name), this);\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return !!this.getError(errorCode, path);\n  }\n  /**\n   * Retrieves the top-level ancestor of this control.\n   */\n  get root() {\n    let x = this;\n    while (x._parent) {\n      x = x._parent;\n    }\n    return x;\n  }\n  /** @internal */\n  _updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted) {\n    this.status = this._calculateStatus();\n    if (emitEvent) {\n      this.statusChanges.emit(this.status);\n    }\n    // The Events Observable expose a slight different bevahior than the statusChanges obs\n    // An async validator will still emit a StatusChangeEvent is a previously cancelled\n    // async validator has emitEvent set to true\n    if (emitEvent || shouldHaveEmitted) {\n      this._events.next(new StatusChangeEvent(this.status, changedControl));\n    }\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted);\n    }\n  }\n  /** @internal */\n  _initObservables() {\n    this.valueChanges = new EventEmitter();\n    this.statusChanges = new EventEmitter();\n  }\n  _calculateStatus() {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n  /** @internal */\n  _anyControlsHaveStatus(status) {\n    return this._anyControls(control => control.status === status);\n  }\n  /** @internal */\n  _anyControlsDirty() {\n    return this._anyControls(control => control.dirty);\n  }\n  /** @internal */\n  _anyControlsTouched() {\n    return this._anyControls(control => control.touched);\n  }\n  /** @internal */\n  _updatePristine(opts, changedControl) {\n    const newPristine = !this._anyControlsDirty();\n    const changed = this.pristine !== newPristine;\n    this.pristine = newPristine;\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts, changedControl);\n    }\n    if (changed) {\n      this._events.next(new PristineChangeEvent(this.pristine, changedControl));\n    }\n  }\n  /** @internal */\n  _updateTouched(opts = {}, changedControl) {\n    this.touched = this._anyControlsTouched();\n    this._events.next(new TouchedChangeEvent(this.touched, changedControl));\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts, changedControl);\n    }\n  }\n  /** @internal */\n  _onDisabledChange = [];\n  /** @internal */\n  _registerOnCollectionChange(fn) {\n    this._onCollectionChange = fn;\n  }\n  /** @internal */\n  _setUpdateStrategy(opts) {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn;\n    }\n  }\n  /**\n   * Check to see if parent has been marked artificially dirty.\n   *\n   * @internal\n   */\n  _parentMarkedDirty(onlySelf) {\n    const parentDirty = this._parent && this._parent.dirty;\n    return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n  }\n  /** @internal */\n  _find(name) {\n    return null;\n  }\n  /**\n   * Internal implementation of the `setValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignValidators(validators) {\n    this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedValidatorFn = coerceToValidator(this._rawValidators);\n  }\n  /**\n   * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignAsyncValidators(validators) {\n    this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n  }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```ts\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```ts\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n  /**\n   * Creates a new `FormGroup` instance.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n      // so we set `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  controls;\n  registerControl(name, control) {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n  addControl(name, control, options = {}) {\n    this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Remove a control from this group. In a strongly-typed group, required controls cannot be\n   * removed.\n   *\n   * This method also updates the value and validity of the control.\n   *\n   * @param name The control name to remove from the collection\n   * @param options Specifies whether this FormGroup instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeControl(name, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  setControl(name, control, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  contains(controlName) {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n  /**\n   * Sets the value of the `FormGroup`. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * @usageNotes\n   * ### Set the complete value for the form group\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl(),\n   *   last: new FormControl()\n   * });\n   *\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.setValue({first: 'Nancy', last: 'Drew'});\n   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n   * ```\n   *\n   * @throws When strict checks fail, such as setting the value of a control\n   * that doesn't exist or if you exclude a value of a control that does exist.\n   *\n   * @param value The new value for the control that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, true, value);\n    Object.keys(value).forEach(name => {\n      assertControlPresent(this, true, name);\n      this.controls[name].setValue(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormGroup`. It accepts an object with control\n   * names as keys, and does its best to match the values to the correct controls\n   * in the group.\n   *\n   * It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the value for a form group\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *    first: new FormControl(),\n   *    last: new FormControl()\n   * });\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.patchValue({first: 'Nancy'});\n   * console.log(form.value);   // {first: 'Nancy', last: null}\n   * ```\n   *\n   * @param value The object that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes and\n   * emits events after the value is patched.\n   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n   * true.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control value\n   * is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values, so\n    // we just ignore such cases when a field containing FormGroup instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    Object.keys(value).forEach(name => {\n      // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n      // `as any` is required.\n      const control = this.controls[name];\n      if (control) {\n        control.patchValue(/* Guaranteed to be present, due to the outer forEach. */value[name], {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n   * the value of all descendants to their default values, or null if no defaults were provided.\n   *\n   * You reset to a specific form state by passing in a map of states\n   * that matches the structure of your form, with control names as keys. The state\n   * is a standalone value or a form state object with both a value and a disabled\n   * status.\n   *\n   * @param value Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the group is reset.\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * @usageNotes\n   *\n   * ### Reset the form group values\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * console.log(form.value);  // {first: 'first name', last: 'last name'}\n   *\n   * form.reset({ first: 'name', last: 'last name' });\n   *\n   * console.log(form.value);  // {first: 'name', last: 'last name'}\n   * ```\n   *\n   * ### Reset the form group values and disabled status\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * form.reset({\n   *   first: {value: 'name', disabled: true},\n   *   last: 'last'\n   * });\n   *\n   * console.log(form.value);  // {last: 'last'}\n   * console.log(form.get('first').status);  // 'DISABLED'\n   * ```\n   */\n  reset(value = {}, options = {}) {\n    this._forEachChild((control, name) => {\n      control.reset(value ? value[name] : null, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options, this);\n    this._updateTouched(options, this);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the `FormGroup`, including any disabled controls.\n   *\n   * Retrieves all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      acc[name] = control.getRawValue();\n      return acc;\n    });\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    Object.keys(this.controls).forEach(key => {\n      // The list of controls can change (for ex. controls might be removed) while the loop\n      // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n      // have to null check before invoking the callback.\n      const control = this.controls[key];\n      control && cb(control, key);\n    });\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this._reduceValue();\n  }\n  /** @internal */\n  _anyControls(condition) {\n    for (const [controlName, control] of Object.entries(this.controls)) {\n      if (this.contains(controlName) && condition(control)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** @internal */\n  _reduceValue() {\n    let acc = {};\n    return this._reduceChildren(acc, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.value;\n      }\n      return acc;\n    });\n  }\n  /** @internal */\n  _reduceChildren(initValue, fn) {\n    let res = initValue;\n    this._forEachChild((control, name) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n  /** @internal */\n  _find(name) {\n    return this.controls.hasOwnProperty(name) ? this.controls[name] : null;\n  }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n  const invalidKeys = Object.keys(controls).filter(key => key.includes('.'));\n  if (invalidKeys.length > 0) {\n    // TODO: make this an error once there are no more uses in G3\n    console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n  }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = control => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```ts\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = control => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'CallSetDisabledState' : '', {\n  providedIn: 'root',\n  factory: () => setDisabledStateDefault\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n  return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!control) _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor) _throwMissingValueAccessorError(dir);\n  }\n  setUpValidators(control, dir);\n  dir.valueAccessor.writeValue(control.value);\n  // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n  // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n  // the method is always called.\n  if (control.disabled || callSetDisabledState === 'always') {\n    dir.valueAccessor.setDisabledState?.(control.disabled);\n  }\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n  setUpBlurPipeline(control, dir);\n  setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n  const noop = () => {\n    if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      _noControlError(dir);\n    }\n  };\n  // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n  // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n  // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n  // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n  // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n  if (dir.valueAccessor) {\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n  }\n  cleanUpValidators(control, dir);\n  if (control) {\n    dir._invokeOnDestroyCallbacks();\n    control._registerOnCollectionChange(() => {});\n  }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n  validators.forEach(validator => {\n    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(onChange);\n  });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n  if (dir.valueAccessor.setDisabledState) {\n    const onDisabledChange = isDisabled => {\n      dir.valueAccessor.setDisabledState(isDisabled);\n    };\n    control.registerOnDisabledChange(onDisabledChange);\n    // Register a callback function to cleanup disabled change handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n      control._unregisterOnDisabledChange(onDisabledChange);\n    });\n  }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n  const validators = getControlValidators(control);\n  if (dir.validator !== null) {\n    control.setValidators(mergeValidators(validators, dir.validator));\n  } else if (typeof validators === 'function') {\n    // If sync validators are represented by a single validator function, we force the\n    // `Validators.compose` call to happen by executing the `setValidators` function with\n    // an array that contains that function. We need this to avoid possible discrepancies in\n    // validators behavior, so sync validators are always processed by the `Validators.compose`.\n    // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n    // have consistent behavior on AbstractControl API level. The same applies to the async\n    // validators logic below.\n    control.setValidators([validators]);\n  }\n  const asyncValidators = getControlAsyncValidators(control);\n  if (dir.asyncValidator !== null) {\n    control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n  } else if (typeof asyncValidators === 'function') {\n    control.setAsyncValidators([asyncValidators]);\n  }\n  // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  const onValidatorChange = () => control.updateValueAndValidity();\n  registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n  registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n  let isControlUpdated = false;\n  if (control !== null) {\n    if (dir.validator !== null) {\n      const validators = getControlValidators(control);\n      if (Array.isArray(validators) && validators.length > 0) {\n        // Filter out directive validator function.\n        const updatedValidators = validators.filter(validator => validator !== dir.validator);\n        if (updatedValidators.length !== validators.length) {\n          isControlUpdated = true;\n          control.setValidators(updatedValidators);\n        }\n      }\n    }\n    if (dir.asyncValidator !== null) {\n      const asyncValidators = getControlAsyncValidators(control);\n      if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n        // Filter out directive async validator function.\n        const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n        if (updatedAsyncValidators.length !== asyncValidators.length) {\n          isControlUpdated = true;\n          control.setAsyncValidators(updatedAsyncValidators);\n        }\n      }\n    }\n  }\n  // Clear onValidatorChange callbacks by providing a noop function.\n  const noop = () => {};\n  registerOnValidatorChange(dir._rawValidators, noop);\n  registerOnValidatorChange(dir._rawAsyncValidators, noop);\n  return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n  dir.valueAccessor.registerOnChange(newValue => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\nfunction setUpBlurPipeline(control, dir) {\n  dir.valueAccessor.registerOnTouched(() => {\n    control._pendingTouched = true;\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\nfunction updateControl(control, dir) {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {\n    emitModelToViewChange: false\n  });\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n  const onChange = (newValue, emitModelEvent) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  };\n  control.registerOnChange(onChange);\n  // Register a callback function to cleanup onChange handler\n  // from a control instance when a directive is destroyed.\n  dir._registerOnDestroy(() => {\n    control._unregisterOnChange(onChange);\n  });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Cannot find control with');\n  setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n  return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n  const messageEnd = _describeControlLocation(dir);\n  throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n  const path = dir.path;\n  if (path && path.length > 1) return `path: '${path.join(' -> ')}'`;\n  if (path?.[0]) return `name: '${path}'`;\n  return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ɵRuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ɵRuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` + `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n  if (change.isFirstChange()) return true;\n  return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n  // Check if a given value accessor is an instance of a class that directly extends\n  // `BuiltInControlValueAccessor` one.\n  return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n  if (!valueAccessors) return null;\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwInvalidValueAccessorError(dir);\n  let defaultAccessor = undefined;\n  let builtinAccessor = undefined;\n  let customAccessor = undefined;\n  valueAccessors.forEach(v => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n    } else {\n      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    _throwError(dir, 'No valid value accessor for form control with');\n  }\n  return null;\n}\nfunction removeListItem$1(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n  if (warningConfig === 'never') return;\n  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {\n    console.warn(ngModelWarning(name));\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\nconst formDirectiveProvider$1 = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgForm = /*#__PURE__*/(() => {\n  class NgForm extends ControlContainer {\n    callSetDisabledState;\n    /**\n     * @description\n     * Returns whether the form submission has been triggered.\n     */\n    get submitted() {\n      return untracked(this.submittedReactive);\n    }\n    /** @internal */\n    _submitted = computed(() => this.submittedReactive());\n    submittedReactive = signal(false);\n    _directives = new Set();\n    /**\n     * @description\n     * The `FormGroup` instance created for this form.\n     */\n    form;\n    /**\n     * @description\n     * Event emitter for the \"ngSubmit\" event\n     */\n    ngSubmit = new EventEmitter();\n    /**\n     * @description\n     * Tracks options for the `NgForm` instance.\n     *\n     * **updateOn**: Sets the default `updateOn` value for all child `NgModels` below it\n     * unless explicitly set by a child `NgModel` using `ngModelOptions`). Defaults to 'change'.\n     * Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     */\n    // TODO(issue/24571): remove '!'.\n    options;\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n      this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n      return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        dir.control = container.registerControl(dir.name, dir.control);\n        setUpControl(dir.control, dir, this.callSetDisabledState);\n        dir.control.updateValueAndValidity({\n          emitEvent: false\n        });\n        this._directives.add(dir);\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n        this._directives.delete(dir);\n      });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        const group = new FormGroup({});\n        setUpFormContainer(group, dir);\n        container.registerControl(dir.name, group);\n        group.updateValueAndValidity({\n          emitEvent: false\n        });\n      });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      resolvedPromise$1.then(() => {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n      });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n      this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this.submittedReactive.set(true);\n      syncPendingControls(this.form, this._directives);\n      this.ngSubmit.emit($event);\n      // Forms with `method=\"dialog\"` have some special behavior\n      // that won't reload the page and that shouldn't be prevented.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this.submittedReactive.set(false);\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.form._updateOn = this.options.updateOn;\n      }\n    }\n    _findContainer(path) {\n      path.pop();\n      return path.length ? this.form.get(path) : this.form;\n    }\n    static ɵfac = function NgForm_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgForm)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgForm,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]],\n      hostBindings: function NgForm_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function NgForm_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        options: [0, \"ngFormOptions\", \"options\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formDirectiveProvider$1]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgForm;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction removeListItem(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\nfunction isFormControlState(formState) {\n  return typeof formState === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = class FormControl extends AbstractControl {\n  /** @publicApi */\n  defaultValue = null;\n  /** @internal */\n  _onChange = [];\n  /** @internal */\n  _pendingValue;\n  /** @internal */\n  _pendingChange = false;\n  constructor(\n  // formState and defaultValue will only be null if T is nullable\n  formState = null, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this._initObservables();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set\n      // `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n    if (isOptionsObj(validatorOrOpts) && (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n      if (isFormControlState(formState)) {\n        this.defaultValue = formState.value;\n      } else {\n        this.defaultValue = formState;\n      }\n    }\n  }\n  setValue(value, options = {}) {\n    this.value = this._pendingValue = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(changeFn => changeFn(this.value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n  patchValue(value, options = {}) {\n    this.setValue(value, options);\n  }\n  reset(formState = this.defaultValue, options = {}) {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n  /**  @internal */\n  _updateValue() {}\n  /**  @internal */\n  _anyControls(condition) {\n    return false;\n  }\n  /**  @internal */\n  _allControlsDisabled() {\n    return this.disabled;\n  }\n  registerOnChange(fn) {\n    this._onChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnChange(fn) {\n    removeListItem(this._onChange, fn);\n  }\n  registerOnDisabledChange(fn) {\n    this._onDisabledChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnDisabledChange(fn) {\n    removeListItem(this._onDisabledChange, fn);\n  }\n  /** @internal */\n  _forEachChild(cb) {}\n  /** @internal */\n  _syncPendingControls() {\n    if (this.updateOn === 'submit') {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue, {\n          onlySelf: true,\n          emitModelToViewChange: false\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n  _applyFormState(formState) {\n    if (isFormControlState(formState)) {\n      this.value = this._pendingValue = formState.value;\n      formState.disabled ? this.disable({\n        onlySelf: true,\n        emitEvent: false\n      }) : this.enable({\n        onlySelf: true,\n        emitEvent: false\n      });\n    } else {\n      this.value = this._pendingValue = formState;\n    }\n  }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = control => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nlet AbstractFormGroupDirective = /*#__PURE__*/(() => {\n  class AbstractFormGroupDirective extends ControlContainer {\n    /**\n     * @description\n     * The parent control for the group\n     *\n     * @internal\n     */\n    // TODO(issue/24571): remove '!'.\n    _parent;\n    /** @nodoc */\n    ngOnInit() {\n      this._checkParentType();\n      // Register the group with its parent group.\n      this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        // Remove the group from its parent group.\n        this.formDirective.removeFormGroup(this);\n      }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() {}\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵAbstractFormGroupDirective_BaseFactory;\n      return function AbstractFormGroupDirective_Factory(__ngFactoryType__) {\n        return (ɵAbstractFormGroupDirective_BaseFactory || (ɵAbstractFormGroupDirective_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractFormGroupDirective)))(__ngFactoryType__ || AbstractFormGroupDirective);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AbstractFormGroupDirective,\n      standalone: false,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return AbstractFormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction modelParentException() {\n  return new ɵRuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n  return new ɵRuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n  return new ɵRuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n  return new ɵRuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nconst modelGroupProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModelGroup = /*#__PURE__*/(() => {\n  class NgModelGroup extends AbstractFormGroupDirective {\n    /**\n     * @description\n     * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n     * to a key in the parent `NgForm`.\n     */\n    name = '';\n    constructor(parent, validators, asyncValidators) {\n      super();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw modelGroupParentException();\n      }\n    }\n    static ɵfac = function NgModelGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgModelGroup)(i0.ɵɵdirectiveInject(ControlContainer, 5), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgModelGroup,\n      selectors: [[\"\", \"ngModelGroup\", \"\"]],\n      inputs: {\n        name: [0, \"ngModelGroup\", \"name\"]\n      },\n      exportAs: [\"ngModelGroup\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([modelGroupProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgModelGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlBinding$1 = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```html\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModel = /*#__PURE__*/(() => {\n  class NgModel extends NgControl {\n    _changeDetectorRef;\n    callSetDisabledState;\n    control = new FormControl();\n    // At runtime we coerce arbitrary values assigned to the \"disabled\" input to a \"boolean\".\n    // This is not reflected in the type of the property because outside of templates, consumers\n    // should only deal with booleans. In templates, a string is allowed for convenience and to\n    // match the native \"disabled attribute\" semantics which can be observed on input elements.\n    // This static member tells the compiler that values of type \"string\" can also be assigned\n    // to the input in a template.\n    /** @nodoc */\n    static ngAcceptInputType_isDisabled;\n    /** @internal */\n    _registered = false;\n    /**\n     * Internal reference to the view model value.\n     * @nodoc\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the name bound to the directive. If a parent form exists, it\n     * uses this name as a key to retrieve this control's value.\n     */\n    name = '';\n    /**\n     * @description\n     * Tracks whether the control is disabled.\n     */\n    // TODO(issue/24571): remove '!'.\n    isDisabled;\n    /**\n     * @description\n     * Tracks the value bound to this directive.\n     */\n    model;\n    /**\n     * @description\n     * Tracks the configuration options for this `ngModel` instance.\n     *\n     * **name**: An alternative to setting the name attribute on the form control element. See\n     * the [example](api/forms/NgModel#using-ngmodel-on-a-standalone-control) for using `NgModel`\n     * as a standalone control.\n     *\n     * **standalone**: When set to true, the `ngModel` will not register itself with its parent form,\n     * and acts as if it's not in the form. Defaults to false. If no parent form exists, this option\n     * has no effect.\n     *\n     * **updateOn**: Defines the event upon which the form control value and validity update.\n     * Defaults to 'change'. Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     */\n    // TODO(issue/24571): remove '!'.\n    options;\n    /**\n     * @description\n     * Event emitter for producing the `ngModelChange` event after\n     * the view model updates.\n     */\n    update = new EventEmitter();\n    constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n      super();\n      this._changeDetectorRef = _changeDetectorRef;\n      this.callSetDisabledState = callSetDisabledState;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this._checkForErrors();\n      if (!this._registered || 'name' in changes) {\n        if (this._registered) {\n          this._checkName();\n          if (this.formDirective) {\n            // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n            // changed. We also can't reset the name temporarily since the logic in `removeControl`\n            // is inside a promise and it won't run immediately. We work around it by giving it an\n            // object with the same shape instead.\n            const oldName = changes['name'].previousValue;\n            this.formDirective.removeControl({\n              name: oldName,\n              path: this._getPath(oldName)\n            });\n          }\n        }\n        this._setUpControl();\n      }\n      if ('isDisabled' in changes) {\n        this._updateDisabled(changes);\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        this._updateValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return this._getPath(this.name);\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _setUpControl() {\n      this._setUpdateStrategy();\n      this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n      this._registered = true;\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.control._updateOn = this.options.updateOn;\n      }\n    }\n    _isStandalone() {\n      return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n      setUpControl(this.control, this, this.callSetDisabledState);\n      this.control.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _checkForErrors() {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._isStandalone()) {\n        this._checkParentType();\n      }\n      this._checkName();\n    }\n    _checkParentType() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!(this._parent instanceof NgModelGroup) && this._parent instanceof AbstractFormGroupDirective) {\n          throw formGroupNameException();\n        } else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n          throw modelParentException();\n        }\n      }\n    }\n    _checkName() {\n      if (this.options && this.options.name) this.name = this.options.name;\n      if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw missingNameException();\n      }\n    }\n    _updateValue(value) {\n      resolvedPromise.then(() => {\n        this.control.setValue(value, {\n          emitViewToModelChange: false\n        });\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _updateDisabled(changes) {\n      const disabledValue = changes['isDisabled'].currentValue;\n      // checking for 0 to avoid breaking change\n      const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n      resolvedPromise.then(() => {\n        if (isDisabled && !this.control.disabled) {\n          this.control.disable();\n        } else if (!isDisabled && this.control.disabled) {\n          this.control.enable();\n        }\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _getPath(controlName) {\n      return this._parent ? controlPath(controlName, this._parent) : [controlName];\n    }\n    static ɵfac = function NgModel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgModel)(i0.ɵɵdirectiveInject(ControlContainer, 9), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgModel,\n      selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]],\n      inputs: {\n        name: \"name\",\n        isDisabled: [0, \"disabled\", \"isDisabled\"],\n        model: [0, \"ngModel\", \"model\"],\n        options: [0, \"ngModelOptions\", \"options\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngModel\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formControlBinding$1]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```html\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nlet ɵNgNoValidate = /*#__PURE__*/(() => {\n  class ɵNgNoValidate {\n    static ɵfac = function ɵNgNoValidate_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ɵNgNoValidate)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ɵNgNoValidate,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]],\n      hostAttrs: [\"novalidate\", \"\"],\n      standalone: false\n    });\n  }\n  return ɵNgNoValidate;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NumberValueAccessor = /*#__PURE__*/(() => {\n  class NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵNumberValueAccessor_BaseFactory;\n      return function NumberValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵNumberValueAccessor_BaseFactory || (ɵNumberValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(NumberValueAccessor)))(__ngFactoryType__ || NumberValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NumberValueAccessor,\n      selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]],\n      hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NumberValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\nfunction throwNameError() {\n  throw new ɵRuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nlet RadioControlRegistry = /*#__PURE__*/(() => {\n  class RadioControlRegistry {\n    _accessors = [];\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n      this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n      for (let i = this._accessors.length - 1; i >= 0; --i) {\n        if (this._accessors[i][1] === accessor) {\n          this._accessors.splice(i, 1);\n          return;\n        }\n      }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n      this._accessors.forEach(c => {\n        if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n          c[1].fireUncheck(accessor.value);\n        }\n      });\n    }\n    _isSameGroup(controlPair, accessor) {\n      if (!controlPair[0].control) return false;\n      return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;\n    }\n    static ɵfac = function RadioControlRegistry_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RadioControlRegistry)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RadioControlRegistry,\n      factory: RadioControlRegistry.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return RadioControlRegistry;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RadioControlValueAccessor = /*#__PURE__*/(() => {\n  class RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    _registry;\n    _injector;\n    /** @internal */\n    // TODO(issue/24571): remove '!'.\n    _state;\n    /** @internal */\n    // TODO(issue/24571): remove '!'.\n    _control;\n    /** @internal */\n    // TODO(issue/24571): remove '!'.\n    _fn;\n    setDisabledStateFired = false;\n    /**\n     * The registered callback function called when a change event occurs on the input element.\n     * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n     * to override the `onChange` function (which expects 1 argument) in the parent\n     * `BaseControlValueAccessor` class.\n     * @nodoc\n     */\n    onChange = () => {};\n    /**\n     * @description\n     * Tracks the name of the radio input element.\n     */\n    // TODO(issue/24571): remove '!'.\n    name;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     */\n    // TODO(issue/24571): remove '!'.\n    formControlName;\n    /**\n     * @description\n     * Tracks the value of the radio input element\n     */\n    value;\n    callSetDisabledState = inject(CALL_SET_DISABLED_STATE, {\n      optional: true\n    }) ?? setDisabledStateDefault;\n    constructor(renderer, elementRef, _registry, _injector) {\n      super(renderer, elementRef);\n      this._registry = _registry;\n      this._injector = _injector;\n    }\n    /** @nodoc */\n    ngOnInit() {\n      this._control = this._injector.get(NgControl);\n      this._checkName();\n      this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this._state = value === this.value;\n      this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this._fn = fn;\n      this.onChange = () => {\n        fn(this.value);\n        this._registry.select(this);\n      };\n    }\n    /** @nodoc */\n    setDisabledState(isDisabled) {\n      /**\n       * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n       * including upon control creation. However, a longstanding bug caused the method to not fire\n       * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n       *\n       * This had a side effect: previously, it was possible to instantiate a reactive form control\n       * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n       * model. This resulted in a mismatch between the model and the DOM. Now, because\n       * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n       * with the \"correct\" enabled value.\n       *\n       * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n       * models the entire group of radio buttons as a single `FormControl`, there is no way to\n       * control the disabled state for individual radios, so they can no longer be configured as\n       * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n       * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n       * is `false`, and we are not in legacy mode.\n       */\n      if (this.setDisabledStateFired || isDisabled || this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n        this.setProperty('disabled', isDisabled);\n      }\n      this.setDisabledStateFired = true;\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n      this.writeValue(value);\n    }\n    _checkName() {\n      if (this.name && this.formControlName && this.name !== this.formControlName && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwNameError();\n      }\n      if (!this.name && this.formControlName) this.name = this.formControlName;\n    }\n    static ɵfac = function RadioControlValueAccessor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RadioControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(RadioControlRegistry), i0.ɵɵdirectiveInject(i0.Injector));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RadioControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]],\n      hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() {\n            return ctx.onChange();\n          })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        name: \"name\",\n        formControlName: \"formControlName\",\n        value: \"value\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return RadioControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RANGE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RangeValueAccessor = /*#__PURE__*/(() => {\n  class RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵRangeValueAccessor_BaseFactory;\n      return function RangeValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵRangeValueAccessor_BaseFactory || (ɵRangeValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(RangeValueAccessor)))(__ngFactoryType__ || RangeValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RangeValueAccessor,\n      selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]],\n      hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return RangeValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlDirective = /*#__PURE__*/(() => {\n  class FormControlDirective extends NgControl {\n    _ngModelWarningConfig;\n    callSetDisabledState;\n    /**\n     * Internal reference to the view model value.\n     * @nodoc\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the `FormControl` instance bound to the directive.\n     */\n    // TODO(issue/24571): remove '!'.\n    form;\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    // TODO(kara): remove next 4 properties once deprecation period is over\n    /** @deprecated as of v6 */\n    model;\n    /** @deprecated as of v6 */\n    update = new EventEmitter();\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static _ngModelWarningSentOnce = false;\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    _ngModelWarningSent = false;\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this.callSetDisabledState = callSetDisabledState;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this._isControlChanged(changes)) {\n        const previousForm = changes['form'].previousValue;\n        if (previousForm) {\n          cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */false);\n        }\n        setUpControl(this.form, this, this.callSetDisabledState);\n        this.form.updateValueAndValidity({\n          emitEvent: false\n        });\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n        }\n        this.form.setValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpControl(this.form, this, /* validateControlPresenceOnChange */false);\n      }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n      return changes.hasOwnProperty('form');\n    }\n    static ɵfac = function FormControlDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormControlDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormControlDirective,\n      selectors: [[\"\", \"formControl\", \"\"]],\n      inputs: {\n        form: [0, \"formControl\", \"form\"],\n        isDisabled: [0, \"disabled\", \"isDisabled\"],\n        model: [0, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngForm\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formControlBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return FormControlDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formDirectiveProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupDirective = /*#__PURE__*/(() => {\n  class FormGroupDirective extends ControlContainer {\n    callSetDisabledState;\n    /**\n     * @description\n     * Reports whether the form submission has been triggered.\n     */\n    get submitted() {\n      return untracked(this._submittedReactive);\n    }\n    // TODO(atscott): Remove once invalid API usage is cleaned up internally\n    set submitted(value) {\n      this._submittedReactive.set(value);\n    }\n    /** @internal */\n    _submitted = computed(() => this._submittedReactive());\n    _submittedReactive = signal(false);\n    /**\n     * Reference to an old form group input value, which is needed to cleanup\n     * old instance in case it was replaced with a new one.\n     */\n    _oldForm;\n    /**\n     * Callback that should be invoked when controls in FormGroup or FormArray collection change\n     * (added or removed). This callback triggers corresponding DOM updates.\n     */\n    _onCollectionChange = () => this._updateDomValue();\n    /**\n     * @description\n     * Tracks the list of added `FormControlName` instances\n     */\n    directives = [];\n    /**\n     * @description\n     * Tracks the `FormGroup` bound to this directive.\n     */\n    form = null;\n    /**\n     * @description\n     * Emits an event when the form submission has been triggered.\n     */\n    ngSubmit = new EventEmitter();\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this.form) {\n        throw missingFormException();\n      }\n      if (changes.hasOwnProperty('form')) {\n        this._updateValidators();\n        this._updateDomValue();\n        this._updateRegistrations();\n        this._oldForm = this.form;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpValidators(this.form, this);\n        // Currently the `onCollectionChange` callback is rewritten each time the\n        // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n        // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n        // Otherwise it might cause overriding a callback of some other directive instances. We should\n        // consider updating this logic later to make it similar to how `onChange` callbacks are\n        // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n        if (this.form._onCollectionChange === this._onCollectionChange) {\n          this.form._registerOnCollectionChange(() => {});\n        }\n      }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpControl(ctrl, dir, this.callSetDisabledState);\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n      this.directives.push(dir);\n      return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n      cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */false);\n      removeListItem$1(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      const ctrl = this.form.get(dir.path);\n      ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this._submittedReactive.set(true);\n      syncPendingControls(this.form, this.directives);\n      this.ngSubmit.emit($event);\n      this.form._events.next(new FormSubmittedEvent(this.control));\n      // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n      // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n      // some internal apps call this method directly with the wrong arguments.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this._submittedReactive.set(false);\n      this.form._events.next(new FormResetEvent(this.form));\n    }\n    /** @internal */\n    _updateDomValue() {\n      this.directives.forEach(dir => {\n        const oldCtrl = dir.control;\n        const newCtrl = this.form.get(dir.path);\n        if (oldCtrl !== newCtrl) {\n          // Note: the value of the `dir.control` may not be defined, for example when it's a first\n          // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n          cleanUpControl(oldCtrl || null, dir);\n          // Check whether new control at the same location inside the corresponding `FormGroup` is an\n          // instance of `FormControl` and perform control setup only if that's the case.\n          // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n          // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n          // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n          if (isFormControl(newCtrl)) {\n            setUpControl(newCtrl, dir, this.callSetDisabledState);\n            dir.control = newCtrl;\n          }\n        }\n      });\n      this.form._updateTreeValidity({\n        emitEvent: false\n      });\n    }\n    _setUpFormContainer(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpFormContainer(ctrl, dir);\n      // NOTE: this operation looks unnecessary in case no new validators were added in\n      // `setUpFormContainer` call. Consider updating this code to match the logic in\n      // `_cleanUpFormContainer` function.\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _cleanUpFormContainer(dir) {\n      if (this.form) {\n        const ctrl = this.form.get(dir.path);\n        if (ctrl) {\n          const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n          if (isControlUpdated) {\n            // Run validity check only in case a control was updated (i.e. view validators were\n            // removed) as removing view validators might cause validity to change.\n            ctrl.updateValueAndValidity({\n              emitEvent: false\n            });\n          }\n        }\n      }\n    }\n    _updateRegistrations() {\n      this.form._registerOnCollectionChange(this._onCollectionChange);\n      if (this._oldForm) {\n        this._oldForm._registerOnCollectionChange(() => {});\n      }\n    }\n    _updateValidators() {\n      setUpValidators(this.form, this);\n      if (this._oldForm) {\n        cleanUpValidators(this._oldForm, this);\n      }\n    }\n    static ɵfac = function FormGroupDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormGroupDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormGroupDirective,\n      selectors: [[\"\", \"formGroup\", \"\"]],\n      hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        form: [0, \"formGroup\", \"form\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formDirectiveProvider]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return FormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formGroupNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupName = /*#__PURE__*/(() => {\n  class FormGroupName extends AbstractFormGroupDirective {\n    /**\n     * @description\n     * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form groups to be bound\n     * to indices when iterating over groups in a `FormArray`.\n     */\n    name = null;\n    constructor(parent, validators, asyncValidators) {\n      super();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw groupParentException();\n      }\n    }\n    static ɵfac = function FormGroupName_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormGroupName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormGroupName,\n      selectors: [[\"\", \"formGroupName\", \"\"]],\n      inputs: {\n        name: [0, \"formGroupName\", \"name\"]\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formGroupNameProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return FormGroupName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formArrayNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormArrayName = /*#__PURE__*/(() => {\n  class FormArrayName extends ControlContainer {\n    /** @internal */\n    _parent;\n    /**\n     * @description\n     * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form arrays to be bound\n     * to indices when iterating over arrays in a `FormArray`.\n     */\n    name = null;\n    constructor(parent, validators, asyncValidators) {\n      super();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        this._checkParentType();\n      }\n      this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        this.formDirective.removeFormArray(this);\n      }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    _checkParentType() {\n      if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw arrayParentException();\n      }\n    }\n    static ɵfac = function FormArrayName_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormArrayName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormArrayName,\n      selectors: [[\"\", \"formArrayName\", \"\"]],\n      inputs: {\n        name: [0, \"formArrayName\", \"name\"]\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formArrayNameProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return FormArrayName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction _hasInvalidParent(parent) {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);\n}\nconst controlNameBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlName = /*#__PURE__*/(() => {\n  class FormControlName extends NgControl {\n    _ngModelWarningConfig;\n    _added = false;\n    /**\n     * Internal reference to the view model value.\n     * @internal\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the `FormControl` instance bound to the directive.\n     */\n    // TODO(issue/24571): remove '!'.\n    control;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form controls to be bound\n     * to indices when iterating over controls in a `FormArray`.\n     */\n    name = null;\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    // TODO(kara): remove next 4 properties once deprecation period is over\n    /** @deprecated as of v6 */\n    model;\n    /** @deprecated as of v6 */\n    update = new EventEmitter();\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static _ngModelWarningSentOnce = false;\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular FormControlName instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    _ngModelWarningSent = false;\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (!this._added) this._setUpControl();\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n        }\n        this.viewModel = this.model;\n        this.formDirective.updateModel(this, this.model);\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        this.formDirective.removeControl(this);\n      }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    _checkParentType() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!(this._parent instanceof FormGroupName) && this._parent instanceof AbstractFormGroupDirective) {\n          throw ngModelGroupException();\n        } else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) && !(this._parent instanceof FormArrayName)) {\n          throw controlParentException(this.name);\n        }\n      }\n    }\n    _setUpControl() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        this._checkParentType();\n      }\n      this.control = this.formDirective.addControl(this);\n      this._added = true;\n    }\n    static ɵfac = function FormControlName_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormControlName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormControlName,\n      selectors: [[\"\", \"formControlName\", \"\"]],\n      inputs: {\n        name: [0, \"formControlName\", \"name\"],\n        isDisabled: [0, \"disabled\", \"isDisabled\"],\n        model: [0, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([controlNameBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return FormControlName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString$1(id, value) {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```html\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    /** @nodoc */\n    value;\n    /** @internal */\n    _optionMap = new Map();\n    /** @internal */\n    _idCounter = 0;\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    _compareWith = Object.is;\n    /**\n     * Sets the \"value\" property on the select element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      const id = this._getOptionId(value);\n      const valueString = _buildValueString$1(id, value);\n      this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = valueString => {\n        this.value = this._getOptionValue(valueString);\n        fn(this.value);\n      };\n    }\n    /** @internal */\n    _registerOption() {\n      return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id), value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId$1(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵSelectControlValueAccessor_BaseFactory;\n      return function SelectControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵSelectControlValueAccessor_BaseFactory || (ɵSelectControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectControlValueAccessor)))(__ngFactoryType__ || SelectControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: SelectControlValueAccessor,\n      selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]],\n      hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return SelectControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgSelectOption = /*#__PURE__*/(() => {\n  class NgSelectOption {\n    _element;\n    _renderer;\n    _select;\n    /**\n     * @description\n     * ID of the option element\n     */\n    // TODO(issue/24571): remove '!'.\n    id;\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._select._optionMap.set(this.id, value);\n      this._setElementValue(_buildValueString$1(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      this._setElementValue(value);\n      if (this._select) this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static ɵfac = function NgSelectOption_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgSelectOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectControlValueAccessor, 9));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgSelectOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      },\n      standalone: false\n    });\n  }\n  return NgSelectOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString(id, value) {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n  return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {\n  // TODO(issue/24571): remove '!'.\n  length;\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```html\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectMultipleControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * The current value.\n     * @nodoc\n     */\n    value;\n    /** @internal */\n    _optionMap = new Map();\n    /** @internal */\n    _idCounter = 0;\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    _compareWith = Object.is;\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      let optionSelectedStateSetter;\n      if (Array.isArray(value)) {\n        // convert values to ids\n        const ids = value.map(v => this._getOptionId(v));\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(ids.indexOf(o.toString()) > -1);\n        };\n      } else {\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(false);\n        };\n      }\n      this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = element => {\n        const selected = [];\n        const selectedOptions = element.selectedOptions;\n        if (selectedOptions !== undefined) {\n          const options = selectedOptions;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            const val = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n        // Degrade to use `options` when `selectedOptions` property is not available.\n        // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n        // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n        else {\n          const options = element.options;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            if (opt.selected) {\n              const val = this._getOptionValue(opt.value);\n              selected.push(val);\n            }\n          }\n        }\n        this.value = selected;\n        fn(selected);\n      };\n    }\n    /** @internal */\n    _registerOption(value) {\n      const id = (this._idCounter++).toString();\n      this._optionMap.set(id, value);\n      return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵSelectMultipleControlValueAccessor_BaseFactory;\n      return function SelectMultipleControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵSelectMultipleControlValueAccessor_BaseFactory || (ɵSelectMultipleControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectMultipleControlValueAccessor)))(__ngFactoryType__ || SelectMultipleControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: SelectMultipleControlValueAccessor,\n      selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]],\n      hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target);\n          })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return SelectMultipleControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet ɵNgSelectMultipleOption = /*#__PURE__*/(() => {\n  class ɵNgSelectMultipleOption {\n    _element;\n    _renderer;\n    _select;\n    // TODO(issue/24571): remove '!'.\n    id;\n    /** @internal */\n    _value;\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) {\n        this.id = this._select._registerOption(this);\n      }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      if (this._select) {\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n      } else {\n        this._setElementValue(value);\n      }\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n      this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static ɵfac = function ɵNgSelectMultipleOption_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ɵNgSelectMultipleOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ɵNgSelectMultipleOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      },\n      standalone: false\n    });\n  }\n  return ɵNgSelectMultipleOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n  return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nlet AbstractValidatorDirective = /*#__PURE__*/(() => {\n  class AbstractValidatorDirective {\n    _validator = nullValidator;\n    _onChange;\n    /**\n     * A flag that tracks whether this validator is enabled.\n     *\n     * Marking it `internal` (vs `protected`), so that this flag can be used in host bindings of\n     * directive classes that extend this base class.\n     * @internal\n     */\n    _enabled;\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this.inputName in changes) {\n        const input = this.normalizeInput(changes[this.inputName].currentValue);\n        this._enabled = this.enabled(input);\n        this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n        if (this._onChange) {\n          this._onChange();\n        }\n      }\n    }\n    /** @nodoc */\n    validate(control) {\n      return this._validator(control);\n    }\n    /** @nodoc */\n    registerOnValidatorChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator should be active or not based on an input.\n     * Base class implementation checks whether an input is defined (if the value is different from\n     * `null` and `undefined`). Validator classes that extend this base class can override this\n     * function with the logic specific to a particular validator directive.\n     */\n    enabled(input) {\n      return input != null /* both `null` and `undefined` */;\n    }\n    static ɵfac = function AbstractValidatorDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AbstractValidatorDirective)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AbstractValidatorDirective,\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return AbstractValidatorDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxValidator = /*#__PURE__*/(() => {\n  class MaxValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the max bound to this directive.\n     */\n    max;\n    /** @internal */\n    inputName = 'max';\n    /** @internal */\n    normalizeInput = input => toFloat(input);\n    /** @internal */\n    createValidator = max => maxValidator(max);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMaxValidator_BaseFactory;\n      return function MaxValidator_Factory(__ngFactoryType__) {\n        return (ɵMaxValidator_BaseFactory || (ɵMaxValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxValidator)))(__ngFactoryType__ || MaxValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MaxValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"max\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"max\", ctx._enabled ? ctx.max : null);\n        }\n      },\n      inputs: {\n        max: \"max\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MAX_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MaxValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinValidator = /*#__PURE__*/(() => {\n  class MinValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the min bound to this directive.\n     */\n    min;\n    /** @internal */\n    inputName = 'min';\n    /** @internal */\n    normalizeInput = input => toFloat(input);\n    /** @internal */\n    createValidator = min => minValidator(min);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMinValidator_BaseFactory;\n      return function MinValidator_Factory(__ngFactoryType__) {\n        return (ɵMinValidator_BaseFactory || (ɵMinValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinValidator)))(__ngFactoryType__ || MinValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MinValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"min\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"min\", ctx._enabled ? ctx.min : null);\n        }\n      },\n      inputs: {\n        min: \"min\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MIN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MinValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => RequiredValidator),\n  multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```html\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet RequiredValidator = /*#__PURE__*/(() => {\n  class RequiredValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the required attribute bound to this directive.\n     */\n    required;\n    /** @internal */\n    inputName = 'required';\n    /** @internal */\n    normalizeInput = booleanAttribute;\n    /** @internal */\n    createValidator = input => requiredValidator;\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵRequiredValidator_BaseFactory;\n      return function RequiredValidator_Factory(__ngFactoryType__) {\n        return (ɵRequiredValidator_BaseFactory || (ɵRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(RequiredValidator)))(__ngFactoryType__ || RequiredValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RequiredValidator,\n      selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]],\n      hostVars: 1,\n      hostBindings: function RequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      inputs: {\n        required: \"required\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return RequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet CheckboxRequiredValidator = /*#__PURE__*/(() => {\n  class CheckboxRequiredValidator extends RequiredValidator {\n    /** @internal */\n    createValidator = input => requiredTrueValidator;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵCheckboxRequiredValidator_BaseFactory;\n      return function CheckboxRequiredValidator_Factory(__ngFactoryType__) {\n        return (ɵCheckboxRequiredValidator_BaseFactory || (ɵCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxRequiredValidator)))(__ngFactoryType__ || CheckboxRequiredValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CheckboxRequiredValidator,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CheckboxRequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```html\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet EmailValidator = /*#__PURE__*/(() => {\n  class EmailValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the email attribute bound to this directive.\n     */\n    email;\n    /** @internal */\n    inputName = 'email';\n    /** @internal */\n    normalizeInput = booleanAttribute;\n    /** @internal */\n    createValidator = input => emailValidator;\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵEmailValidator_BaseFactory;\n      return function EmailValidator_Factory(__ngFactoryType__) {\n        return (ɵEmailValidator_BaseFactory || (ɵEmailValidator_BaseFactory = i0.ɵɵgetInheritedFactory(EmailValidator)))(__ngFactoryType__ || EmailValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: EmailValidator,\n      selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]],\n      inputs: {\n        email: \"email\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([EMAIL_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return EmailValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinLengthValidator = /*#__PURE__*/(() => {\n  class MinLengthValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the minimum length bound to this directive.\n     */\n    minlength;\n    /** @internal */\n    inputName = 'minlength';\n    /** @internal */\n    normalizeInput = input => toInteger(input);\n    /** @internal */\n    createValidator = minlength => minLengthValidator(minlength);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMinLengthValidator_BaseFactory;\n      return function MinLengthValidator_Factory(__ngFactoryType__) {\n        return (ɵMinLengthValidator_BaseFactory || (ɵMinLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinLengthValidator)))(__ngFactoryType__ || MinLengthValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MinLengthValidator,\n      selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"minlength\", ctx._enabled ? ctx.minlength : null);\n        }\n      },\n      inputs: {\n        minlength: \"minlength\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MinLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxLengthValidator = /*#__PURE__*/(() => {\n  class MaxLengthValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the maximum length bound to this directive.\n     */\n    maxlength;\n    /** @internal */\n    inputName = 'maxlength';\n    /** @internal */\n    normalizeInput = input => toInteger(input);\n    /** @internal */\n    createValidator = maxlength => maxLengthValidator(maxlength);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMaxLengthValidator_BaseFactory;\n      return function MaxLengthValidator_Factory(__ngFactoryType__) {\n        return (ɵMaxLengthValidator_BaseFactory || (ɵMaxLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxLengthValidator)))(__ngFactoryType__ || MaxLengthValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MaxLengthValidator,\n      selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"maxlength\", ctx._enabled ? ctx.maxlength : null);\n        }\n      },\n      inputs: {\n        maxlength: \"maxlength\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MaxLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet PatternValidator = /*#__PURE__*/(() => {\n  class PatternValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the pattern bound to this directive.\n     */\n    pattern; // This input is always defined, since the name matches selector.\n    /** @internal */\n    inputName = 'pattern';\n    /** @internal */\n    normalizeInput = input => input;\n    /** @internal */\n    createValidator = input => patternValidator(input);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵPatternValidator_BaseFactory;\n      return function PatternValidator_Factory(__ngFactoryType__) {\n        return (ɵPatternValidator_BaseFactory || (ɵPatternValidator_BaseFactory = i0.ɵɵgetInheritedFactory(PatternValidator)))(__ngFactoryType__ || PatternValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: PatternValidator,\n      selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function PatternValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"pattern\", ctx._enabled ? ctx.pattern : null);\n        }\n      },\n      inputs: {\n        pattern: \"pattern\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return PatternValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SHARED_FORM_DIRECTIVES = [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nlet ɵInternalFormsSharedModule = /*#__PURE__*/(() => {\n  class ɵInternalFormsSharedModule {\n    static ɵfac = function ɵInternalFormsSharedModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ɵInternalFormsSharedModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ɵInternalFormsSharedModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return ɵInternalFormsSharedModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n  /**\n   * Creates a new `FormArray` instance.\n   *\n   * @param controls An array of child controls. Each child control is given an index\n   * where it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n      // to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  controls;\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n   *     around from the back, and if index is greatly negative (less than `-length`), the result is\n   * undefined. This behavior is the same as `Array.at(index)`.\n   */\n  at(index) {\n    return this.controls[this._adjustIndex(index)];\n  }\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   *\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is added.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  push(control, options = {}) {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to insert the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n   * This behavior is the same as `Array.splice(index, 0, control)`.\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is inserted.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  insert(index, control, options = {}) {\n    this.controls.splice(index, 0, control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Remove the control at the given `index` in the array.\n   *\n   * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n   *     element. This behavior is the same as `Array.splice(index, 1)`.\n   * @param options Specifies whether this FormArray instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeAt(index, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Replace an existing control.\n   *\n   * @param index Index in the array to replace the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n   *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n   * @param control The `AbstractControl` control to replace the existing control\n   * @param options Specifies whether this FormArray instance should emit events after an\n   *     existing control is replaced with a new one.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * replaced with a new one. When false, no events are emitted.\n   */\n  setControl(index, control, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    if (control) {\n      this.controls.splice(adjustedIndex, 0, control);\n      this._registerControl(control);\n    }\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Length of the control array.\n   */\n  get length() {\n    return this.controls.length;\n  }\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   *\n   * This method performs strict checks, and throws an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   * @usageNotes\n   * ### Set the values for the controls in the form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *   new FormControl(),\n   *   new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.setValue(['Nancy', 'Drew']);\n   * console.log(arr.value);   // ['Nancy', 'Drew']\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, false, value);\n    value.forEach((newValue, index) => {\n      assertControlPresent(this, false, index);\n      this.at(index).setValue(newValue, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormArray`. It accepts an array that matches the\n   * structure of the control, and does its best to match the values to the correct\n   * controls in the group.\n   *\n   * It accepts both super-sets and sub-sets of the array without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the values for controls in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.patchValue(['Nancy']);\n   * console.log(arr.value);   // ['Nancy', null]\n   * ```\n   *\n   * @param value Array of latest values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control\n   * value is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values,\n    // so we just ignore such cases when a field containing FormArray instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    value.forEach((newValue, index) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n   * value of all descendants to null or null maps.\n   *\n   * You reset to a specific form state by passing in an array of states\n   * that matches the structure of the control. The state is a standalone value\n   * or a form state object with both a value and a disabled status.\n   *\n   * @usageNotes\n   * ### Reset the values in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * arr.reset(['name', 'last name']);\n   *\n   * console.log(arr.value);  // ['name', 'last name']\n   * ```\n   *\n   * ### Reset the values in a form array and the disabled status for the first control\n   *\n   * ```ts\n   * arr.reset([\n   *   {value: 'name', disabled: true},\n   *   'last'\n   * ]);\n   *\n   * console.log(arr.value);  // ['last']\n   * console.log(arr.at(0).status);  // 'DISABLED'\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  reset(value = [], options = {}) {\n    this._forEachChild((control, index) => {\n      control.reset(value[index], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options, this);\n    this._updateTouched(options, this);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * Reports all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this.controls.map(control => control.getRawValue());\n  }\n  /**\n   * Remove all controls in the `FormArray`.\n   *\n   * @param options Specifies whether this FormArray instance should emit events after all\n   *     controls are removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when all controls\n   * in this FormArray instance are removed. When false, no events are emitted.\n   *\n   * @usageNotes\n   * ### Remove all elements from a FormArray\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.length);  // 2\n   *\n   * arr.clear();\n   * console.log(arr.length);  // 0\n   * ```\n   *\n   * It's a simpler and more efficient alternative to removing all elements one by one:\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   *\n   * while (arr.length) {\n   *    arr.removeAt(0);\n   * }\n   * ```\n   */\n  clear(options = {}) {\n    if (this.controls.length < 1) return;\n    this._forEachChild(control => control._registerOnCollectionChange(() => {}));\n    this.controls.splice(0);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Adjusts a negative index by summing it with the length of the array. For very negative\n   * indices, the result may remain negative.\n   * @internal\n   */\n  _adjustIndex(index) {\n    return index < 0 ? index + this.length : index;\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this.controls.reduce((updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    this.controls.forEach((control, index) => {\n      cb(control, index);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this.controls.filter(control => control.enabled || this.disabled).map(control => control.value);\n  }\n  /** @internal */\n  _anyControls(condition) {\n    return this.controls.some(control => control.enabled && condition(control));\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => this._registerControl(control));\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n  _registerControl(control) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n  /** @internal */\n  _find(name) {\n    return this.at(name) ?? null;\n  }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = control => control instanceof FormArray;\nfunction isAbstractControlOptions(options) {\n  return !!options && (options.asyncValidators !== undefined || options.validators !== undefined || options.updateOn !== undefined);\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nlet FormBuilder = /*#__PURE__*/(() => {\n  class FormBuilder {\n    useNonNullable = false;\n    /**\n     * @description\n     * Returns a FormBuilder in which automatically constructed `FormControl` elements\n     * have `{nonNullable: true}` and are non-nullable.\n     *\n     * **Constructing non-nullable controls**\n     *\n     * When constructing a control, it will be non-nullable, and will reset to its initial value.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.control('Alex'); // FormControl<string>\n     * name.reset();\n     * console.log(name); // 'Alex'\n     * ```\n     *\n     * **Constructing non-nullable groups or arrays**\n     *\n     * When constructing a group or array, all automatically created inner controls will be\n     * non-nullable, and will reset to their initial values.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n     * name.reset();\n     * console.log(name); // {who: 'Alex'}\n     * ```\n     * **Constructing *nullable* fields on groups or arrays**\n     *\n     * It is still possible to have a nullable field. In particular, any `FormControl` which is\n     * *already* constructed will not be altered. For example:\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * // FormGroup<{who: FormControl<string|null>}>\n     * let name = nnfb.group({who: new FormControl('Alex')});\n     * name.reset(); console.log(name); // {who: null}\n     * ```\n     *\n     * Because the inner control is constructed explicitly by the caller, the builder has\n     * no control over how it is created, and cannot exclude the `null`.\n     */\n    get nonNullable() {\n      const nnfb = new FormBuilder();\n      nnfb.useNonNullable = true;\n      return nnfb;\n    }\n    group(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      let newOptions = {};\n      if (isAbstractControlOptions(options)) {\n        // `options` are `AbstractControlOptions`\n        newOptions = options;\n      } else if (options !== null) {\n        // `options` are legacy form group options\n        newOptions.validators = options.validator;\n        newOptions.asyncValidators = options.asyncValidator;\n      }\n      return new FormGroup(reducedControls, newOptions);\n    }\n    /**\n     * @description\n     * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n     * containing all the keys and corresponding inner control types.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormRecord`. The object should have the\n     * `AbstractControlOptions` type and might contain the following fields:\n     * * `validators`: A synchronous validator function, or an array of validator functions.\n     * * `asyncValidators`: A single async validator or array of async validator functions.\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n     * | submit').\n     */\n    record(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormRecord(reducedControls, options);\n    }\n    /**\n     * @description\n     * Constructs a new `FormControl` with the given state, validators and options. Sets\n     * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n     * control will be nullable. Accepts a single generic argument, which is the type  of the\n     * control's value.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or a `FormControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * {@example forms/ts/formBuilder/form_builder_example.ts region='disabled-control'}\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      let newOptions = {};\n      if (!this.useNonNullable) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n      }\n      if (isAbstractControlOptions(validatorOrOpts)) {\n        // If the second argument is options, then they are copied.\n        newOptions = validatorOrOpts;\n      } else {\n        // If the other arguments are validators, they are copied into an options object.\n        newOptions.validators = validatorOrOpts;\n        newOptions.asyncValidators = asyncValidator;\n      }\n      return new FormControl(formState, {\n        ...newOptions,\n        nonNullable: true\n      });\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options. Accepts a single generic argument, which is the type of each control\n     * inside the array.\n     *\n     * @param controls An array of child controls or control configs. Each child control is given an\n     *     index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n     *     `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions.\n     */\n    array(controls, validatorOrOpts, asyncValidator) {\n      const createdControls = controls.map(c => this._createControl(c));\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controls) {\n      const createdControls = {};\n      Object.keys(controls).forEach(controlName => {\n        createdControls[controlName] = this._createControl(controls[controlName]);\n      });\n      return createdControls;\n    }\n    /** @internal */\n    _createControl(controls) {\n      if (controls instanceof FormControl) {\n        return controls;\n      } else if (controls instanceof AbstractControl) {\n        // A control; just return it\n        return controls;\n      } else if (Array.isArray(controls)) {\n        // ControlConfig Tuple\n        const value = controls[0];\n        const validator = controls.length > 1 ? controls[1] : null;\n        const asyncValidator = controls.length > 2 ? controls[2] : null;\n        return this.control(value, validator, asyncValidator);\n      } else {\n        // T or FormControlState<T>\n        return this.control(controls);\n      }\n    }\n    static ɵfac = function FormBuilder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormBuilder)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FormBuilder,\n      factory: FormBuilder.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return FormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nlet NonNullableFormBuilder = /*#__PURE__*/(() => {\n  class NonNullableFormBuilder {\n    static ɵfac = function NonNullableFormBuilder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NonNullableFormBuilder)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NonNullableFormBuilder,\n      factory: () => (() => inject(FormBuilder).nonNullable)(),\n      providedIn: 'root'\n    });\n  }\n  return NonNullableFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nlet UntypedFormBuilder = /*#__PURE__*/(() => {\n  class UntypedFormBuilder extends FormBuilder {\n    group(controlsConfig, options = null) {\n      return super.group(controlsConfig, options);\n    }\n    /**\n     * Like `FormBuilder#control`, except the resulting control is untyped.\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      return super.control(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Like `FormBuilder#array`, except the resulting array is untyped.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n      return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵUntypedFormBuilder_BaseFactory;\n      return function UntypedFormBuilder_Factory(__ngFactoryType__) {\n        return (ɵUntypedFormBuilder_BaseFactory || (ɵUntypedFormBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(UntypedFormBuilder)))(__ngFactoryType__ || UntypedFormBuilder);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UntypedFormBuilder,\n      factory: UntypedFormBuilder.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UntypedFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('19.1.7');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Template-driven Forms Guide](guide/forms)\n *\n * @publicApi\n */\nlet FormsModule = /*#__PURE__*/(() => {\n  class FormsModule {\n    /**\n     * @description\n     * Provides options for configuring the forms module.\n     *\n     * @param opts An object of configuration options\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: FormsModule,\n        providers: [{\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static ɵfac = function FormsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormsModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: FormsModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [ɵInternalFormsSharedModule]\n    });\n  }\n  return FormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nlet ReactiveFormsModule = /*#__PURE__*/(() => {\n  class ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: ReactiveFormsModule,\n        providers: [{\n          provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n          useValue: opts.warnOnNgModelWithFormControl ?? 'always'\n        }, {\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static ɵfac = function ReactiveFormsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ReactiveFormsModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ReactiveFormsModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [ɵInternalFormsSharedModule]\n    });\n  }\n  return ReactiveFormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a `FormGroup` that\n * consists of `FormControl` objects, and mapping them onto the DOM. `FormControl`\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, ControlEvent, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormResetEvent, FormSubmittedEvent, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, PristineChangeEvent, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, StatusChangeEvent, TouchedChangeEvent, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, ValueChangeEvent, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","/**\n * @dynamic is for runtime initializing DomHandler.browser\n *\n * If delete below comment, we can see this error message:\n *  Metadata collected contains an error that will be reported at runtime:\n *  Only initialized variables and constants can be referenced\n *  because the value of this variable is needed by the template compiler.\n */\n// @dynamic\nlet DomHandler = /*#__PURE__*/(() => {\n  class DomHandler {\n    static zindex = 1000;\n    static calculatedScrollbarWidth = null;\n    static calculatedScrollbarHeight = null;\n    static browser;\n    static addClass(element, className) {\n      if (element && className) {\n        if (element.classList) element.classList.add(className);else element.className += ' ' + className;\n      }\n    }\n    static addMultipleClasses(element, className) {\n      if (element && className) {\n        if (element.classList) {\n          let styles = className.trim().split(' ');\n          for (let i = 0; i < styles.length; i++) {\n            element.classList.add(styles[i]);\n          }\n        } else {\n          let styles = className.split(' ');\n          for (let i = 0; i < styles.length; i++) {\n            element.className += ' ' + styles[i];\n          }\n        }\n      }\n    }\n    static removeClass(element, className) {\n      if (element && className) {\n        if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n      }\n    }\n    static removeMultipleClasses(element, classNames) {\n      if (element && classNames) {\n        [classNames].flat().filter(Boolean).forEach(cNames => cNames.split(' ').forEach(className => this.removeClass(element, className)));\n      }\n    }\n    static hasClass(element, className) {\n      if (element && className) {\n        if (element.classList) return element.classList.contains(className);else return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n      }\n      return false;\n    }\n    static siblings(element) {\n      return Array.prototype.filter.call(element.parentNode.children, function (child) {\n        return child !== element;\n      });\n    }\n    static find(element, selector) {\n      return Array.from(element.querySelectorAll(selector));\n    }\n    static findSingle(element, selector) {\n      return this.isElement(element) ? element.querySelector(selector) : null;\n    }\n    static index(element) {\n      let children = element.parentNode.childNodes;\n      let num = 0;\n      for (var i = 0; i < children.length; i++) {\n        if (children[i] == element) return num;\n        if (children[i].nodeType == 1) num++;\n      }\n      return -1;\n    }\n    static indexWithinGroup(element, attributeName) {\n      let children = element.parentNode ? element.parentNode.childNodes : [];\n      let num = 0;\n      for (var i = 0; i < children.length; i++) {\n        if (children[i] == element) return num;\n        if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1) num++;\n      }\n      return -1;\n    }\n    static appendOverlay(overlay, target, appendTo = 'self') {\n      if (appendTo !== 'self' && overlay && target) {\n        this.appendChild(overlay, target);\n      }\n    }\n    static alignOverlay(overlay, target, appendTo = 'self', calculateMinWidth = true) {\n      if (overlay && target) {\n        if (calculateMinWidth) {\n          overlay.style.minWidth = `${DomHandler.getOuterWidth(target)}px`;\n        }\n        if (appendTo === 'self') {\n          this.relativePosition(overlay, target);\n        } else {\n          this.absolutePosition(overlay, target);\n        }\n      }\n    }\n    static relativePosition(element, target, gutter = true) {\n      const getClosestRelativeElement = el => {\n        if (!el) return;\n        return getComputedStyle(el).getPropertyValue('position') === 'relative' ? el : getClosestRelativeElement(el.parentElement);\n      };\n      const elementDimensions = element.offsetParent ? {\n        width: element.offsetWidth,\n        height: element.offsetHeight\n      } : this.getHiddenElementDimensions(element);\n      const targetHeight = target.offsetHeight;\n      const targetOffset = target.getBoundingClientRect();\n      const windowScrollTop = this.getWindowScrollTop();\n      const windowScrollLeft = this.getWindowScrollLeft();\n      const viewport = this.getViewport();\n      const relativeElement = getClosestRelativeElement(element);\n      const relativeElementOffset = relativeElement?.getBoundingClientRect() || {\n        top: -1 * windowScrollTop,\n        left: -1 * windowScrollLeft\n      };\n      let top, left;\n      if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n        top = targetOffset.top - relativeElementOffset.top - elementDimensions.height;\n        element.style.transformOrigin = 'bottom';\n        if (targetOffset.top + top < 0) {\n          top = -1 * targetOffset.top;\n        }\n      } else {\n        top = targetHeight + targetOffset.top - relativeElementOffset.top;\n        element.style.transformOrigin = 'top';\n      }\n      const horizontalOverflow = targetOffset.left + elementDimensions.width - viewport.width;\n      const targetLeftOffsetInSpaceOfRelativeElement = targetOffset.left - relativeElementOffset.left;\n      if (elementDimensions.width > viewport.width) {\n        // element wider then viewport and cannot fit on screen (align at left side of viewport)\n        left = (targetOffset.left - relativeElementOffset.left) * -1;\n      } else if (horizontalOverflow > 0) {\n        // element wider then viewport but can be fit on screen (align at right side of viewport)\n        left = targetLeftOffsetInSpaceOfRelativeElement - horizontalOverflow;\n      } else {\n        // element fits on screen (align with target)\n        left = targetOffset.left - relativeElementOffset.left;\n      }\n      element.style.top = top + 'px';\n      element.style.left = left + 'px';\n      gutter && (element.style.marginTop = origin === 'bottom' ? 'calc(var(--p-anchor-gutter) * -1)' : 'calc(var(--p-anchor-gutter))');\n    }\n    static absolutePosition(element, target, gutter = true) {\n      const elementDimensions = element.offsetParent ? {\n        width: element.offsetWidth,\n        height: element.offsetHeight\n      } : this.getHiddenElementDimensions(element);\n      const elementOuterHeight = elementDimensions.height;\n      const elementOuterWidth = elementDimensions.width;\n      const targetOuterHeight = target.offsetHeight;\n      const targetOuterWidth = target.offsetWidth;\n      const targetOffset = target.getBoundingClientRect();\n      const windowScrollTop = this.getWindowScrollTop();\n      const windowScrollLeft = this.getWindowScrollLeft();\n      const viewport = this.getViewport();\n      let top, left;\n      if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n        top = targetOffset.top + windowScrollTop - elementOuterHeight;\n        element.style.transformOrigin = 'bottom';\n        if (top < 0) {\n          top = windowScrollTop;\n        }\n      } else {\n        top = targetOuterHeight + targetOffset.top + windowScrollTop;\n        element.style.transformOrigin = 'top';\n      }\n      if (targetOffset.left + elementOuterWidth > viewport.width) left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);else left = targetOffset.left + windowScrollLeft;\n      element.style.top = top + 'px';\n      element.style.left = left + 'px';\n      gutter && (element.style.marginTop = origin === 'bottom' ? 'calc(var(--p-anchor-gutter) * -1)' : 'calc(var(--p-anchor-gutter))');\n    }\n    static getParents(element, parents = []) {\n      return element['parentNode'] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));\n    }\n    static getScrollableParents(element) {\n      let scrollableParents = [];\n      if (element) {\n        let parents = this.getParents(element);\n        const overflowRegex = /(auto|scroll)/;\n        const overflowCheck = node => {\n          let styleDeclaration = window['getComputedStyle'](node, null);\n          return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n        };\n        for (let parent of parents) {\n          let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n          if (scrollSelectors) {\n            let selectors = scrollSelectors.split(',');\n            for (let selector of selectors) {\n              let el = this.findSingle(parent, selector);\n              if (el && overflowCheck(el)) {\n                scrollableParents.push(el);\n              }\n            }\n          }\n          if (parent.nodeType !== 9 && overflowCheck(parent)) {\n            scrollableParents.push(parent);\n          }\n        }\n      }\n      return scrollableParents;\n    }\n    static getHiddenElementOuterHeight(element) {\n      element.style.visibility = 'hidden';\n      element.style.display = 'block';\n      let elementHeight = element.offsetHeight;\n      element.style.display = 'none';\n      element.style.visibility = 'visible';\n      return elementHeight;\n    }\n    static getHiddenElementOuterWidth(element) {\n      element.style.visibility = 'hidden';\n      element.style.display = 'block';\n      let elementWidth = element.offsetWidth;\n      element.style.display = 'none';\n      element.style.visibility = 'visible';\n      return elementWidth;\n    }\n    static getHiddenElementDimensions(element) {\n      let dimensions = {};\n      element.style.visibility = 'hidden';\n      element.style.display = 'block';\n      dimensions.width = element.offsetWidth;\n      dimensions.height = element.offsetHeight;\n      element.style.display = 'none';\n      element.style.visibility = 'visible';\n      return dimensions;\n    }\n    static scrollInView(container, item) {\n      let borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n      let borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n      let paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n      let paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n      let containerRect = container.getBoundingClientRect();\n      let itemRect = item.getBoundingClientRect();\n      let offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n      let scroll = container.scrollTop;\n      let elementHeight = container.clientHeight;\n      let itemHeight = this.getOuterHeight(item);\n      if (offset < 0) {\n        container.scrollTop = scroll + offset;\n      } else if (offset + itemHeight > elementHeight) {\n        container.scrollTop = scroll + offset - elementHeight + itemHeight;\n      }\n    }\n    static fadeIn(element, duration) {\n      element.style.opacity = 0;\n      let last = +new Date();\n      let opacity = 0;\n      let tick = function () {\n        opacity = +element.style.opacity.replace(',', '.') + (new Date().getTime() - last) / duration;\n        element.style.opacity = opacity;\n        last = +new Date();\n        if (+opacity < 1) {\n          window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 16);\n        }\n      };\n      tick();\n    }\n    static fadeOut(element, ms) {\n      var opacity = 1,\n        interval = 50,\n        duration = ms,\n        gap = interval / duration;\n      let fading = setInterval(() => {\n        opacity = opacity - gap;\n        if (opacity <= 0) {\n          opacity = 0;\n          clearInterval(fading);\n        }\n        element.style.opacity = opacity;\n      }, interval);\n    }\n    static getWindowScrollTop() {\n      let doc = document.documentElement;\n      return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    }\n    static getWindowScrollLeft() {\n      let doc = document.documentElement;\n      return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    }\n    static matches(element, selector) {\n      var p = Element.prototype;\n      var f = p['matches'] || p.webkitMatchesSelector || p['mozMatchesSelector'] || p['msMatchesSelector'] || function (s) {\n        return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n      };\n      return f.call(element, selector);\n    }\n    static getOuterWidth(el, margin) {\n      let width = el.offsetWidth;\n      if (margin) {\n        let style = getComputedStyle(el);\n        width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n      }\n      return width;\n    }\n    static getHorizontalPadding(el) {\n      let style = getComputedStyle(el);\n      return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    }\n    static getHorizontalMargin(el) {\n      let style = getComputedStyle(el);\n      return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n    static innerWidth(el) {\n      let width = el.offsetWidth;\n      let style = getComputedStyle(el);\n      width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n      return width;\n    }\n    static width(el) {\n      let width = el.offsetWidth;\n      let style = getComputedStyle(el);\n      width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n      return width;\n    }\n    static getInnerHeight(el) {\n      let height = el.offsetHeight;\n      let style = getComputedStyle(el);\n      height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n      return height;\n    }\n    static getOuterHeight(el, margin) {\n      let height = el.offsetHeight;\n      if (margin) {\n        let style = getComputedStyle(el);\n        height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n      }\n      return height;\n    }\n    static getHeight(el) {\n      let height = el.offsetHeight;\n      let style = getComputedStyle(el);\n      height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n      return height;\n    }\n    static getWidth(el) {\n      let width = el.offsetWidth;\n      let style = getComputedStyle(el);\n      width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n      return width;\n    }\n    static getViewport() {\n      let win = window,\n        d = document,\n        e = d.documentElement,\n        g = d.getElementsByTagName('body')[0],\n        w = win.innerWidth || e.clientWidth || g.clientWidth,\n        h = win.innerHeight || e.clientHeight || g.clientHeight;\n      return {\n        width: w,\n        height: h\n      };\n    }\n    static getOffset(el) {\n      var rect = el.getBoundingClientRect();\n      return {\n        top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n        left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)\n      };\n    }\n    static replaceElementWith(element, replacementElement) {\n      let parentNode = element.parentNode;\n      if (!parentNode) throw `Can't replace element`;\n      return parentNode.replaceChild(replacementElement, element);\n    }\n    static getUserAgent() {\n      if (navigator && this.isClient()) {\n        return navigator.userAgent;\n      }\n    }\n    static isIE() {\n      var ua = window.navigator.userAgent;\n      var msie = ua.indexOf('MSIE ');\n      if (msie > 0) {\n        // IE 10 or older => return version number\n        return true;\n      }\n      var trident = ua.indexOf('Trident/');\n      if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return true;\n      }\n      var edge = ua.indexOf('Edge/');\n      if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return true;\n      }\n      // other browser\n      return false;\n    }\n    static isIOS() {\n      return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n    }\n    static isAndroid() {\n      return /(android)/i.test(navigator.userAgent);\n    }\n    static isTouchDevice() {\n      return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    }\n    static appendChild(element, target) {\n      if (this.isElement(target)) target.appendChild(element);else if (target && target.el && target.el.nativeElement) target.el.nativeElement.appendChild(element);else throw 'Cannot append ' + target + ' to ' + element;\n    }\n    static removeChild(element, target) {\n      if (this.isElement(target)) target.removeChild(element);else if (target.el && target.el.nativeElement) target.el.nativeElement.removeChild(element);else throw 'Cannot remove ' + element + ' from ' + target;\n    }\n    static removeElement(element) {\n      if (!('remove' in Element.prototype)) element.parentNode.removeChild(element);else element.remove();\n    }\n    static isElement(obj) {\n      return typeof HTMLElement === 'object' ? obj instanceof HTMLElement : obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n    }\n    static calculateScrollbarWidth(el) {\n      if (el) {\n        let style = getComputedStyle(el);\n        return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);\n      } else {\n        if (this.calculatedScrollbarWidth !== null) return this.calculatedScrollbarWidth;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.className = 'p-scrollbar-measure';\n        document.body.appendChild(scrollDiv);\n        let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        this.calculatedScrollbarWidth = scrollbarWidth;\n        return scrollbarWidth;\n      }\n    }\n    static calculateScrollbarHeight() {\n      if (this.calculatedScrollbarHeight !== null) return this.calculatedScrollbarHeight;\n      let scrollDiv = document.createElement('div');\n      scrollDiv.className = 'p-scrollbar-measure';\n      document.body.appendChild(scrollDiv);\n      let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n      document.body.removeChild(scrollDiv);\n      this.calculatedScrollbarWidth = scrollbarHeight;\n      return scrollbarHeight;\n    }\n    static invokeElementMethod(element, methodName, args) {\n      element[methodName].apply(element, args);\n    }\n    static clearSelection() {\n      if (window.getSelection) {\n        if (window.getSelection().empty) {\n          window.getSelection().empty();\n        } else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n          window.getSelection().removeAllRanges();\n        }\n      } else if (document['selection'] && document['selection'].empty) {\n        try {\n          document['selection'].empty();\n        } catch (error) {\n          //ignore IE bug\n        }\n      }\n    }\n    static getBrowser() {\n      if (!this.browser) {\n        let matched = this.resolveUserAgent();\n        this.browser = {};\n        if (matched.browser) {\n          this.browser[matched.browser] = true;\n          this.browser['version'] = matched.version;\n        }\n        if (this.browser['chrome']) {\n          this.browser['webkit'] = true;\n        } else if (this.browser['webkit']) {\n          this.browser['safari'] = true;\n        }\n      }\n      return this.browser;\n    }\n    static resolveUserAgent() {\n      let ua = navigator.userAgent.toLowerCase();\n      let match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n      return {\n        browser: match[1] || '',\n        version: match[2] || '0'\n      };\n    }\n    static isInteger(value) {\n      if (Number.isInteger) {\n        return Number.isInteger(value);\n      } else {\n        return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n      }\n    }\n    static isHidden(element) {\n      return !element || element.offsetParent === null;\n    }\n    static isVisible(element) {\n      return element && element.offsetParent != null;\n    }\n    static isExist(element) {\n      return element !== null && typeof element !== 'undefined' && element.nodeName && element.parentNode;\n    }\n    static focus(element, options) {\n      element && document.activeElement !== element && element.focus(options);\n    }\n    static getFocusableSelectorString(selector = '') {\n      return `button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        .p-inputtext:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n        .p-button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector}`;\n    }\n    static getFocusableElements(element, selector = '') {\n      let focusableElements = this.find(element, this.getFocusableSelectorString(selector));\n      let visibleFocusableElements = [];\n      for (let focusableElement of focusableElements) {\n        const computedStyle = getComputedStyle(focusableElement);\n        if (this.isVisible(focusableElement) && computedStyle.display != 'none' && computedStyle.visibility != 'hidden') visibleFocusableElements.push(focusableElement);\n      }\n      return visibleFocusableElements;\n    }\n    static getFocusableElement(element, selector = '') {\n      let focusableElement = this.findSingle(element, this.getFocusableSelectorString(selector));\n      if (focusableElement) {\n        const computedStyle = getComputedStyle(focusableElement);\n        if (this.isVisible(focusableElement) && computedStyle.display != 'none' && computedStyle.visibility != 'hidden') return focusableElement;\n      }\n      return null;\n    }\n    static getFirstFocusableElement(element, selector = '') {\n      const focusableElements = this.getFocusableElements(element, selector);\n      return focusableElements.length > 0 ? focusableElements[0] : null;\n    }\n    static getLastFocusableElement(element, selector) {\n      const focusableElements = this.getFocusableElements(element, selector);\n      return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : null;\n    }\n    static getNextFocusableElement(element, reverse = false) {\n      const focusableElements = DomHandler.getFocusableElements(element);\n      let index = 0;\n      if (focusableElements && focusableElements.length > 0) {\n        const focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\n        if (reverse) {\n          if (focusedIndex == -1 || focusedIndex === 0) {\n            index = focusableElements.length - 1;\n          } else {\n            index = focusedIndex - 1;\n          }\n        } else if (focusedIndex != -1 && focusedIndex !== focusableElements.length - 1) {\n          index = focusedIndex + 1;\n        }\n      }\n      return focusableElements[index];\n    }\n    static generateZIndex() {\n      this.zindex = this.zindex || 999;\n      return ++this.zindex;\n    }\n    static getSelection() {\n      if (window.getSelection) return window.getSelection().toString();else if (document.getSelection) return document.getSelection().toString();else if (document['selection']) return document['selection'].createRange().text;\n      return null;\n    }\n    static getTargetElement(target, el) {\n      if (!target) return null;\n      switch (target) {\n        case 'document':\n          return document;\n        case 'window':\n          return window;\n        case '@next':\n          return el?.nextElementSibling;\n        case '@prev':\n          return el?.previousElementSibling;\n        case '@parent':\n          return el?.parentElement;\n        case '@grandparent':\n          return el?.parentElement.parentElement;\n        default:\n          const type = typeof target;\n          if (type === 'string') {\n            return document.querySelector(target);\n          } else if (type === 'object' && target.hasOwnProperty('nativeElement')) {\n            return this.isExist(target.nativeElement) ? target.nativeElement : undefined;\n          }\n          const isFunction = obj => !!(obj && obj.constructor && obj.call && obj.apply);\n          const element = isFunction(target) ? target() : target;\n          return element && element.nodeType === 9 || this.isExist(element) ? element : null;\n      }\n    }\n    static isClient() {\n      return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n    }\n    static getAttribute(element, name) {\n      if (element) {\n        const value = element.getAttribute(name);\n        if (!isNaN(value)) {\n          return +value;\n        }\n        if (value === 'true' || value === 'false') {\n          return value === 'true';\n        }\n        return value;\n      }\n      return undefined;\n    }\n    static calculateBodyScrollbarWidth() {\n      return window.innerWidth - document.documentElement.offsetWidth;\n    }\n    static blockBodyScroll(className = 'p-overflow-hidden') {\n      document.body.style.setProperty('--scrollbar-width', this.calculateBodyScrollbarWidth() + 'px');\n      this.addClass(document.body, className);\n    }\n    static unblockBodyScroll(className = 'p-overflow-hidden') {\n      document.body.style.removeProperty('--scrollbar-width');\n      this.removeClass(document.body, className);\n    }\n    static createElement(type, attributes = {}, ...children) {\n      if (type) {\n        const element = document.createElement(type);\n        this.setAttributes(element, attributes);\n        element.append(...children);\n        return element;\n      }\n      return undefined;\n    }\n    static setAttribute(element, attribute = '', value) {\n      if (this.isElement(element) && value !== null && value !== undefined) {\n        element.setAttribute(attribute, value);\n      }\n    }\n    static setAttributes(element, attributes = {}) {\n      if (this.isElement(element)) {\n        const computedStyles = (rule, value) => {\n          const styles = element?.$attrs?.[rule] ? [element?.$attrs?.[rule]] : [];\n          return [value].flat().reduce((cv, v) => {\n            if (v !== null && v !== undefined) {\n              const type = typeof v;\n              if (type === 'string' || type === 'number') {\n                cv.push(v);\n              } else if (type === 'object') {\n                const _cv = Array.isArray(v) ? computedStyles(rule, v) : Object.entries(v).map(([_k, _v]) => rule === 'style' && (!!_v || _v === 0) ? `${_k.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()}:${_v}` : !!_v ? _k : undefined);\n                cv = _cv.length ? cv.concat(_cv.filter(c => !!c)) : cv;\n              }\n            }\n            return cv;\n          }, styles);\n        };\n        Object.entries(attributes).forEach(([key, value]) => {\n          if (value !== undefined && value !== null) {\n            const matchedEvent = key.match(/^on(.+)/);\n            if (matchedEvent) {\n              element.addEventListener(matchedEvent[1].toLowerCase(), value);\n            } else if (key === 'pBind') {\n              this.setAttributes(element, value);\n            } else {\n              value = key === 'class' ? [...new Set(computedStyles('class', value))].join(' ').trim() : key === 'style' ? computedStyles('style', value).join(';').trim() : value;\n              (element.$attrs = element.$attrs || {}) && (element.$attrs[key] = value);\n              element.setAttribute(key, value);\n            }\n          }\n        });\n      }\n    }\n    static isFocusableElement(element, selector = '') {\n      return this.isElement(element) ? element.matches(`button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector}`) : false;\n    }\n  }\n  return DomHandler;\n})();\nclass ConnectedOverlayScrollHandler {\n  element;\n  listener;\n  scrollableParents;\n  constructor(element, listener = () => {}) {\n    this.element = element;\n    this.listener = listener;\n  }\n  bindScrollListener() {\n    this.scrollableParents = DomHandler.getScrollableParents(this.element);\n    for (let i = 0; i < this.scrollableParents.length; i++) {\n      this.scrollableParents[i].addEventListener('scroll', this.listener);\n    }\n  }\n  unbindScrollListener() {\n    if (this.scrollableParents) {\n      for (let i = 0; i < this.scrollableParents.length; i++) {\n        this.scrollableParents[i].removeEventListener('scroll', this.listener);\n      }\n    }\n  }\n  destroy() {\n    this.unbindScrollListener();\n    this.element = null;\n    this.listener = null;\n    this.scrollableParents = null;\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConnectedOverlayScrollHandler, DomHandler };\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, ElementRef, booleanAttribute, Input, Directive, NgModule } from '@angular/core';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { DomHandler } from 'primeng/dom';\n\n/**\n * AutoFocus manages focus on focusable element on load.\n * @group Components\n */\nlet AutoFocus = /*#__PURE__*/(() => {\n  class AutoFocus extends BaseComponent {\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @deprecated use [pAutoFocus]=\"true\"\n     * @group Props\n     */\n    autofocus = false;\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    _autofocus = false;\n    focused = false;\n    platformId = inject(PLATFORM_ID);\n    document = inject(DOCUMENT);\n    host = inject(ElementRef);\n    ngAfterContentChecked() {\n      // This sets the `attr.autofocus` which is different than the Input `autofocus` attribute.\n      if (this.autofocus === false) {\n        this.host.nativeElement.removeAttribute('autofocus');\n      } else {\n        this.host.nativeElement.setAttribute('autofocus', true);\n      }\n      if (!this.focused) {\n        this.autoFocus();\n      }\n    }\n    ngAfterViewChecked() {\n      if (!this.focused) {\n        this.autoFocus();\n      }\n    }\n    autoFocus() {\n      if (isPlatformBrowser(this.platformId) && this._autofocus) {\n        setTimeout(() => {\n          const focusableElements = DomHandler.getFocusableElements(this.host?.nativeElement);\n          if (focusableElements.length === 0) {\n            this.host.nativeElement.focus();\n          }\n          if (focusableElements.length > 0) {\n            focusableElements[0].focus();\n          }\n          this.focused = true;\n        });\n      }\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵAutoFocus_BaseFactory;\n      return function AutoFocus_Factory(__ngFactoryType__) {\n        return (ɵAutoFocus_BaseFactory || (ɵAutoFocus_BaseFactory = i0.ɵɵgetInheritedFactory(AutoFocus)))(__ngFactoryType__ || AutoFocus);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AutoFocus,\n      selectors: [[\"\", \"pAutoFocus\", \"\"]],\n      inputs: {\n        autofocus: [2, \"autofocus\", \"autofocus\", booleanAttribute],\n        _autofocus: [0, \"pAutoFocus\", \"_autofocus\"]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return AutoFocus;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AutoFocusModule = /*#__PURE__*/(() => {\n  class AutoFocusModule {\n    static ɵfac = function AutoFocusModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AutoFocusModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: AutoFocusModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return AutoFocusModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutoFocus, AutoFocusModule };\n","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Input, Directive, input, booleanAttribute, computed, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { isEmpty, isNotEmpty, uuid, hasClass, removeClass, addClass } from '@primeuix/utils';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nconst theme = ({\n  dt\n}) => `\n.p-badge {\n    display: inline-flex;\n    border-radius: ${dt('badge.border.radius')};\n    justify-content: center;\n    padding: ${dt('badge.padding')};\n    background: ${dt('badge.primary.background')};\n    color: ${dt('badge.primary.color')};\n    font-size: ${dt('badge.font.size')};\n    font-weight: ${dt('badge.font.weight')};\n    min-width: ${dt('badge.min.width')};\n    height: ${dt('badge.height')};\n    line-height: ${dt('badge.height')};\n}\n\n.p-badge-dot {\n    width: ${dt('badge.dot.size')};\n    min-width: ${dt('badge.dot.size')};\n    height: ${dt('badge.dot.size')};\n    border-radius: 50%;\n    padding: 0;\n}\n\n.p-badge-circle {\n    padding: 0;\n    border-radius: 50%;\n}\n\n.p-badge-secondary {\n    background: ${dt('badge.secondary.background')};\n    color: ${dt('badge.secondary.color')};\n}\n\n.p-badge-success {\n    background: ${dt('badge.success.background')};\n    color: ${dt('badge.success.color')};\n}\n\n.p-badge-info {\n    background: ${dt('badge.info.background')};\n    color: ${dt('badge.info.color')};\n}\n\n.p-badge-warn {\n    background: ${dt('badge.warn.background')};\n    color: ${dt('badge.warn.color')};\n}\n\n.p-badge-danger {\n    background: ${dt('badge.danger.background')};\n    color: ${dt('badge.danger.color')};\n}\n\n.p-badge-contrast {\n    background: ${dt('badge.contrast.background')};\n    color: ${dt('badge.contrast.color')};\n}\n\n.p-badge-sm {\n    font-size: ${dt('badge.sm.font.size')};\n    min-width: ${dt('badge.sm.min.width')};\n    height: ${dt('badge.sm.height')};\n    line-height: ${dt('badge.sm.height')};\n}\n\n.p-badge-lg {\n    font-size: ${dt('badge.lg.font.size')};\n    min-width: ${dt('badge.lg.min.width')};\n    height: ${dt('badge.lg.height')};\n    line-height: ${dt('badge.lg.height')};\n}\n\n.p-badge-xl {\n    font-size: ${dt('badge.xl.font.size')};\n    min-width: ${dt('badge.xl.min.width')};\n    height: ${dt('badge.xl.height')};\n    line-height: ${dt('badge.xl.height')};\n}\n\n/* For PrimeNG (directive)*/\n\n.p-overlay-badge {\n    position: relative;\n}\n\n.p-overlay-badge > .p-badge {\n    position: absolute;\n    top: 0;\n    inset-inline-end: 0;\n    transform: translate(50%, -50%);\n    transform-origin: 100% 0;\n    margin: 0;\n}\n`;\nconst classes = {\n  root: ({\n    props,\n    instance\n  }) => ['p-badge p-component', {\n    'p-badge-circle': isNotEmpty(props.value) && String(props.value).length === 1,\n    'p-badge-dot': isEmpty(props.value) && !instance.$slots.default,\n    'p-badge-sm': props.size === 'small',\n    'p-badge-lg': props.size === 'large',\n    'p-badge-xl': props.size === 'xlarge',\n    'p-badge-info': props.severity === 'info',\n    'p-badge-success': props.severity === 'success',\n    'p-badge-warn': props.severity === 'warn',\n    'p-badge-danger': props.severity === 'danger',\n    'p-badge-secondary': props.severity === 'secondary',\n    'p-badge-contrast': props.severity === 'contrast'\n  }]\n};\nlet BadgeStyle = /*#__PURE__*/(() => {\n  class BadgeStyle extends BaseStyle {\n    name = 'badge';\n    theme = theme;\n    classes = classes;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵBadgeStyle_BaseFactory;\n      return function BadgeStyle_Factory(__ngFactoryType__) {\n        return (ɵBadgeStyle_BaseFactory || (ɵBadgeStyle_BaseFactory = i0.ɵɵgetInheritedFactory(BadgeStyle)))(__ngFactoryType__ || BadgeStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BadgeStyle,\n      factory: BadgeStyle.ɵfac\n    });\n  }\n  return BadgeStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * Badge represents people using icons, labels and images.\n *\n * [Live Demo](https://www.primeng.org/badge)\n *\n * @module badgestyle\n *\n */\nvar BadgeClasses = /*#__PURE__*/function (BadgeClasses) {\n  /**\n   * Class name of the root element\n   */\n  BadgeClasses[\"root\"] = \"p-badge\";\n  return BadgeClasses;\n}(BadgeClasses || {});\n/**\n * Badge Directive is directive usage of badge component.\n * @group Components\n */\nlet BadgeDirective = /*#__PURE__*/(() => {\n  class BadgeDirective extends BaseComponent {\n    /**\n     * When specified, disables the component.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Size of the badge, valid options are \"large\" and \"xlarge\".\n     * @group Props\n     */\n    badgeSize;\n    /**\n     * Size of the badge, valid options are \"large\" and \"xlarge\".\n     * @group Props\n     * @deprecated use badgeSize instead.\n     */\n    set size(value) {\n      this._size = value;\n      console.log('size property is deprecated and will removed in v18, use badgeSize instead.');\n    }\n    get size() {\n      return this._size;\n    }\n    _size;\n    /**\n     * Severity type of the badge.\n     * @group Props\n     */\n    severity;\n    /**\n     * Value to display inside the badge.\n     * @group Props\n     */\n    value;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    badgeStyle;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    badgeStyleClass;\n    id;\n    badgeEl;\n    _componentStyle = inject(BadgeStyle);\n    get activeElement() {\n      return this.el.nativeElement.nodeName.indexOf('-') != -1 ? this.el.nativeElement.firstChild : this.el.nativeElement;\n    }\n    get canUpdateBadge() {\n      return this.id && !this.disabled;\n    }\n    constructor() {\n      super();\n    }\n    ngOnChanges({\n      value,\n      size,\n      severity,\n      disabled,\n      badgeStyle,\n      badgeStyleClass\n    }) {\n      super.ngOnChanges({\n        value,\n        size,\n        severity,\n        disabled\n      });\n      if (disabled) {\n        this.toggleDisableState();\n      }\n      if (!this.canUpdateBadge) {\n        return;\n      }\n      if (severity) {\n        this.setSeverity(severity.previousValue);\n      }\n      if (size) {\n        this.setSizeClasses();\n      }\n      if (value) {\n        this.setValue();\n      }\n      if (badgeStyle || badgeStyleClass) {\n        this.applyStyles();\n      }\n    }\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      this.id = uuid('pn_id_') + '_badge';\n      this.renderBadgeContent();\n    }\n    setValue(element) {\n      const badge = element ?? this.document.getElementById(this.id);\n      if (!badge) {\n        return;\n      }\n      if (this.value != null) {\n        if (hasClass(badge, 'p-badge-dot')) {\n          removeClass(badge, 'p-badge-dot');\n        }\n        if (this.value && String(this.value).length === 1) {\n          addClass(badge, 'p-badge-circle');\n        } else {\n          removeClass(badge, 'p-badge-circle');\n        }\n      } else {\n        if (!hasClass(badge, 'p-badge-dot')) {\n          addClass(badge, 'p-badge-dot');\n        }\n        removeClass(badge, 'p-badge-circle');\n      }\n      badge.innerHTML = '';\n      const badgeValue = this.value != null ? String(this.value) : '';\n      this.renderer.appendChild(badge, this.document.createTextNode(badgeValue));\n    }\n    setSizeClasses(element) {\n      const badge = element ?? this.document.getElementById(this.id);\n      if (!badge) {\n        return;\n      }\n      if (this.badgeSize) {\n        if (this.badgeSize === 'large') {\n          addClass(badge, 'p-badge-lg');\n          removeClass(badge, 'p-badge-xl');\n        }\n        if (this.badgeSize === 'xlarge') {\n          addClass(badge, 'p-badge-xl');\n          removeClass(badge, 'p-badge-lg');\n        }\n      } else if (this.size && !this.badgeSize) {\n        if (this.size === 'large') {\n          addClass(badge, 'p-badge-lg');\n          removeClass(badge, 'p-badge-xl');\n        }\n        if (this.size === 'xlarge') {\n          addClass(badge, 'p-badge-xl');\n          removeClass(badge, 'p-badge-lg');\n        }\n      } else {\n        removeClass(badge, 'p-badge-lg');\n        removeClass(badge, 'p-badge-xl');\n      }\n    }\n    renderBadgeContent() {\n      if (this.disabled) {\n        return null;\n      }\n      const el = this.activeElement;\n      const badge = this.document.createElement('span');\n      badge.id = this.id;\n      badge.className = 'p-badge p-component';\n      this.setSeverity(null, badge);\n      this.setSizeClasses(badge);\n      this.setValue(badge);\n      addClass(el, 'p-overlay-badge');\n      this.renderer.appendChild(el, badge);\n      this.badgeEl = badge;\n      this.applyStyles();\n    }\n    applyStyles() {\n      if (this.badgeEl && this.badgeStyle && typeof this.badgeStyle === 'object') {\n        for (const [key, value] of Object.entries(this.badgeStyle)) {\n          this.renderer.setStyle(this.badgeEl, key, value);\n        }\n      }\n      if (this.badgeEl && this.badgeStyleClass) {\n        this.badgeEl.classList.add(...this.badgeStyleClass.split(' '));\n      }\n    }\n    setSeverity(oldSeverity, element) {\n      const badge = element ?? this.document.getElementById(this.id);\n      if (!badge) {\n        return;\n      }\n      if (this.severity) {\n        addClass(badge, `p-badge-${this.severity}`);\n      }\n      if (oldSeverity) {\n        removeClass(badge, `p-badge-${oldSeverity}`);\n      }\n    }\n    toggleDisableState() {\n      if (!this.id) {\n        return;\n      }\n      if (this.disabled) {\n        const badge = this.activeElement?.querySelector(`#${this.id}`);\n        if (badge) {\n          this.renderer.removeChild(this.activeElement, badge);\n        }\n      } else {\n        this.renderBadgeContent();\n      }\n    }\n    static ɵfac = function BadgeDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BadgeDirective)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BadgeDirective,\n      selectors: [[\"\", \"pBadge\", \"\"]],\n      inputs: {\n        disabled: [0, \"badgeDisabled\", \"disabled\"],\n        badgeSize: \"badgeSize\",\n        size: \"size\",\n        severity: \"severity\",\n        value: \"value\",\n        badgeStyle: \"badgeStyle\",\n        badgeStyleClass: \"badgeStyleClass\"\n      },\n      features: [i0.ɵɵProvidersFeature([BadgeStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return BadgeDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Badge is a small status indicator for another element.\n * @group Components\n */\nlet Badge = /*#__PURE__*/(() => {\n  class Badge extends BaseComponent {\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass = input();\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style = input();\n    /**\n     * Size of the badge, valid options are \"large\" and \"xlarge\".\n     * @group Props\n     */\n    badgeSize = input();\n    /**\n     * Size of the badge, valid options are \"large\" and \"xlarge\".\n     * @group Props\n     */\n    size = input();\n    /**\n     * Severity type of the badge.\n     * @group Props\n     */\n    severity = input();\n    /**\n     * Value to display inside the badge.\n     * @group Props\n     */\n    value = input();\n    /**\n     * When specified, disables the component.\n     * @group Props\n     */\n    badgeDisabled = input(false, {\n      transform: booleanAttribute\n    });\n    _componentStyle = inject(BadgeStyle);\n    /**\n     * Computes the container class for the badge element based on its properties.\n     * @returns An object representing the CSS classes to be applied to the badge container.\n     */\n    containerClass = computed(() => {\n      let classes = 'p-badge p-component';\n      if (isNotEmpty(this.value()) && String(this.value()).length === 1) {\n        classes += ' p-badge-circle';\n      }\n      if (this.badgeSize() === 'large') {\n        classes += ' p-badge-lg';\n      } else if (this.badgeSize() === 'xlarge') {\n        classes += ' p-badge-xl';\n      } else if (this.badgeSize() === 'small') {\n        classes += ' p-badge-sm';\n      }\n      if (isEmpty(this.value())) {\n        classes += ' p-badge-dot';\n      }\n      if (this.styleClass()) {\n        classes += ` ${this.styleClass()}`;\n      }\n      if (this.severity()) {\n        classes += ` p-badge-${this.severity()}`;\n      }\n      return classes;\n    });\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵBadge_BaseFactory;\n      return function Badge_Factory(__ngFactoryType__) {\n        return (ɵBadge_BaseFactory || (ɵBadge_BaseFactory = i0.ɵɵgetInheritedFactory(Badge)))(__ngFactoryType__ || Badge);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Badge,\n      selectors: [[\"p-badge\"]],\n      hostVars: 6,\n      hostBindings: function Badge_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleMap(ctx.style());\n          i0.ɵɵclassMap(ctx.containerClass());\n          i0.ɵɵstyleProp(\"display\", ctx.badgeDisabled() ? \"none\" : null);\n        }\n      },\n      inputs: {\n        styleClass: [1, \"styleClass\"],\n        style: [1, \"style\"],\n        badgeSize: [1, \"badgeSize\"],\n        size: [1, \"size\"],\n        severity: [1, \"severity\"],\n        value: [1, \"value\"],\n        badgeDisabled: [1, \"badgeDisabled\"]\n      },\n      features: [i0.ɵɵProvidersFeature([BadgeStyle]), i0.ɵɵInheritDefinitionFeature],\n      decls: 1,\n      vars: 1,\n      template: function Badge_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtext(0);\n        }\n        if (rf & 2) {\n          i0.ɵɵtextInterpolate(ctx.value());\n        }\n      },\n      dependencies: [CommonModule, SharedModule],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return Badge;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BadgeModule = /*#__PURE__*/(() => {\n  class BadgeModule {\n    static ɵfac = function BadgeModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BadgeModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: BadgeModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [Badge, SharedModule, SharedModule]\n    });\n  }\n  return BadgeModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Badge, BadgeClasses, BadgeDirective, BadgeModule, BadgeStyle };\n","import * as i0 from '@angular/core';\nimport { Injectable, booleanAttribute, Input, ViewEncapsulation, ChangeDetectionStrategy, Component } from '@angular/core';\nimport { isEmpty } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"*\"];\nconst css = `\n.p-icon {\n    display: inline-block;\n    vertical-align: baseline;\n}\n\n.p-icon-spin {\n    -webkit-animation: p-icon-spin 2s infinite linear;\n    animation: p-icon-spin 2s infinite linear;\n}\n\n@-webkit-keyframes p-icon-spin {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n    100% {\n        -webkit-transform: rotate(359deg);\n        transform: rotate(359deg);\n    }\n}\n\n@keyframes p-icon-spin {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg);\n    }\n    100% {\n        -webkit-transform: rotate(359deg);\n        transform: rotate(359deg);\n    }\n}\n`;\nlet BaseIconStyle = /*#__PURE__*/(() => {\n  class BaseIconStyle extends BaseStyle {\n    name = 'baseicon';\n    inlineStyles = css;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵBaseIconStyle_BaseFactory;\n      return function BaseIconStyle_Factory(__ngFactoryType__) {\n        return (ɵBaseIconStyle_BaseFactory || (ɵBaseIconStyle_BaseFactory = i0.ɵɵgetInheritedFactory(BaseIconStyle)))(__ngFactoryType__ || BaseIconStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BaseIconStyle,\n      factory: BaseIconStyle.ɵfac\n    });\n  }\n  return BaseIconStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * [Live Demo](https://www.primeng.org/)\n *\n * @module baseiconstyle\n *\n */\nvar BaseIconClasses = /*#__PURE__*/function (BaseIconClasses) {\n  BaseIconClasses[\"root\"] = \"p-icon\";\n  return BaseIconClasses;\n}(BaseIconClasses || {});\nlet BaseIcon = /*#__PURE__*/(() => {\n  class BaseIcon extends BaseComponent {\n    label;\n    spin = false;\n    styleClass;\n    role;\n    ariaLabel;\n    ariaHidden;\n    ngOnInit() {\n      super.ngOnInit();\n      this.getAttributes();\n    }\n    getAttributes() {\n      const isLabelEmpty = isEmpty(this.label);\n      this.role = !isLabelEmpty ? 'img' : undefined;\n      this.ariaLabel = !isLabelEmpty ? this.label : undefined;\n      this.ariaHidden = isLabelEmpty;\n    }\n    getClassNames() {\n      return `p-icon ${this.styleClass ? this.styleClass + ' ' : ''}${this.spin ? 'p-icon-spin' : ''}`;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵBaseIcon_BaseFactory;\n      return function BaseIcon_Factory(__ngFactoryType__) {\n        return (ɵBaseIcon_BaseFactory || (ɵBaseIcon_BaseFactory = i0.ɵɵgetInheritedFactory(BaseIcon)))(__ngFactoryType__ || BaseIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: BaseIcon,\n      selectors: [[\"ng-component\"]],\n      hostAttrs: [1, \"p-component\", \"p-iconwrapper\"],\n      inputs: {\n        label: \"label\",\n        spin: [2, \"spin\", \"spin\", booleanAttribute],\n        styleClass: \"styleClass\"\n      },\n      features: [i0.ɵɵProvidersFeature([BaseIconStyle]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function BaseIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return BaseIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseIcon, BaseIconClasses, BaseIconStyle };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet AngleDownIcon = /*#__PURE__*/(() => {\n  class AngleDownIcon extends BaseIcon {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵAngleDownIcon_BaseFactory;\n      return function AngleDownIcon_Factory(__ngFactoryType__) {\n        return (ɵAngleDownIcon_BaseFactory || (ɵAngleDownIcon_BaseFactory = i0.ɵɵgetInheritedFactory(AngleDownIcon)))(__ngFactoryType__ || AngleDownIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: AngleDownIcon,\n      selectors: [[\"AngleDownIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 2,\n      vars: 5,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M3.58659 4.5007C3.68513 4.50023 3.78277 4.51945 3.87379 4.55723C3.9648 4.59501 4.04735 4.65058 4.11659 4.7207L7.11659 7.7207L10.1166 4.7207C10.2619 4.65055 10.4259 4.62911 10.5843 4.65956C10.7427 4.69002 10.8871 4.77074 10.996 4.88976C11.1049 5.00877 11.1726 5.15973 11.1889 5.32022C11.2052 5.48072 11.1693 5.6422 11.0866 5.7807L7.58659 9.2807C7.44597 9.42115 7.25534 9.50004 7.05659 9.50004C6.85784 9.50004 6.66722 9.42115 6.52659 9.2807L3.02659 5.7807C2.88614 5.64007 2.80725 5.44945 2.80725 5.2507C2.80725 5.05195 2.88614 4.86132 3.02659 4.7207C3.09932 4.64685 3.18675 4.58911 3.28322 4.55121C3.37969 4.51331 3.48305 4.4961 3.58659 4.5007Z\", \"fill\", \"currentColor\"]],\n      template: function AngleDownIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0);\n          i0.ɵɵelement(1, \"path\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return AngleDownIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngleDownIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet AngleRightIcon = /*#__PURE__*/(() => {\n  class AngleRightIcon extends BaseIcon {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵAngleRightIcon_BaseFactory;\n      return function AngleRightIcon_Factory(__ngFactoryType__) {\n        return (ɵAngleRightIcon_BaseFactory || (ɵAngleRightIcon_BaseFactory = i0.ɵɵgetInheritedFactory(AngleRightIcon)))(__ngFactoryType__ || AngleRightIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: AngleRightIcon,\n      selectors: [[\"AngleRightIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 2,\n      vars: 5,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M5.25 11.1728C5.14929 11.1694 5.05033 11.1455 4.9592 11.1025C4.86806 11.0595 4.78666 10.9984 4.72 10.9228C4.57955 10.7822 4.50066 10.5916 4.50066 10.3928C4.50066 10.1941 4.57955 10.0035 4.72 9.86283L7.72 6.86283L4.72 3.86283C4.66067 3.71882 4.64765 3.55991 4.68275 3.40816C4.71785 3.25642 4.79932 3.11936 4.91585 3.01602C5.03238 2.91268 5.17819 2.84819 5.33305 2.83149C5.4879 2.81479 5.64411 2.84671 5.78 2.92283L9.28 6.42283C9.42045 6.56346 9.49934 6.75408 9.49934 6.95283C9.49934 7.15158 9.42045 7.34221 9.28 7.48283L5.78 10.9228C5.71333 10.9984 5.63193 11.0595 5.5408 11.1025C5.44966 11.1455 5.35071 11.1694 5.25 11.1728Z\", \"fill\", \"currentColor\"]],\n      template: function AngleRightIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0);\n          i0.ɵɵelement(1, \"path\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return AngleRightIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngleRightIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet CheckIcon = /*#__PURE__*/(() => {\n  class CheckIcon extends BaseIcon {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵCheckIcon_BaseFactory;\n      return function CheckIcon_Factory(__ngFactoryType__) {\n        return (ɵCheckIcon_BaseFactory || (ɵCheckIcon_BaseFactory = i0.ɵɵgetInheritedFactory(CheckIcon)))(__ngFactoryType__ || CheckIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: CheckIcon,\n      selectors: [[\"CheckIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 2,\n      vars: 5,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M4.86199 11.5948C4.78717 11.5923 4.71366 11.5745 4.64596 11.5426C4.57826 11.5107 4.51779 11.4652 4.46827 11.4091L0.753985 7.69483C0.683167 7.64891 0.623706 7.58751 0.580092 7.51525C0.536478 7.44299 0.509851 7.36177 0.502221 7.27771C0.49459 7.19366 0.506156 7.10897 0.536046 7.03004C0.565935 6.95111 0.613367 6.88 0.674759 6.82208C0.736151 6.76416 0.8099 6.72095 0.890436 6.69571C0.970973 6.67046 1.05619 6.66385 1.13966 6.67635C1.22313 6.68886 1.30266 6.72017 1.37226 6.76792C1.44186 6.81567 1.4997 6.8786 1.54141 6.95197L4.86199 10.2503L12.6397 2.49483C12.7444 2.42694 12.8689 2.39617 12.9932 2.40745C13.1174 2.41873 13.2343 2.47141 13.3251 2.55705C13.4159 2.64268 13.4753 2.75632 13.4938 2.87973C13.5123 3.00315 13.4888 3.1292 13.4271 3.23768L5.2557 11.4091C5.20618 11.4652 5.14571 11.5107 5.07801 11.5426C5.01031 11.5745 4.9368 11.5923 4.86199 11.5948Z\", \"fill\", \"currentColor\"]],\n      template: function CheckIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0);\n          i0.ɵɵelement(1, \"path\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return CheckIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CheckIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet ChevronDownIcon = /*#__PURE__*/(() => {\n  class ChevronDownIcon extends BaseIcon {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵChevronDownIcon_BaseFactory;\n      return function ChevronDownIcon_Factory(__ngFactoryType__) {\n        return (ɵChevronDownIcon_BaseFactory || (ɵChevronDownIcon_BaseFactory = i0.ɵɵgetInheritedFactory(ChevronDownIcon)))(__ngFactoryType__ || ChevronDownIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ChevronDownIcon,\n      selectors: [[\"ChevronDownIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 2,\n      vars: 5,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z\", \"fill\", \"currentColor\"]],\n      template: function ChevronDownIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0);\n          i0.ɵɵelement(1, \"path\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return ChevronDownIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChevronDownIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet ChevronRightIcon = /*#__PURE__*/(() => {\n  class ChevronRightIcon extends BaseIcon {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵChevronRightIcon_BaseFactory;\n      return function ChevronRightIcon_Factory(__ngFactoryType__) {\n        return (ɵChevronRightIcon_BaseFactory || (ɵChevronRightIcon_BaseFactory = i0.ɵɵgetInheritedFactory(ChevronRightIcon)))(__ngFactoryType__ || ChevronRightIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ChevronRightIcon,\n      selectors: [[\"ChevronRightIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 2,\n      vars: 5,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M4.38708 13C4.28408 13.0005 4.18203 12.9804 4.08691 12.9409C3.99178 12.9014 3.9055 12.8433 3.83313 12.7701C3.68634 12.6231 3.60388 12.4238 3.60388 12.2161C3.60388 12.0084 3.68634 11.8091 3.83313 11.6622L8.50507 6.99022L3.83313 2.31827C3.69467 2.16968 3.61928 1.97313 3.62287 1.77005C3.62645 1.56698 3.70872 1.37322 3.85234 1.22959C3.99596 1.08597 4.18972 1.00371 4.3928 1.00012C4.59588 0.996539 4.79242 1.07192 4.94102 1.21039L10.1669 6.43628C10.3137 6.58325 10.3962 6.78249 10.3962 6.99022C10.3962 7.19795 10.3137 7.39718 10.1669 7.54416L4.94102 12.7701C4.86865 12.8433 4.78237 12.9014 4.68724 12.9409C4.59212 12.9804 4.49007 13.0005 4.38708 13Z\", \"fill\", \"currentColor\"]],\n      template: function ChevronRightIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0);\n          i0.ɵɵelement(1, \"path\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return ChevronRightIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChevronRightIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { uuid } from '@primeuix/utils';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet ExclamationTriangleIcon = /*#__PURE__*/(() => {\n  class ExclamationTriangleIcon extends BaseIcon {\n    pathId;\n    ngOnInit() {\n      this.pathId = 'url(#' + uuid() + ')';\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵExclamationTriangleIcon_BaseFactory;\n      return function ExclamationTriangleIcon_Factory(__ngFactoryType__) {\n        return (ɵExclamationTriangleIcon_BaseFactory || (ɵExclamationTriangleIcon_BaseFactory = i0.ɵɵgetInheritedFactory(ExclamationTriangleIcon)))(__ngFactoryType__ || ExclamationTriangleIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ExclamationTriangleIcon,\n      selectors: [[\"ExclamationTriangleIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 8,\n      vars: 7,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M13.4018 13.1893H0.598161C0.49329 13.189 0.390283 13.1615 0.299143 13.1097C0.208003 13.0578 0.131826 12.9832 0.0780112 12.8932C0.0268539 12.8015 0 12.6982 0 12.5931C0 12.4881 0.0268539 12.3848 0.0780112 12.293L6.47985 1.08982C6.53679 1.00399 6.61408 0.933574 6.70484 0.884867C6.7956 0.836159 6.897 0.810669 7 0.810669C7.103 0.810669 7.2044 0.836159 7.29516 0.884867C7.38592 0.933574 7.46321 1.00399 7.52015 1.08982L13.922 12.293C13.9731 12.3848 14 12.4881 14 12.5931C14 12.6982 13.9731 12.8015 13.922 12.8932C13.8682 12.9832 13.792 13.0578 13.7009 13.1097C13.6097 13.1615 13.5067 13.189 13.4018 13.1893ZM1.63046 11.989H12.3695L7 2.59425L1.63046 11.989Z\", \"fill\", \"currentColor\"], [\"d\", \"M6.99996 8.78801C6.84143 8.78594 6.68997 8.72204 6.57787 8.60993C6.46576 8.49782 6.40186 8.34637 6.39979 8.18784V5.38703C6.39979 5.22786 6.46302 5.0752 6.57557 4.96265C6.68813 4.85009 6.84078 4.78686 6.99996 4.78686C7.15914 4.78686 7.31179 4.85009 7.42435 4.96265C7.5369 5.0752 7.60013 5.22786 7.60013 5.38703V8.18784C7.59806 8.34637 7.53416 8.49782 7.42205 8.60993C7.30995 8.72204 7.15849 8.78594 6.99996 8.78801Z\", \"fill\", \"currentColor\"], [\"d\", \"M6.99996 11.1887C6.84143 11.1866 6.68997 11.1227 6.57787 11.0106C6.46576 10.8985 6.40186 10.7471 6.39979 10.5885V10.1884C6.39979 10.0292 6.46302 9.87658 6.57557 9.76403C6.68813 9.65147 6.84078 9.58824 6.99996 9.58824C7.15914 9.58824 7.31179 9.65147 7.42435 9.76403C7.5369 9.87658 7.60013 10.0292 7.60013 10.1884V10.5885C7.59806 10.7471 7.53416 10.8985 7.42205 11.0106C7.30995 11.1227 7.15849 11.1866 6.99996 11.1887Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n      template: function ExclamationTriangleIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0)(1, \"g\");\n          i0.ɵɵelement(2, \"path\", 1)(3, \"path\", 2)(4, \"path\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"defs\")(6, \"clipPath\", 4);\n          i0.ɵɵelement(7, \"rect\", 5);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n          i0.ɵɵadvance();\n          i0.ɵɵattribute(\"clip-path\", ctx.pathId);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"id\", ctx.pathId);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return ExclamationTriangleIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ExclamationTriangleIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { uuid } from '@primeuix/utils';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet InfoCircleIcon = /*#__PURE__*/(() => {\n  class InfoCircleIcon extends BaseIcon {\n    pathId;\n    ngOnInit() {\n      this.pathId = 'url(#' + uuid() + ')';\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵInfoCircleIcon_BaseFactory;\n      return function InfoCircleIcon_Factory(__ngFactoryType__) {\n        return (ɵInfoCircleIcon_BaseFactory || (ɵInfoCircleIcon_BaseFactory = i0.ɵɵgetInheritedFactory(InfoCircleIcon)))(__ngFactoryType__ || InfoCircleIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: InfoCircleIcon,\n      selectors: [[\"InfoCircleIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 6,\n      vars: 7,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\", \"d\", \"M3.11101 12.8203C4.26215 13.5895 5.61553 14 7 14C8.85652 14 10.637 13.2625 11.9497 11.9497C13.2625 10.637 14 8.85652 14 7C14 5.61553 13.5895 4.26215 12.8203 3.11101C12.0511 1.95987 10.9579 1.06266 9.67879 0.532846C8.3997 0.00303296 6.99224 -0.13559 5.63437 0.134506C4.2765 0.404603 3.02922 1.07129 2.05026 2.05026C1.07129 3.02922 0.404603 4.2765 0.134506 5.63437C-0.13559 6.99224 0.00303296 8.3997 0.532846 9.67879C1.06266 10.9579 1.95987 12.0511 3.11101 12.8203ZM3.75918 2.14976C4.71846 1.50879 5.84628 1.16667 7 1.16667C8.5471 1.16667 10.0308 1.78125 11.1248 2.87521C12.2188 3.96918 12.8333 5.45291 12.8333 7C12.8333 8.15373 12.4912 9.28154 11.8502 10.2408C11.2093 11.2001 10.2982 11.9478 9.23232 12.3893C8.16642 12.8308 6.99353 12.9463 5.86198 12.7212C4.73042 12.4962 3.69102 11.9406 2.87521 11.1248C2.05941 10.309 1.50384 9.26958 1.27876 8.13803C1.05367 7.00647 1.16919 5.83358 1.61071 4.76768C2.05222 3.70178 2.79989 2.79074 3.75918 2.14976ZM7.00002 4.8611C6.84594 4.85908 6.69873 4.79698 6.58977 4.68801C6.48081 4.57905 6.4187 4.43185 6.41669 4.27776V3.88888C6.41669 3.73417 6.47815 3.58579 6.58754 3.4764C6.69694 3.367 6.84531 3.30554 7.00002 3.30554C7.15473 3.30554 7.3031 3.367 7.4125 3.4764C7.52189 3.58579 7.58335 3.73417 7.58335 3.88888V4.27776C7.58134 4.43185 7.51923 4.57905 7.41027 4.68801C7.30131 4.79698 7.1541 4.85908 7.00002 4.8611ZM7.00002 10.6945C6.84594 10.6925 6.69873 10.6304 6.58977 10.5214C6.48081 10.4124 6.4187 10.2652 6.41669 10.1111V6.22225C6.41669 6.06754 6.47815 5.91917 6.58754 5.80977C6.69694 5.70037 6.84531 5.63892 7.00002 5.63892C7.15473 5.63892 7.3031 5.70037 7.4125 5.80977C7.52189 5.91917 7.58335 6.06754 7.58335 6.22225V10.1111C7.58134 10.2652 7.51923 10.4124 7.41027 10.5214C7.30131 10.6304 7.1541 10.6925 7.00002 10.6945Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n      template: function InfoCircleIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0)(1, \"g\");\n          i0.ɵɵelement(2, \"path\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"defs\")(4, \"clipPath\", 2);\n          i0.ɵɵelement(5, \"rect\", 3);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n          i0.ɵɵadvance();\n          i0.ɵɵattribute(\"clip-path\", ctx.pathId);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"id\", ctx.pathId);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return InfoCircleIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InfoCircleIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { uuid } from '@primeuix/utils';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet SpinnerIcon = /*#__PURE__*/(() => {\n  class SpinnerIcon extends BaseIcon {\n    pathId;\n    ngOnInit() {\n      this.pathId = 'url(#' + uuid() + ')';\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵSpinnerIcon_BaseFactory;\n      return function SpinnerIcon_Factory(__ngFactoryType__) {\n        return (ɵSpinnerIcon_BaseFactory || (ɵSpinnerIcon_BaseFactory = i0.ɵɵgetInheritedFactory(SpinnerIcon)))(__ngFactoryType__ || SpinnerIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: SpinnerIcon,\n      selectors: [[\"SpinnerIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 6,\n      vars: 7,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n      template: function SpinnerIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0)(1, \"g\");\n          i0.ɵɵelement(2, \"path\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"defs\")(4, \"clipPath\", 2);\n          i0.ɵɵelement(5, \"rect\", 3);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n          i0.ɵɵadvance();\n          i0.ɵɵattribute(\"clip-path\", ctx.pathId);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"id\", ctx.pathId);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return SpinnerIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SpinnerIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet TimesIcon = /*#__PURE__*/(() => {\n  class TimesIcon extends BaseIcon {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵTimesIcon_BaseFactory;\n      return function TimesIcon_Factory(__ngFactoryType__) {\n        return (ɵTimesIcon_BaseFactory || (ɵTimesIcon_BaseFactory = i0.ɵɵgetInheritedFactory(TimesIcon)))(__ngFactoryType__ || TimesIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TimesIcon,\n      selectors: [[\"TimesIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 2,\n      vars: 5,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z\", \"fill\", \"currentColor\"]],\n      template: function TimesIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0);\n          i0.ɵɵelement(1, \"path\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return TimesIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimesIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { uuid } from '@primeuix/utils';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet TimesCircleIcon = /*#__PURE__*/(() => {\n  class TimesCircleIcon extends BaseIcon {\n    pathId;\n    ngOnInit() {\n      this.pathId = 'url(#' + uuid() + ')';\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵTimesCircleIcon_BaseFactory;\n      return function TimesCircleIcon_Factory(__ngFactoryType__) {\n        return (ɵTimesCircleIcon_BaseFactory || (ɵTimesCircleIcon_BaseFactory = i0.ɵɵgetInheritedFactory(TimesCircleIcon)))(__ngFactoryType__ || TimesCircleIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TimesCircleIcon,\n      selectors: [[\"TimesCircleIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 6,\n      vars: 7,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\", \"d\", \"M7 14C5.61553 14 4.26215 13.5895 3.11101 12.8203C1.95987 12.0511 1.06266 10.9579 0.532846 9.67879C0.00303296 8.3997 -0.13559 6.99224 0.134506 5.63437C0.404603 4.2765 1.07129 3.02922 2.05026 2.05026C3.02922 1.07129 4.2765 0.404603 5.63437 0.134506C6.99224 -0.13559 8.3997 0.00303296 9.67879 0.532846C10.9579 1.06266 12.0511 1.95987 12.8203 3.11101C13.5895 4.26215 14 5.61553 14 7C14 8.85652 13.2625 10.637 11.9497 11.9497C10.637 13.2625 8.85652 14 7 14ZM7 1.16667C5.84628 1.16667 4.71846 1.50879 3.75918 2.14976C2.79989 2.79074 2.05222 3.70178 1.61071 4.76768C1.16919 5.83358 1.05367 7.00647 1.27876 8.13803C1.50384 9.26958 2.05941 10.309 2.87521 11.1248C3.69102 11.9406 4.73042 12.4962 5.86198 12.7212C6.99353 12.9463 8.16642 12.8308 9.23232 12.3893C10.2982 11.9478 11.2093 11.2001 11.8502 10.2408C12.4912 9.28154 12.8333 8.15373 12.8333 7C12.8333 5.45291 12.2188 3.96918 11.1248 2.87521C10.0308 1.78125 8.5471 1.16667 7 1.16667ZM4.66662 9.91668C4.58998 9.91704 4.51404 9.90209 4.44325 9.87271C4.37246 9.84333 4.30826 9.8001 4.2544 9.74557C4.14516 9.6362 4.0838 9.48793 4.0838 9.33335C4.0838 9.17876 4.14516 9.0305 4.2544 8.92113L6.17553 7L4.25443 5.07891C4.15139 4.96832 4.09529 4.82207 4.09796 4.67094C4.10063 4.51982 4.16185 4.37563 4.26872 4.26876C4.3756 4.16188 4.51979 4.10066 4.67091 4.09799C4.82204 4.09532 4.96829 4.15142 5.07887 4.25446L6.99997 6.17556L8.92106 4.25446C9.03164 4.15142 9.1779 4.09532 9.32903 4.09799C9.48015 4.10066 9.62434 4.16188 9.73121 4.26876C9.83809 4.37563 9.89931 4.51982 9.90198 4.67094C9.90464 4.82207 9.84855 4.96832 9.74551 5.07891L7.82441 7L9.74554 8.92113C9.85478 9.0305 9.91614 9.17876 9.91614 9.33335C9.91614 9.48793 9.85478 9.6362 9.74554 9.74557C9.69168 9.8001 9.62748 9.84333 9.55669 9.87271C9.4859 9.90209 9.40996 9.91704 9.33332 9.91668C9.25668 9.91704 9.18073 9.90209 9.10995 9.87271C9.03916 9.84333 8.97495 9.8001 8.9211 9.74557L6.99997 7.82444L5.07884 9.74557C5.02499 9.8001 4.96078 9.84333 4.88999 9.87271C4.81921 9.90209 4.74326 9.91704 4.66662 9.91668Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n      template: function TimesCircleIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0)(1, \"g\");\n          i0.ɵɵelement(2, \"path\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"defs\")(4, \"clipPath\", 2);\n          i0.ɵɵelement(5, \"rect\", 3);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n          i0.ɵɵadvance();\n          i0.ɵɵattribute(\"clip-path\", ctx.pathId);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"id\", ctx.pathId);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return TimesCircleIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimesCircleIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { uuid } from '@primeuix/utils';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet WindowMaximizeIcon = /*#__PURE__*/(() => {\n  class WindowMaximizeIcon extends BaseIcon {\n    pathId;\n    ngOnInit() {\n      this.pathId = 'url(#' + uuid() + ')';\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵWindowMaximizeIcon_BaseFactory;\n      return function WindowMaximizeIcon_Factory(__ngFactoryType__) {\n        return (ɵWindowMaximizeIcon_BaseFactory || (ɵWindowMaximizeIcon_BaseFactory = i0.ɵɵgetInheritedFactory(WindowMaximizeIcon)))(__ngFactoryType__ || WindowMaximizeIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: WindowMaximizeIcon,\n      selectors: [[\"WindowMaximizeIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 6,\n      vars: 7,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\", \"d\", \"M7 14H11.8C12.3835 14 12.9431 13.7682 13.3556 13.3556C13.7682 12.9431 14 12.3835 14 11.8V2.2C14 1.61652 13.7682 1.05694 13.3556 0.644365C12.9431 0.231785 12.3835 0 11.8 0H2.2C1.61652 0 1.05694 0.231785 0.644365 0.644365C0.231785 1.05694 0 1.61652 0 2.2V7C0 7.15913 0.063214 7.31174 0.175736 7.42426C0.288258 7.53679 0.44087 7.6 0.6 7.6C0.75913 7.6 0.911742 7.53679 1.02426 7.42426C1.13679 7.31174 1.2 7.15913 1.2 7V2.2C1.2 1.93478 1.30536 1.68043 1.49289 1.49289C1.68043 1.30536 1.93478 1.2 2.2 1.2H11.8C12.0652 1.2 12.3196 1.30536 12.5071 1.49289C12.6946 1.68043 12.8 1.93478 12.8 2.2V11.8C12.8 12.0652 12.6946 12.3196 12.5071 12.5071C12.3196 12.6946 12.0652 12.8 11.8 12.8H7C6.84087 12.8 6.68826 12.8632 6.57574 12.9757C6.46321 13.0883 6.4 13.2409 6.4 13.4C6.4 13.5591 6.46321 13.7117 6.57574 13.8243C6.68826 13.9368 6.84087 14 7 14ZM9.77805 7.42192C9.89013 7.534 10.0415 7.59788 10.2 7.59995C10.3585 7.59788 10.5099 7.534 10.622 7.42192C10.7341 7.30985 10.798 7.15844 10.8 6.99995V3.94242C10.8066 3.90505 10.8096 3.86689 10.8089 3.82843C10.8079 3.77159 10.7988 3.7157 10.7824 3.6623C10.756 3.55552 10.701 3.45698 10.622 3.37798C10.5099 3.2659 10.3585 3.20202 10.2 3.19995H7.00002C6.84089 3.19995 6.68828 3.26317 6.57576 3.37569C6.46324 3.48821 6.40002 3.64082 6.40002 3.79995C6.40002 3.95908 6.46324 4.11169 6.57576 4.22422C6.68828 4.33674 6.84089 4.39995 7.00002 4.39995H8.80006L6.19997 7.00005C6.10158 7.11005 6.04718 7.25246 6.04718 7.40005C6.04718 7.54763 6.10158 7.69004 6.19997 7.80005C6.30202 7.91645 6.44561 7.98824 6.59997 8.00005C6.75432 7.98824 6.89791 7.91645 6.99997 7.80005L9.60002 5.26841V6.99995C9.6021 7.15844 9.66598 7.30985 9.77805 7.42192ZM1.4 14H3.8C4.17066 13.9979 4.52553 13.8498 4.78763 13.5877C5.04973 13.3256 5.1979 12.9707 5.2 12.6V10.2C5.1979 9.82939 5.04973 9.47452 4.78763 9.21242C4.52553 8.95032 4.17066 8.80215 3.8 8.80005H1.4C1.02934 8.80215 0.674468 8.95032 0.412371 9.21242C0.150274 9.47452 0.00210008 9.82939 0 10.2V12.6C0.00210008 12.9707 0.150274 13.3256 0.412371 13.5877C0.674468 13.8498 1.02934 13.9979 1.4 14ZM1.25858 10.0586C1.29609 10.0211 1.34696 10 1.4 10H3.8C3.85304 10 3.90391 10.0211 3.94142 10.0586C3.97893 10.0961 4 10.147 4 10.2V12.6C4 12.6531 3.97893 12.704 3.94142 12.7415C3.90391 12.779 3.85304 12.8 3.8 12.8H1.4C1.34696 12.8 1.29609 12.779 1.25858 12.7415C1.22107 12.704 1.2 12.6531 1.2 12.6V10.2C1.2 10.147 1.22107 10.0961 1.25858 10.0586Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n      template: function WindowMaximizeIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0)(1, \"g\");\n          i0.ɵɵelement(2, \"path\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"defs\")(4, \"clipPath\", 2);\n          i0.ɵɵelement(5, \"rect\", 3);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n          i0.ɵɵadvance();\n          i0.ɵɵattribute(\"clip-path\", ctx.pathId);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"id\", ctx.pathId);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return WindowMaximizeIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { WindowMaximizeIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { uuid } from '@primeuix/utils';\nimport { BaseIcon } from 'primeng/icons/baseicon';\nlet WindowMinimizeIcon = /*#__PURE__*/(() => {\n  class WindowMinimizeIcon extends BaseIcon {\n    pathId;\n    ngOnInit() {\n      this.pathId = 'url(#' + uuid() + ')';\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵWindowMinimizeIcon_BaseFactory;\n      return function WindowMinimizeIcon_Factory(__ngFactoryType__) {\n        return (ɵWindowMinimizeIcon_BaseFactory || (ɵWindowMinimizeIcon_BaseFactory = i0.ɵɵgetInheritedFactory(WindowMinimizeIcon)))(__ngFactoryType__ || WindowMinimizeIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: WindowMinimizeIcon,\n      selectors: [[\"WindowMinimizeIcon\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 6,\n      vars: 7,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\", \"d\", \"M11.8 0H2.2C1.61652 0 1.05694 0.231785 0.644365 0.644365C0.231785 1.05694 0 1.61652 0 2.2V7C0 7.15913 0.063214 7.31174 0.175736 7.42426C0.288258 7.53679 0.44087 7.6 0.6 7.6C0.75913 7.6 0.911742 7.53679 1.02426 7.42426C1.13679 7.31174 1.2 7.15913 1.2 7V2.2C1.2 1.93478 1.30536 1.68043 1.49289 1.49289C1.68043 1.30536 1.93478 1.2 2.2 1.2H11.8C12.0652 1.2 12.3196 1.30536 12.5071 1.49289C12.6946 1.68043 12.8 1.93478 12.8 2.2V11.8C12.8 12.0652 12.6946 12.3196 12.5071 12.5071C12.3196 12.6946 12.0652 12.8 11.8 12.8H7C6.84087 12.8 6.68826 12.8632 6.57574 12.9757C6.46321 13.0883 6.4 13.2409 6.4 13.4C6.4 13.5591 6.46321 13.7117 6.57574 13.8243C6.68826 13.9368 6.84087 14 7 14H11.8C12.3835 14 12.9431 13.7682 13.3556 13.3556C13.7682 12.9431 14 12.3835 14 11.8V2.2C14 1.61652 13.7682 1.05694 13.3556 0.644365C12.9431 0.231785 12.3835 0 11.8 0ZM6.368 7.952C6.44137 7.98326 6.52025 7.99958 6.6 8H9.8C9.95913 8 10.1117 7.93678 10.2243 7.82426C10.3368 7.71174 10.4 7.55913 10.4 7.4C10.4 7.24087 10.3368 7.08826 10.2243 6.97574C10.1117 6.86321 9.95913 6.8 9.8 6.8H8.048L10.624 4.224C10.73 4.11026 10.7877 3.95982 10.7849 3.80438C10.7822 3.64894 10.7192 3.50063 10.6093 3.3907C10.4994 3.28077 10.3511 3.2178 10.1956 3.21506C10.0402 3.21232 9.88974 3.27002 9.776 3.376L7.2 5.952V4.2C7.2 4.04087 7.13679 3.88826 7.02426 3.77574C6.91174 3.66321 6.75913 3.6 6.6 3.6C6.44087 3.6 6.28826 3.66321 6.17574 3.77574C6.06321 3.88826 6 4.04087 6 4.2V7.4C6.00042 7.47975 6.01674 7.55862 6.048 7.632C6.07656 7.70442 6.11971 7.7702 6.17475 7.82524C6.2298 7.88029 6.29558 7.92344 6.368 7.952ZM1.4 8.80005H3.8C4.17066 8.80215 4.52553 8.95032 4.78763 9.21242C5.04973 9.47452 5.1979 9.82939 5.2 10.2V12.6C5.1979 12.9707 5.04973 13.3256 4.78763 13.5877C4.52553 13.8498 4.17066 13.9979 3.8 14H1.4C1.02934 13.9979 0.674468 13.8498 0.412371 13.5877C0.150274 13.3256 0.00210008 12.9707 0 12.6V10.2C0.00210008 9.82939 0.150274 9.47452 0.412371 9.21242C0.674468 8.95032 1.02934 8.80215 1.4 8.80005ZM3.94142 12.7415C3.97893 12.704 4 12.6531 4 12.6V10.2C4 10.147 3.97893 10.0961 3.94142 10.0586C3.90391 10.0211 3.85304 10 3.8 10H1.4C1.34696 10 1.29609 10.0211 1.25858 10.0586C1.22107 10.0961 1.2 10.147 1.2 10.2V12.6C1.2 12.6531 1.22107 12.704 1.25858 12.7415C1.29609 12.779 1.34696 12.8 1.4 12.8H3.8C3.85304 12.8 3.90391 12.779 3.94142 12.7415Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n      template: function WindowMinimizeIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0)(1, \"g\");\n          i0.ɵɵelement(2, \"path\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"defs\")(4, \"clipPath\", 2);\n          i0.ɵɵelement(5, \"rect\", 3);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n          i0.ɵɵadvance();\n          i0.ɵɵattribute(\"clip-path\", ctx.pathId);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"id\", ctx.pathId);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return WindowMinimizeIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { WindowMinimizeIcon };\n","import { isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, NgZone, effect, Directive, NgModule } from '@angular/core';\nimport { removeClass, getHeight, getWidth, getOuterWidth, getOuterHeight, getOffset, addClass, remove } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nconst theme = ({\n  dt\n}) => `\n/* For PrimeNG */\n.p-ripple {\n    overflow: hidden;\n    position: relative;\n}\n\n.p-ink {\n    display: block;\n    position: absolute;\n    background: ${dt('ripple.background')};\n    border-radius: 100%;\n    transform: scale(0);\n}\n\n.p-ink-active {\n    animation: ripple 0.4s linear;\n}\n\n.p-ripple-disabled .p-ink {\n    display: none !important;\n}\n\n@keyframes ripple {\n    100% {\n        opacity: 0;\n        transform: scale(2.5);\n    }\n}\n`;\nconst classes = {\n  root: 'p-ink'\n};\nlet RippleStyle = /*#__PURE__*/(() => {\n  class RippleStyle extends BaseStyle {\n    name = 'ripple';\n    theme = theme;\n    classes = classes;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵRippleStyle_BaseFactory;\n      return function RippleStyle_Factory(__ngFactoryType__) {\n        return (ɵRippleStyle_BaseFactory || (ɵRippleStyle_BaseFactory = i0.ɵɵgetInheritedFactory(RippleStyle)))(__ngFactoryType__ || RippleStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RippleStyle,\n      factory: RippleStyle.ɵfac\n    });\n  }\n  return RippleStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * Ripple directive adds ripple effect to the host element.\n *\n * [Live Demo](https://www.primeng.org/ripple)\n *\n * @module ripplestyle\n *\n */\nvar RippleClasses = /*#__PURE__*/function (RippleClasses) {\n  /**\n   * Class name of the root element\n   */\n  RippleClasses[\"root\"] = \"p-ink\";\n  return RippleClasses;\n}(RippleClasses || {});\n/**\n * Ripple directive adds ripple effect to the host element.\n * @group Components\n */\nlet Ripple = /*#__PURE__*/(() => {\n  class Ripple extends BaseComponent {\n    zone = inject(NgZone);\n    _componentStyle = inject(RippleStyle);\n    animationListener;\n    mouseDownListener;\n    timeout;\n    constructor() {\n      super();\n      effect(() => {\n        if (isPlatformBrowser(this.platformId)) {\n          if (this.config.ripple()) {\n            this.zone.runOutsideAngular(() => {\n              this.create();\n              this.mouseDownListener = this.renderer.listen(this.el.nativeElement, 'mousedown', this.onMouseDown.bind(this));\n            });\n          } else {\n            this.remove();\n          }\n        }\n      });\n    }\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n    }\n    onMouseDown(event) {\n      let ink = this.getInk();\n      if (!ink || this.document.defaultView?.getComputedStyle(ink, null).display === 'none') {\n        return;\n      }\n      removeClass(ink, 'p-ink-active');\n      if (!getHeight(ink) && !getWidth(ink)) {\n        let d = Math.max(getOuterWidth(this.el.nativeElement), getOuterHeight(this.el.nativeElement));\n        ink.style.height = d + 'px';\n        ink.style.width = d + 'px';\n      }\n      let offset = getOffset(this.el.nativeElement);\n      let x = event.pageX - offset.left + this.document.body.scrollTop - getWidth(ink) / 2;\n      let y = event.pageY - offset.top + this.document.body.scrollLeft - getHeight(ink) / 2;\n      this.renderer.setStyle(ink, 'top', y + 'px');\n      this.renderer.setStyle(ink, 'left', x + 'px');\n      addClass(ink, 'p-ink-active');\n      this.timeout = setTimeout(() => {\n        let ink = this.getInk();\n        if (ink) {\n          removeClass(ink, 'p-ink-active');\n        }\n      }, 401);\n    }\n    getInk() {\n      const children = this.el.nativeElement.children;\n      for (let i = 0; i < children.length; i++) {\n        if (typeof children[i].className === 'string' && children[i].className.indexOf('p-ink') !== -1) {\n          return children[i];\n        }\n      }\n      return null;\n    }\n    resetInk() {\n      let ink = this.getInk();\n      if (ink) {\n        removeClass(ink, 'p-ink-active');\n      }\n    }\n    onAnimationEnd(event) {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n      removeClass(event.currentTarget, 'p-ink-active');\n    }\n    create() {\n      let ink = this.renderer.createElement('span');\n      this.renderer.addClass(ink, 'p-ink');\n      this.renderer.appendChild(this.el.nativeElement, ink);\n      this.renderer.setAttribute(ink, 'aria-hidden', 'true');\n      this.renderer.setAttribute(ink, 'role', 'presentation');\n      if (!this.animationListener) {\n        this.animationListener = this.renderer.listen(ink, 'animationend', this.onAnimationEnd.bind(this));\n      }\n    }\n    remove() {\n      let ink = this.getInk();\n      if (ink) {\n        this.mouseDownListener && this.mouseDownListener();\n        this.animationListener && this.animationListener();\n        this.mouseDownListener = null;\n        this.animationListener = null;\n        remove(ink);\n      }\n    }\n    ngOnDestroy() {\n      if (this.config && this.config.ripple()) {\n        this.remove();\n      }\n      super.ngOnDestroy();\n    }\n    static ɵfac = function Ripple_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Ripple)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: Ripple,\n      selectors: [[\"\", \"pRipple\", \"\"]],\n      hostAttrs: [1, \"p-ripple\"],\n      features: [i0.ɵɵProvidersFeature([RippleStyle]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return Ripple;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet RippleModule = /*#__PURE__*/(() => {\n  class RippleModule {\n    static ɵfac = function RippleModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RippleModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: RippleModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return RippleModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ripple, RippleClasses, RippleModule, RippleStyle };\n","import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Directive, contentChild, computed, booleanAttribute, Input, EventEmitter, numberAttribute, ContentChildren, ContentChild, Output, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { addClass, isEmpty, findSingle } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { AutoFocus } from 'primeng/autofocus';\nimport * as i2 from 'primeng/badge';\nimport { BadgeModule } from 'primeng/badge';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { SpinnerIcon } from 'primeng/icons';\nimport { Ripple } from 'primeng/ripple';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"content\"];\nconst _c1 = [\"loading\"];\nconst _c2 = [\"icon\"];\nconst _c3 = [\"*\"];\nconst _c4 = a0 => ({\n  class: a0\n});\nfunction Button_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Button_ng_container_3_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.iconClass());\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"loadingicon\");\n  }\n}\nfunction Button_ng_container_3_ng_container_1_SpinnerIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SpinnerIcon\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"styleClass\", ctx_r0.spinnerIconClass())(\"spin\", true);\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"loadingicon\");\n  }\n}\nfunction Button_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Button_ng_container_3_ng_container_1_span_1_Template, 1, 3, \"span\", 6)(2, Button_ng_container_3_ng_container_1_SpinnerIcon_2_Template, 1, 4, \"SpinnerIcon\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loadingIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loadingIcon);\n  }\n}\nfunction Button_ng_container_3_2_ng_template_0_Template(rf, ctx) {}\nfunction Button_ng_container_3_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Button_ng_container_3_2_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loadingIconTemplate || ctx_r0._loadingIconTemplate);\n  }\n}\nfunction Button_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Button_ng_container_3_ng_container_1_Template, 3, 2, \"ng-container\", 2)(2, Button_ng_container_3_2_Template, 1, 1, null, 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loadingIconTemplate && !ctx_r0._loadingIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.loadingIconTemplate || ctx_r0._loadingIconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c4, ctx_r0.iconClass()));\n  }\n}\nfunction Button_ng_container_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r0.icon);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.iconClass());\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction Button_ng_container_4_2_ng_template_0_Template(rf, ctx) {}\nfunction Button_ng_container_4_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Button_ng_container_4_2_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.icon && (ctx_r0.iconTemplate || ctx_r0._iconTemplate));\n  }\n}\nfunction Button_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Button_ng_container_4_span_1_Template, 1, 4, \"span\", 11)(2, Button_ng_container_4_2_Template, 1, 1, null, 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.icon && !ctx_r0.iconTemplate && !ctx_r0._iconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconTemplate || ctx_r0._iconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c4, ctx_r0.iconClass()));\n  }\n}\nfunction Button_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"aria-hidden\", ctx_r0.icon && !ctx_r0.label)(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n  }\n}\nfunction Button_p_badge_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-badge\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r0.badge)(\"severity\", ctx_r0.badgeSeverity);\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-button {\n    display: inline-flex;\n    cursor: pointer;\n    user-select: none;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n    color: ${dt('button.primary.color')};\n    background: ${dt('button.primary.background')};\n    border: 1px solid ${dt('button.primary.border.color')};\n    padding-block: ${dt('button.padding.y')};\n    padding-inline: ${dt('button.padding.x')};\n    font-size: 1rem;\n    font-family: inherit;\n    font-feature-settings: inherit;\n    transition: background ${dt('button.transition.duration')}, color ${dt('button.transition.duration')}, border-color ${dt('button.transition.duration')},\n            outline-color ${dt('button.transition.duration')}, box-shadow ${dt('button.transition.duration')};\n    border-radius: ${dt('button.border.radius')};\n    outline-color: transparent;\n    gap: ${dt('button.gap')};\n}\n\n.p-button-icon,\n.p-button-icon:before,\n.p-button-icon:after {\n    line-height: inherit;\n}\n\n.p-button:disabled {\n    cursor: default;\n}\n\n.p-button-icon-right {\n    order: 1;\n}\n\n.p-button-icon-right:dir(rtl) {\n    order: -1;\n}\n\n.p-button:not(.p-button-vertical) .p-button-icon:not(.p-button-icon-right):dir(rtl) {\n    order: 1;\n}\n\n.p-button-icon-bottom {\n    order: 2;\n}\n\n.p-button-icon-only {\n    width: ${dt('button.icon.only.width')};\n    padding-inline-start: 0;\n    padding-inline-end: 0;\n    gap: 0;\n}\n\n.p-button-icon-only.p-button-rounded {\n    border-radius: 50%;\n    height: ${dt('button.icon.only.width')};\n}\n\n.p-button-icon-only .p-button-label {\n    visibility: hidden;\n    width: 0;\n}\n\n.p-button-sm {\n    font-size: ${dt('button.sm.font.size')};\n    padding-block: ${dt('button.sm.padding.y')};\n    padding-inline: ${dt('button.sm.padding.x')};\n}\n\n.p-button-sm .p-button-icon {\n    font-size: ${dt('button.sm.font.size')};\n}\n\n.p-button-lg {\n    font-size: ${dt('button.lg.font.size')};\n    padding-block: ${dt('button.lg.padding.y')};\n    padding-inline: ${dt('button.lg.padding.x')};\n}\n\n.p-button-lg .p-button-icon {\n    font-size: ${dt('button.lg.font.size')};\n}\n\n.p-button-vertical {\n    flex-direction: column;\n}\n\n.p-button-label {\n    font-weight: ${dt('button.label.font.weight')};\n}\n\n.p-button-fluid {\n    width: 100%;\n}\n\n.p-button-fluid.p-button-icon-only {\n    width: ${dt('button.icon.only.width')};\n}\n\n.p-button:not(:disabled):hover {\n    background: ${dt('button.primary.hover.background')};\n    border: 1px solid ${dt('button.primary.hover.border.color')};\n    color: ${dt('button.primary.hover.color')};\n}\n\n.p-button:not(:disabled):active {\n    background: ${dt('button.primary.active.background')};\n    border: 1px solid ${dt('button.primary.active.border.color')};\n    color: ${dt('button.primary.active.color')};\n}\n\n.p-button:focus-visible {\n    box-shadow: ${dt('button.primary.focus.ring.shadow')};\n    outline: ${dt('button.focus.ring.width')} ${dt('button.focus.ring.style')} ${dt('button.primary.focus.ring.color')};\n    outline-offset: ${dt('button.focus.ring.offset')};\n}\n\n.p-button .p-badge {\n    min-width: ${dt('button.badge.size')};\n    height: ${dt('button.badge.size')};\n    line-height: ${dt('button.badge.size')};\n}\n\n.p-button-raised {\n    box-shadow: ${dt('button.raised.shadow')};\n}\n\n.p-button-rounded {\n    border-radius: ${dt('button.rounded.border.radius')};\n}\n\n.p-button-secondary {\n    background: ${dt('button.secondary.background')};\n    border: 1px solid ${dt('button.secondary.border.color')};\n    color: ${dt('button.secondary.color')};\n}\n\n.p-button-secondary:not(:disabled):hover {\n    background: ${dt('button.secondary.hover.background')};\n    border: 1px solid ${dt('button.secondary.hover.border.color')};\n    color: ${dt('button.secondary.hover.color')};\n}\n\n.p-button-secondary:not(:disabled):active {\n    background: ${dt('button.secondary.active.background')};\n    border: 1px solid ${dt('button.secondary.active.border.color')};\n    color: ${dt('button.secondary.active.color')};\n}\n\n.p-button-secondary:focus-visible {\n    outline-color: ${dt('button.secondary.focus.ring.color')};\n    box-shadow: ${dt('button.secondary.focus.ring.shadow')};\n}\n\n.p-button-success {\n    background: ${dt('button.success.background')};\n    border: 1px solid ${dt('button.success.border.color')};\n    color: ${dt('button.success.color')};\n}\n\n.p-button-success:not(:disabled):hover {\n    background: ${dt('button.success.hover.background')};\n    border: 1px solid ${dt('button.success.hover.border.color')};\n    color: ${dt('button.success.hover.color')};\n}\n\n.p-button-success:not(:disabled):active {\n    background: ${dt('button.success.active.background')};\n    border: 1px solid ${dt('button.success.active.border.color')};\n    color: ${dt('button.success.active.color')};\n}\n\n.p-button-success:focus-visible {\n    outline-color: ${dt('button.success.focus.ring.color')};\n    box-shadow: ${dt('button.success.focus.ring.shadow')};\n}\n\n.p-button-info {\n    background: ${dt('button.info.background')};\n    border: 1px solid ${dt('button.info.border.color')};\n    color: ${dt('button.info.color')};\n}\n\n.p-button-info:not(:disabled):hover {\n    background: ${dt('button.info.hover.background')};\n    border: 1px solid ${dt('button.info.hover.border.color')};\n    color: ${dt('button.info.hover.color')};\n}\n\n.p-button-info:not(:disabled):active {\n    background: ${dt('button.info.active.background')};\n    border: 1px solid ${dt('button.info.active.border.color')};\n    color: ${dt('button.info.active.color')};\n}\n\n.p-button-info:focus-visible {\n    outline-color: ${dt('button.info.focus.ring.color')};\n    box-shadow: ${dt('button.info.focus.ring.shadow')};\n}\n\n.p-button-warn {\n    background: ${dt('button.warn.background')};\n    border: 1px solid ${dt('button.warn.border.color')};\n    color: ${dt('button.warn.color')};\n}\n\n.p-button-warn:not(:disabled):hover {\n    background: ${dt('button.warn.hover.background')};\n    border: 1px solid ${dt('button.warn.hover.border.color')};\n    color: ${dt('button.warn.hover.color')};\n}\n\n.p-button-warn:not(:disabled):active {\n    background: ${dt('button.warn.active.background')};\n    border: 1px solid ${dt('button.warn.active.border.color')};\n    color: ${dt('button.warn.active.color')};\n}\n\n.p-button-warn:focus-visible {\n    outline-color: ${dt('button.warn.focus.ring.color')};\n    box-shadow: ${dt('button.warn.focus.ring.shadow')};\n}\n\n.p-button-help {\n    background: ${dt('button.help.background')};\n    border: 1px solid ${dt('button.help.border.color')};\n    color: ${dt('button.help.color')};\n}\n\n.p-button-help:not(:disabled):hover {\n    background: ${dt('button.help.hover.background')};\n    border: 1px solid ${dt('button.help.hover.border.color')};\n    color: ${dt('button.help.hover.color')};\n}\n\n.p-button-help:not(:disabled):active {\n    background: ${dt('button.help.active.background')};\n    border: 1px solid ${dt('button.help.active.border.color')};\n    color: ${dt('button.help.active.color')};\n}\n\n.p-button-help:focus-visible {\n    outline-color: ${dt('button.help.focus.ring.color')};\n    box-shadow: ${dt('button.help.focus.ring.shadow')};\n}\n\n.p-button-danger {\n    background: ${dt('button.danger.background')};\n    border: 1px solid ${dt('button.danger.border.color')};\n    color: ${dt('button.danger.color')};\n}\n\n.p-button-danger:not(:disabled):hover {\n    background: ${dt('button.danger.hover.background')};\n    border: 1px solid ${dt('button.danger.hover.border.color')};\n    color: ${dt('button.danger.hover.color')};\n}\n\n.p-button-danger:not(:disabled):active {\n    background: ${dt('button.danger.active.background')};\n    border: 1px solid ${dt('button.danger.active.border.color')};\n    color: ${dt('button.danger.active.color')};\n}\n\n.p-button-danger:focus-visible {\n    outline-color: ${dt('button.danger.focus.ring.color')};\n    box-shadow: ${dt('button.danger.focus.ring.shadow')};\n}\n\n.p-button-contrast {\n    background: ${dt('button.contrast.background')};\n    border: 1px solid ${dt('button.contrast.border.color')};\n    color: ${dt('button.contrast.color')};\n}\n\n.p-button-contrast:not(:disabled):hover {\n    background: ${dt('button.contrast.hover.background')};\n    border: 1px solid ${dt('button.contrast.hover.border.color')};\n    color: ${dt('button.contrast.hover.color')};\n}\n\n.p-button-contrast:not(:disabled):active {\n    background: ${dt('button.contrast.active.background')};\n    border: 1px solid ${dt('button.contrast.active.border.color')};\n    color: ${dt('button.contrast.active.color')};\n}\n\n.p-button-contrast:focus-visible {\n    outline-color: ${dt('button.contrast.focus.ring.color')};\n    box-shadow: ${dt('button.contrast.focus.ring.shadow')};\n}\n\n.p-button-outlined {\n    background: transparent;\n    border-color: ${dt('button.outlined.primary.border.color')};\n    color: ${dt('button.outlined.primary.color')};\n}\n\n.p-button-outlined:not(:disabled):hover {\n    background: ${dt('button.outlined.primary.hover.background')};\n    border-color: ${dt('button.outlined.primary.border.color')};\n    color: ${dt('button.outlined.primary.color')};\n}\n\n.p-button-outlined:not(:disabled):active {\n    background: ${dt('button.outlined.primary.active.background')};\n    border-color: ${dt('button.outlined.primary.border.color')};\n    color: ${dt('button.outlined.primary.color')};\n}\n\n.p-button-outlined.p-button-secondary {\n    border-color: ${dt('button.outlined.secondary.border.color')};\n    color: ${dt('button.outlined.secondary.color')};\n}\n\n.p-button-outlined.p-button-secondary:not(:disabled):hover {\n    background: ${dt('button.outlined.secondary.hover.background')};\n    border-color: ${dt('button.outlined.secondary.border.color')};\n    color: ${dt('button.outlined.secondary.color')};\n}\n\n.p-button-outlined.p-button-secondary:not(:disabled):active {\n    background: ${dt('button.outlined.secondary.active.background')};\n    border-color: ${dt('button.outlined.secondary.border.color')};\n    color: ${dt('button.outlined.secondary.color')};\n}\n\n.p-button-outlined.p-button-success {\n    border-color: ${dt('button.outlined.success.border.color')};\n    color: ${dt('button.outlined.success.color')};\n}\n\n.p-button-outlined.p-button-success:not(:disabled):hover {\n    background: ${dt('button.outlined.success.hover.background')};\n    border-color: ${dt('button.outlined.success.border.color')};\n    color: ${dt('button.outlined.success.color')};\n}\n\n.p-button-outlined.p-button-success:not(:disabled):active {\n    background: ${dt('button.outlined.success.active.background')};\n    border-color: ${dt('button.outlined.success.border.color')};\n    color: ${dt('button.outlined.success.color')};\n}\n\n.p-button-outlined.p-button-info {\n    border-color: ${dt('button.outlined.info.border.color')};\n    color: ${dt('button.outlined.info.color')};\n}\n\n.p-button-outlined.p-button-info:not(:disabled):hover {\n    background: ${dt('button.outlined.info.hover.background')};\n    border-color: ${dt('button.outlined.info.border.color')};\n    color: ${dt('button.outlined.info.color')};\n}\n\n.p-button-outlined.p-button-info:not(:disabled):active {\n    background: ${dt('button.outlined.info.active.background')};\n    border-color: ${dt('button.outlined.info.border.color')};\n    color: ${dt('button.outlined.info.color')};\n}\n\n.p-button-outlined.p-button-warn {\n    border-color: ${dt('button.outlined.warn.border.color')};\n    color: ${dt('button.outlined.warn.color')};\n}\n\n.p-button-outlined.p-button-warn:not(:disabled):hover {\n    background: ${dt('button.outlined.warn.hover.background')};\n    border-color: ${dt('button.outlined.warn.border.color')};\n    color: ${dt('button.outlined.warn.color')};\n}\n\n.p-button-outlined.p-button-warn:not(:disabled):active {\n    background: ${dt('button.outlined.warn.active.background')};\n    border-color: ${dt('button.outlined.warn.border.color')};\n    color: ${dt('button.outlined.warn.color')};\n}\n\n.p-button-outlined.p-button-help {\n    border-color: ${dt('button.outlined.help.border.color')};\n    color: ${dt('button.outlined.help.color')};\n}\n\n.p-button-outlined.p-button-help:not(:disabled):hover {\n    background: ${dt('button.outlined.help.hover.background')};\n    border-color: ${dt('button.outlined.help.border.color')};\n    color: ${dt('button.outlined.help.color')};\n}\n\n.p-button-outlined.p-button-help:not(:disabled):active {\n    background: ${dt('button.outlined.help.active.background')};\n    border-color: ${dt('button.outlined.help.border.color')};\n    color: ${dt('button.outlined.help.color')};\n}\n\n.p-button-outlined.p-button-danger {\n    border-color: ${dt('button.outlined.danger.border.color')};\n    color: ${dt('button.outlined.danger.color')};\n}\n\n.p-button-outlined.p-button-danger:not(:disabled):hover {\n    background: ${dt('button.outlined.danger.hover.background')};\n    border-color: ${dt('button.outlined.danger.border.color')};\n    color: ${dt('button.outlined.danger.color')};\n}\n\n.p-button-outlined.p-button-danger:not(:disabled):active {\n    background: ${dt('button.outlined.danger.active.background')};\n    border-color: ${dt('button.outlined.danger.border.color')};\n    color: ${dt('button.outlined.danger.color')};\n}\n\n.p-button-outlined.p-button-contrast {\n    border-color: ${dt('button.outlined.contrast.border.color')};\n    color: ${dt('button.outlined.contrast.color')};\n}\n\n.p-button-outlined.p-button-contrast:not(:disabled):hover {\n    background: ${dt('button.outlined.contrast.hover.background')};\n    border-color: ${dt('button.outlined.contrast.border.color')};\n    color: ${dt('button.outlined.contrast.color')};\n}\n\n.p-button-outlined.p-button-contrast:not(:disabled):active {\n    background: ${dt('button.outlined.contrast.active.background')};\n    border-color: ${dt('button.outlined.contrast.border.color')};\n    color: ${dt('button.outlined.contrast.color')};\n}\n\n.p-button-outlined.p-button-plain {\n    border-color: ${dt('button.outlined.plain.border.color')};\n    color: ${dt('button.outlined.plain.color')};\n}\n\n.p-button-outlined.p-button-plain:not(:disabled):hover {\n    background: ${dt('button.outlined.plain.hover.background')};\n    border-color: ${dt('button.outlined.plain.border.color')};\n    color: ${dt('button.outlined.plain.color')};\n}\n\n.p-button-outlined.p-button-plain:not(:disabled):active {\n    background: ${dt('button.outlined.plain.active.background')};\n    border-color: ${dt('button.outlined.plain.border.color')};\n    color: ${dt('button.outlined.plain.color')};\n}\n\n.p-button-text {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.text.primary.color')};\n}\n\n.p-button-text:not(:disabled):hover {\n    background: ${dt('button.text.primary.hover.background')};\n    border-color: transparent;\n    color: ${dt('button.text.primary.color')};\n}\n\n.p-button-text:not(:disabled):active {\n    background: ${dt('button.text.primary.active.background')};\n    border-color: transparent;\n    color: ${dt('button.text.primary.color')};\n}\n\n.p-button-text.p-button-secondary {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.text.secondary.color')};\n}\n\n.p-button-text.p-button-secondary:not(:disabled):hover {\n    background: ${dt('button.text.secondary.hover.background')};\n    border-color: transparent;\n    color: ${dt('button.text.secondary.color')};\n}\n\n.p-button-text.p-button-secondary:not(:disabled):active {\n    background: ${dt('button.text.secondary.active.background')};\n    border-color: transparent;\n    color: ${dt('button.text.secondary.color')};\n}\n\n.p-button-text.p-button-success {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.text.success.color')};\n}\n\n.p-button-text.p-button-success:not(:disabled):hover {\n    background: ${dt('button.text.success.hover.background')};\n    border-color: transparent;\n    color: ${dt('button.text.success.color')};\n}\n\n.p-button-text.p-button-success:not(:disabled):active {\n    background: ${dt('button.text.success.active.background')};\n    border-color: transparent;\n    color: ${dt('button.text.success.color')};\n}\n\n.p-button-text.p-button-info {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.text.info.color')};\n}\n\n.p-button-text.p-button-info:not(:disabled):hover {\n    background: ${dt('button.text.info.hover.background')};\n    border-color: transparent;\n    color: ${dt('button.text.info.color')};\n}\n\n.p-button-text.p-button-info:not(:disabled):active {\n    background: ${dt('button.text.info.active.background')};\n    border-color: transparent;\n    color: ${dt('button.text.info.color')};\n}\n\n.p-button-text.p-button-warn {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.text.warn.color')};\n}\n\n.p-button-text.p-button-warn:not(:disabled):hover {\n    background: ${dt('button.text.warn.hover.background')};\n    border-color: transparent;\n    color: ${dt('button.text.warn.color')};\n}\n\n.p-button-text.p-button-warn:not(:disabled):active {\n    background: ${dt('button.text.warn.active.background')};\n    border-color: transparent;\n    color: ${dt('button.text.warn.color')};\n}\n\n.p-button-text.p-button-help {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.text.help.color')};\n}\n\n.p-button-text.p-button-help:not(:disabled):hover {\n    background: ${dt('button.text.help.hover.background')};\n    border-color: transparent;\n    color: ${dt('button.text.help.color')};\n}\n\n.p-button-text.p-button-help:not(:disabled):active {\n    background: ${dt('button.text.help.active.background')};\n    border-color: transparent;\n    color: ${dt('button.text.help.color')};\n}\n\n.p-button-text.p-button-danger {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.text.danger.color')};\n}\n\n.p-button-text.p-button-danger:not(:disabled):hover {\n    background: ${dt('button.text.danger.hover.background')};\n    border-color: transparent;\n    color: ${dt('button.text.danger.color')};\n}\n\n.p-button-text.p-button-danger:not(:disabled):active {\n    background: ${dt('button.text.danger.active.background')};\n    border-color: transparent;\n    color: ${dt('button.text.danger.color')};\n}\n\n.p-button-text.p-button-plain {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.text.plain.color')};\n}\n\n.p-button-text.p-button-plain:not(:disabled):hover {\n    background: ${dt('button.text.plain.hover.background')};\n    border-color: transparent;\n    color: ${dt('button.text.plain.color')};\n}\n\n.p-button-text.p-button-plain:not(:disabled):active {\n    background: ${dt('button.text.plain.active.background')};\n    border-color: transparent;\n    color: ${dt('button.text.plain.color')};\n}\n\n.p-button-text.p-button-contrast {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.text.contrast.color')};\n}\n\n.p-button-text.p-button-contrast:not(:disabled):hover {\n    background: ${dt('button.text.contrast.hover.background')};\n    border-color: transparent;\n    color: ${dt('button.text.contrast.color')};\n}\n\n.p-button-text.p-button-contrast:not(:disabled):active {\n    background: ${dt('button.text.contrast.active.background')};\n    border-color: transparent;\n    color: ${dt('button.text.contrast.color')};\n}\n\n.p-button-link {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.link.color')};\n}\n\n.p-button-link:not(:disabled):hover {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.link.hover.color')};\n}\n\n.p-button-link:not(:disabled):hover .p-button-label {\n    text-decoration: underline;\n}\n\n.p-button-link:not(:disabled):active {\n    background: transparent;\n    border-color: transparent;\n    color: ${dt('button.link.active.color')};\n}\n\n/* For PrimeNG */\n.p-button-icon-right {\n    order: 1;\n}\n\np-button[iconpos='right'] spinnericon {\n    order: 1;\n}\n`;\nconst classes = {\n  root: ({\n    instance,\n    props\n  }) => ['p-button p-component', {\n    'p-button-icon-only': instance.hasIcon && !props.label && !props.badge,\n    'p-button-vertical': (props.iconPos === 'top' || props.iconPos === 'bottom') && props.label,\n    'p-button-loading': props.loading,\n    'p-button-link': props.link,\n    [`p-button-${props.severity}`]: props.severity,\n    'p-button-raised': props.raised,\n    'p-button-rounded': props.rounded,\n    'p-button-text': props.text,\n    'p-button-outlined': props.outlined,\n    'p-button-sm': props.size === 'small',\n    'p-button-lg': props.size === 'large',\n    'p-button-plain': props.plain,\n    'p-button-fluid': props.fluid\n  }],\n  loadingIcon: 'p-button-loading-icon',\n  icon: ({\n    props\n  }) => ['p-button-icon', {\n    [`p-button-icon-${props.iconPos}`]: props.label\n  }],\n  label: 'p-button-label'\n};\nlet ButtonStyle = /*#__PURE__*/(() => {\n  class ButtonStyle extends BaseStyle {\n    name = 'button';\n    theme = theme;\n    classes = classes;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵButtonStyle_BaseFactory;\n      return function ButtonStyle_Factory(__ngFactoryType__) {\n        return (ɵButtonStyle_BaseFactory || (ɵButtonStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ButtonStyle)))(__ngFactoryType__ || ButtonStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ButtonStyle,\n      factory: ButtonStyle.ɵfac\n    });\n  }\n  return ButtonStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * Button is an extension to standard button element with icons and theming.\n *\n * [Live Demo](https://www.primeng.org/button/)\n *\n * @module buttonstyle\n *\n */\nvar ButtonClasses = /*#__PURE__*/function (ButtonClasses) {\n  /**\n   * Class name of the root element\n   */\n  ButtonClasses[\"root\"] = \"p-button\";\n  /**\n   * Class name of the loading icon element\n   */\n  ButtonClasses[\"loadingIcon\"] = \"p-button-loading-icon\";\n  /**\n   * Class name of the icon element\n   */\n  ButtonClasses[\"icon\"] = \"p-button-icon\";\n  /**\n   * Class name of the label element\n   */\n  ButtonClasses[\"label\"] = \"p-button-label\";\n  return ButtonClasses;\n}(ButtonClasses || {});\nconst INTERNAL_BUTTON_CLASSES = {\n  button: 'p-button',\n  component: 'p-component',\n  iconOnly: 'p-button-icon-only',\n  disabled: 'p-disabled',\n  loading: 'p-button-loading',\n  labelOnly: 'p-button-loading-label-only'\n};\nlet ButtonLabel = /*#__PURE__*/(() => {\n  class ButtonLabel extends BaseComponent {\n    _componentStyle = inject(ButtonStyle);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵButtonLabel_BaseFactory;\n      return function ButtonLabel_Factory(__ngFactoryType__) {\n        return (ɵButtonLabel_BaseFactory || (ɵButtonLabel_BaseFactory = i0.ɵɵgetInheritedFactory(ButtonLabel)))(__ngFactoryType__ || ButtonLabel);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ButtonLabel,\n      selectors: [[\"\", \"pButtonLabel\", \"\"]],\n      hostVars: 2,\n      hostBindings: function ButtonLabel_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"p-button-label\", true);\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([ButtonStyle]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return ButtonLabel;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ButtonIcon = /*#__PURE__*/(() => {\n  class ButtonIcon extends BaseComponent {\n    _componentStyle = inject(ButtonStyle);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵButtonIcon_BaseFactory;\n      return function ButtonIcon_Factory(__ngFactoryType__) {\n        return (ɵButtonIcon_BaseFactory || (ɵButtonIcon_BaseFactory = i0.ɵɵgetInheritedFactory(ButtonIcon)))(__ngFactoryType__ || ButtonIcon);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ButtonIcon,\n      selectors: [[\"\", \"pButtonIcon\", \"\"]],\n      hostVars: 2,\n      hostBindings: function ButtonIcon_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"p-button-icon\", true);\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([ButtonStyle]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return ButtonIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Button directive is an extension to button component.\n * @group Components\n */\nlet ButtonDirective = /*#__PURE__*/(() => {\n  class ButtonDirective extends BaseComponent {\n    /**\n     * Position of the icon.\n     * @deprecated utilize pButtonIcon and pButtonLabel directives.\n     * @group Props\n     */\n    iconPos = 'left';\n    /**\n     * Uses to pass attributes to the loading icon's DOM element.\n     * @deprecated utilize pButonIcon instead.\n     * @group Props\n     */\n    loadingIcon;\n    set label(val) {\n      this._label = val;\n      if (this.initialized) {\n        this.updateLabel();\n        this.updateIcon();\n        this.setStyleClass();\n      }\n    }\n    set icon(val) {\n      this._icon = val;\n      if (this.initialized) {\n        this.updateIcon();\n        this.setStyleClass();\n      }\n    }\n    /**\n     * Whether the button is in loading state.\n     * @group Props\n     */\n    get loading() {\n      return this._loading;\n    }\n    set loading(val) {\n      this._loading = val;\n      if (this.initialized) {\n        this.updateIcon();\n        this.setStyleClass();\n      }\n    }\n    _buttonProps;\n    iconSignal = contentChild(ButtonIcon);\n    labelSignal = contentChild(ButtonLabel);\n    isIconOnly = computed(() => !!(!this.labelSignal() && this.iconSignal()));\n    set buttonProps(val) {\n      this._buttonProps = val;\n      if (val && typeof val === 'object') {\n        //@ts-ignore\n        Object.entries(val).forEach(([k, v]) => this[`_${k}`] !== v && (this[`_${k}`] = v));\n      }\n    }\n    /**\n     * Defines the style of the button.\n     * @group Props\n     */\n    severity;\n    /**\n     * Add a shadow to indicate elevation.\n     * @group Props\n     */\n    raised = false;\n    /**\n     * Add a circular border radius to the button.\n     * @group Props\n     */\n    rounded = false;\n    /**\n     * Add a textual class to the button without a background initially.\n     * @group Props\n     */\n    text = false;\n    /**\n     * Add a border class without a background initially.\n     * @group Props\n     */\n    outlined = false;\n    /**\n     * Defines the size of the button.\n     * @group Props\n     */\n    size = null;\n    /**\n     * Add a plain textual class to the button without a background initially.\n     * @deprecated use variant property instead.\n     * @group Props\n     */\n    plain = false;\n    /**\n     * Spans 100% width of the container when enabled.\n     * @group Props\n     */\n    fluid;\n    _label;\n    _icon;\n    _loading = false;\n    initialized;\n    get htmlElement() {\n      return this.el.nativeElement;\n    }\n    _internalClasses = Object.values(INTERNAL_BUTTON_CLASSES);\n    isTextButton = computed(() => !!(!this.iconSignal() && this.labelSignal() && this.text));\n    /**\n     * Text of the button.\n     * @deprecated use pButtonLabel directive instead.\n     * @group Props\n     */\n    get label() {\n      return this._label;\n    }\n    /**\n     * Name of the icon.\n     * @deprecated use pButtonIcon directive instead\n     * @group Props\n     */\n    get icon() {\n      return this._icon;\n    }\n    /**\n     * Used to pass all properties of the ButtonProps to the Button component.\n     * @deprecated assign props directly to the button element.\n     * @group Props\n     */\n    get buttonProps() {\n      return this._buttonProps;\n    }\n    spinnerIcon = `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"p-icon-spin\">\n        <g clip-path=\"url(#clip0_417_21408)\">\n            <path\n                d=\"M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z\"\n                fill=\"currentColor\"\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0_417_21408\">\n                <rect width=\"14\" height=\"14\" fill=\"white\" />\n            </clipPath>\n        </defs>\n    </svg>`;\n    _componentStyle = inject(ButtonStyle);\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      addClass(this.htmlElement, this.getStyleClass().join(' '));\n      this.createIcon();\n      this.createLabel();\n      this.initialized = true;\n    }\n    ngOnChanges(simpleChanges) {\n      super.ngOnChanges(simpleChanges);\n      const {\n        buttonProps\n      } = simpleChanges;\n      if (buttonProps) {\n        const props = buttonProps.currentValue;\n        for (const property in props) {\n          this[property] = props[property];\n        }\n      }\n    }\n    getStyleClass() {\n      const styleClass = [INTERNAL_BUTTON_CLASSES.button, INTERNAL_BUTTON_CLASSES.component];\n      if (this.icon && !this.label && isEmpty(this.htmlElement.textContent)) {\n        styleClass.push(INTERNAL_BUTTON_CLASSES.iconOnly);\n      }\n      if (this.loading) {\n        styleClass.push(INTERNAL_BUTTON_CLASSES.disabled, INTERNAL_BUTTON_CLASSES.loading);\n        if (!this.icon && this.label) {\n          styleClass.push(INTERNAL_BUTTON_CLASSES.labelOnly);\n        }\n        if (this.icon && !this.label && !isEmpty(this.htmlElement.textContent)) {\n          styleClass.push(INTERNAL_BUTTON_CLASSES.iconOnly);\n        }\n      }\n      if (this.text) {\n        styleClass.push('p-button-text');\n      }\n      if (this.severity) {\n        styleClass.push(`p-button-${this.severity}`);\n      }\n      if (this.plain) {\n        styleClass.push('p-button-plain');\n      }\n      if (this.raised) {\n        styleClass.push('p-button-raised');\n      }\n      if (this.size) {\n        styleClass.push(`p-button-${this.size}`);\n      }\n      if (this.outlined) {\n        styleClass.push('p-button-outlined');\n      }\n      if (this.rounded) {\n        styleClass.push('p-button-rounded');\n      }\n      if (this.size === 'small') {\n        styleClass.push('p-button-sm');\n      }\n      if (this.size === 'large') {\n        styleClass.push('p-button-lg');\n      }\n      if (this.hasFluid) {\n        styleClass.push('p-button-fluid');\n      }\n      return styleClass;\n    }\n    get hasFluid() {\n      const nativeElement = this.el.nativeElement;\n      const fluidComponent = nativeElement.closest('p-fluid');\n      return isEmpty(this.fluid) ? !!fluidComponent : this.fluid;\n    }\n    setStyleClass() {\n      const styleClass = this.getStyleClass();\n      this.htmlElement.classList.remove(...this._internalClasses);\n      this.htmlElement.classList.add(...styleClass);\n    }\n    createLabel() {\n      const created = findSingle(this.htmlElement, '.p-button-label');\n      if (!created && this.label) {\n        let labelElement = this.document.createElement('span');\n        if (this.icon && !this.label) {\n          labelElement.setAttribute('aria-hidden', 'true');\n        }\n        labelElement.className = 'p-button-label';\n        labelElement.appendChild(this.document.createTextNode(this.label));\n        this.htmlElement.appendChild(labelElement);\n      }\n    }\n    createIcon() {\n      const created = findSingle(this.htmlElement, '.p-button-icon');\n      if (!created && (this.icon || this.loading)) {\n        let iconElement = this.document.createElement('span');\n        iconElement.className = 'p-button-icon';\n        iconElement.setAttribute('aria-hidden', 'true');\n        let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n        if (iconPosClass) {\n          addClass(iconElement, iconPosClass);\n        }\n        let iconClass = this.getIconClass();\n        if (iconClass) {\n          addClass(iconElement, iconClass);\n        }\n        if (!this.loadingIcon && this.loading) {\n          iconElement.innerHTML = this.spinnerIcon;\n        }\n        this.htmlElement.insertBefore(iconElement, this.htmlElement.firstChild);\n      }\n    }\n    updateLabel() {\n      let labelElement = findSingle(this.htmlElement, '.p-button-label');\n      if (!this.label) {\n        labelElement && this.htmlElement.removeChild(labelElement);\n        return;\n      }\n      labelElement ? labelElement.textContent = this.label : this.createLabel();\n    }\n    updateIcon() {\n      let iconElement = findSingle(this.htmlElement, '.p-button-icon');\n      let labelElement = findSingle(this.htmlElement, '.p-button-label');\n      if (this.loading && !this.loadingIcon && iconElement) {\n        iconElement.innerHTML = this.spinnerIcon;\n      } else if (iconElement?.innerHTML) {\n        iconElement.innerHTML = '';\n      }\n      if (iconElement) {\n        if (this.iconPos) {\n          iconElement.className = 'p-button-icon ' + (labelElement ? 'p-button-icon-' + this.iconPos : '') + ' ' + this.getIconClass();\n        } else {\n          iconElement.className = 'p-button-icon ' + this.getIconClass();\n        }\n      } else {\n        this.createIcon();\n      }\n    }\n    getIconClass() {\n      return this.loading ? 'p-button-loading-icon ' + (this.loadingIcon ? this.loadingIcon : 'p-icon') : this.icon || 'p-hidden';\n    }\n    ngOnDestroy() {\n      this.initialized = false;\n      super.ngOnDestroy();\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵButtonDirective_BaseFactory;\n      return function ButtonDirective_Factory(__ngFactoryType__) {\n        return (ɵButtonDirective_BaseFactory || (ɵButtonDirective_BaseFactory = i0.ɵɵgetInheritedFactory(ButtonDirective)))(__ngFactoryType__ || ButtonDirective);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ButtonDirective,\n      selectors: [[\"\", \"pButton\", \"\"]],\n      contentQueries: function ButtonDirective_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuerySignal(dirIndex, ctx.iconSignal, ButtonIcon, 5);\n          i0.ɵɵcontentQuerySignal(dirIndex, ctx.labelSignal, ButtonLabel, 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵqueryAdvance(2);\n        }\n      },\n      hostVars: 4,\n      hostBindings: function ButtonDirective_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"p-button-icon-only\", ctx.isIconOnly())(\"p-button-text\", ctx.isTextButton());\n        }\n      },\n      inputs: {\n        iconPos: \"iconPos\",\n        loadingIcon: \"loadingIcon\",\n        loading: \"loading\",\n        severity: \"severity\",\n        raised: [2, \"raised\", \"raised\", booleanAttribute],\n        rounded: [2, \"rounded\", \"rounded\", booleanAttribute],\n        text: [2, \"text\", \"text\", booleanAttribute],\n        outlined: [2, \"outlined\", \"outlined\", booleanAttribute],\n        size: \"size\",\n        plain: [2, \"plain\", \"plain\", booleanAttribute],\n        fluid: [2, \"fluid\", \"fluid\", booleanAttribute],\n        label: \"label\",\n        icon: \"icon\",\n        buttonProps: \"buttonProps\"\n      },\n      features: [i0.ɵɵProvidersFeature([ButtonStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return ButtonDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Button is an extension to standard button element with icons and theming.\n * @group Components\n */\nlet Button = /*#__PURE__*/(() => {\n  class Button extends BaseComponent {\n    /**\n     * Type of the button.\n     * @group Props\n     */\n    type = 'button';\n    /**\n     * Position of the icon.\n     * @group Props\n     */\n    iconPos = 'left';\n    /**\n     * Name of the icon.\n     * @group Props\n     */\n    icon;\n    /**\n     * Value of the badge.\n     * @group Props\n     */\n    badge;\n    /**\n     * Uses to pass attributes to the label's DOM element.\n     * @group Props\n     */\n    label;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Whether the button is in loading state.\n     * @group Props\n     */\n    loading = false;\n    /**\n     * Icon to display in loading state.\n     * @group Props\n     */\n    loadingIcon;\n    /**\n     * Add a shadow to indicate elevation.\n     * @group Props\n     */\n    raised = false;\n    /**\n     * Add a circular border radius to the button.\n     * @group Props\n     */\n    rounded = false;\n    /**\n     * Add a textual class to the button without a background initially.\n     * @group Props\n     */\n    text = false;\n    /**\n     * Add a plain textual class to the button without a background initially.\n     * @deprecated use variant property instead.\n     * @group Props\n     */\n    plain = false;\n    /**\n     * Defines the style of the button.\n     * @group Props\n     */\n    severity;\n    /**\n     * Add a border class without a background initially.\n     * @group Props\n     */\n    outlined = false;\n    /**\n     * Add a link style to the button.\n     * @group Props\n     */\n    link = false;\n    /**\n     * Add a tabindex to the button.\n     * @group Props\n     */\n    tabindex;\n    /**\n     * Defines the size of the button.\n     * @group Props\n     */\n    size;\n    /**\n     * Specifies the variant of the component.\n     * @group Props\n     */\n    variant;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the badge.\n     * @group Props\n     * @deprecated use badgeSeverity instead.\n     */\n    badgeClass;\n    /**\n     * Severity type of the badge.\n     * @group Props\n     * @defaultValue secondary\n     */\n    badgeSeverity = 'secondary';\n    /**\n     * Used to define a string that autocomplete attribute the current element.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    autofocus;\n    /**\n     * Spans 100% width of the container when enabled.\n     * @group Props\n     */\n    fluid;\n    /**\n     * Callback to execute when button is clicked.\n     * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (click).\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    onClick = new EventEmitter();\n    /**\n     * Callback to execute when button is focused.\n     * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (focus).\n     * @param {FocusEvent} event - Focus event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to execute when button loses focus.\n     * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (blur).\n     * @param {FocusEvent} event - Focus event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    /**\n     * Template of the content.\n     * @group Templates\n     **/\n    contentTemplate;\n    /**\n     * Template of the loading.\n     * @group Templates\n     **/\n    loadingIconTemplate;\n    /**\n     * Template of the icon.\n     * @group Templates\n     **/\n    iconTemplate;\n    _buttonProps;\n    /**\n     * Used to pass all properties of the ButtonProps to the Button component.\n     * @group Props\n     */\n    get buttonProps() {\n      return this._buttonProps;\n    }\n    set buttonProps(val) {\n      this._buttonProps = val;\n      if (val && typeof val === 'object') {\n        //@ts-ignore\n        Object.entries(val).forEach(([k, v]) => this[`_${k}`] !== v && (this[`_${k}`] = v));\n      }\n    }\n    get hasFluid() {\n      const nativeElement = this.el.nativeElement;\n      const fluidComponent = nativeElement.closest('p-fluid');\n      return isEmpty(this.fluid) ? !!fluidComponent : this.fluid;\n    }\n    _componentStyle = inject(ButtonStyle);\n    templates;\n    _contentTemplate;\n    _iconTemplate;\n    _loadingIconTemplate;\n    ngAfterContentInit() {\n      this.templates?.forEach(item => {\n        switch (item.getType()) {\n          case 'content':\n            this.contentTemplate = item.template;\n            break;\n          case 'icon':\n            this.iconTemplate = item.template;\n            break;\n          case 'loadingicon':\n            this.loadingIconTemplate = item.template;\n            break;\n          default:\n            this.contentTemplate = item.template;\n            break;\n        }\n      });\n    }\n    ngOnChanges(simpleChanges) {\n      super.ngOnChanges(simpleChanges);\n      const {\n        buttonProps\n      } = simpleChanges;\n      if (buttonProps) {\n        const props = buttonProps.currentValue;\n        for (const property in props) {\n          this[property] = props[property];\n        }\n      }\n    }\n    spinnerIconClass() {\n      return Object.entries(this.iconClass()).filter(([, value]) => !!value).reduce((acc, [key]) => acc + ` ${key}`, 'p-button-loading-icon');\n    }\n    iconClass() {\n      return {\n        [`p-button-loading-icon pi-spin ${this.loadingIcon ?? ''}`]: this.loading,\n        'p-button-icon': true,\n        'p-button-icon-left': this.iconPos === 'left' && this.label,\n        'p-button-icon-right': this.iconPos === 'right' && this.label,\n        'p-button-icon-top': this.iconPos === 'top' && this.label,\n        'p-button-icon-bottom': this.iconPos === 'bottom' && this.label\n      };\n    }\n    get buttonClass() {\n      return {\n        'p-button p-component': true,\n        'p-button-icon-only': (this.icon || this.iconTemplate || this.loadingIcon || this.loadingIconTemplate || this._loadingIconTemplate) && !this.label,\n        'p-button-vertical': (this.iconPos === 'top' || this.iconPos === 'bottom') && this.label,\n        'p-button-loading': this.loading,\n        'p-button-loading-label-only': this.loading && !this.icon && this.label && !this.loadingIcon && this.iconPos === 'left',\n        'p-button-link': this.link,\n        [`p-button-${this.severity}`]: this.severity,\n        'p-button-raised': this.raised,\n        'p-button-rounded': this.rounded,\n        'p-button-text': this.text || this.variant == 'text',\n        'p-button-outlined': this.outlined || this.variant == 'outlined',\n        'p-button-sm': this.size === 'small',\n        'p-button-lg': this.size === 'large',\n        'p-button-plain': this.plain,\n        'p-button-fluid': this.hasFluid,\n        [`${this.styleClass}`]: this.styleClass\n      };\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵButton_BaseFactory;\n      return function Button_Factory(__ngFactoryType__) {\n        return (ɵButton_BaseFactory || (ɵButton_BaseFactory = i0.ɵɵgetInheritedFactory(Button)))(__ngFactoryType__ || Button);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Button,\n      selectors: [[\"p-button\"]],\n      contentQueries: function Button_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n          i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n          i0.ɵɵcontentQuery(dirIndex, _c2, 5);\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingIconTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iconTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      inputs: {\n        type: \"type\",\n        iconPos: \"iconPos\",\n        icon: \"icon\",\n        badge: \"badge\",\n        label: \"label\",\n        disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n        loading: [2, \"loading\", \"loading\", booleanAttribute],\n        loadingIcon: \"loadingIcon\",\n        raised: [2, \"raised\", \"raised\", booleanAttribute],\n        rounded: [2, \"rounded\", \"rounded\", booleanAttribute],\n        text: [2, \"text\", \"text\", booleanAttribute],\n        plain: [2, \"plain\", \"plain\", booleanAttribute],\n        severity: \"severity\",\n        outlined: [2, \"outlined\", \"outlined\", booleanAttribute],\n        link: [2, \"link\", \"link\", booleanAttribute],\n        tabindex: [2, \"tabindex\", \"tabindex\", numberAttribute],\n        size: \"size\",\n        variant: \"variant\",\n        style: \"style\",\n        styleClass: \"styleClass\",\n        badgeClass: \"badgeClass\",\n        badgeSeverity: \"badgeSeverity\",\n        ariaLabel: \"ariaLabel\",\n        autofocus: [2, \"autofocus\", \"autofocus\", booleanAttribute],\n        fluid: [2, \"fluid\", \"fluid\", booleanAttribute],\n        buttonProps: \"buttonProps\"\n      },\n      outputs: {\n        onClick: \"onClick\",\n        onFocus: \"onFocus\",\n        onBlur: \"onBlur\"\n      },\n      features: [i0.ɵɵProvidersFeature([ButtonStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c3,\n      decls: 7,\n      vars: 14,\n      consts: [[\"pRipple\", \"\", 3, \"click\", \"focus\", \"blur\", \"ngStyle\", \"disabled\", \"ngClass\", \"pAutoFocus\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\"], [\"class\", \"p-button-label\", 4, \"ngIf\"], [3, \"value\", \"severity\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"styleClass\", \"spin\", 4, \"ngIf\"], [3, \"ngClass\"], [3, \"styleClass\", \"spin\"], [3, \"ngIf\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [1, \"p-button-label\"], [3, \"value\", \"severity\"]],\n      template: function Button_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function Button_Template_button_click_0_listener($event) {\n            return ctx.onClick.emit($event);\n          })(\"focus\", function Button_Template_button_focus_0_listener($event) {\n            return ctx.onFocus.emit($event);\n          })(\"blur\", function Button_Template_button_blur_0_listener($event) {\n            return ctx.onBlur.emit($event);\n          });\n          i0.ɵɵprojection(1);\n          i0.ɵɵtemplate(2, Button_ng_container_2_Template, 1, 0, \"ng-container\", 1)(3, Button_ng_container_3_Template, 3, 5, \"ng-container\", 2)(4, Button_ng_container_4_Template, 3, 5, \"ng-container\", 2)(5, Button_span_5_Template, 2, 3, \"span\", 3)(6, Button_p_badge_6_Template, 1, 2, \"p-badge\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"disabled\", ctx.disabled || ctx.loading)(\"ngClass\", ctx.buttonClass)(\"pAutoFocus\", ctx.autofocus);\n          i0.ɵɵattribute(\"type\", ctx.type)(\"aria-label\", ctx.ariaLabel)(\"data-pc-name\", \"button\")(\"data-pc-section\", \"root\")(\"tabindex\", ctx.tabindex);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate || ctx._contentTemplate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate && !ctx._contentTemplate && ctx.label);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate && !ctx._contentTemplate && ctx.badge);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, Ripple, AutoFocus, SpinnerIcon, BadgeModule, i2.Badge, SharedModule],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return Button;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ButtonModule = /*#__PURE__*/(() => {\n  class ButtonModule {\n    static ɵfac = function ButtonModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ButtonModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ButtonModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, Button, SharedModule, SharedModule]\n    });\n  }\n  return ButtonModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Button, ButtonClasses, ButtonDirective, ButtonIcon, ButtonLabel, ButtonModule, ButtonStyle };\n","import * as i0 from '@angular/core';\nimport { Injectable, inject, booleanAttribute, HostListener, Input, Optional, Directive, NgModule } from '@angular/core';\nimport { isEmpty } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nimport * as i1 from '@angular/forms';\nconst theme = ({\n  dt\n}) => `\n.p-inputtext {\n    font-family: inherit;\n    font-feature-settings: inherit;\n    font-size: 1rem;\n    color: ${dt('inputtext.color')};\n    background: ${dt('inputtext.background')};\n    padding-block: ${dt('inputtext.padding.y')};\n    padding-inline: ${dt('inputtext.padding.x')};\n    border: 1px solid ${dt('inputtext.border.color')};\n    transition: background ${dt('inputtext.transition.duration')}, color ${dt('inputtext.transition.duration')}, border-color ${dt('inputtext.transition.duration')}, outline-color ${dt('inputtext.transition.duration')}, box-shadow ${dt('inputtext.transition.duration')};\n    appearance: none;\n    border-radius: ${dt('inputtext.border.radius')};\n    outline-color: transparent;\n    box-shadow: ${dt('inputtext.shadow')};\n}\n\n.p-inputtext.ng-invalid.ng-dirty {\n    border-color: ${dt('inputtext.invalid.border.color')};\n}\n\n.p-inputtext:enabled:hover {\n    border-color: ${dt('inputtext.hover.border.color')};\n}\n\n.p-inputtext:enabled:focus {\n    border-color: ${dt('inputtext.focus.border.color')};\n    box-shadow: ${dt('inputtext.focus.ring.shadow')};\n    outline: ${dt('inputtext.focus.ring.width')} ${dt('inputtext.focus.ring.style')} ${dt('inputtext.focus.ring.color')};\n    outline-offset: ${dt('inputtext.focus.ring.offset')};\n}\n\n.p-inputtext.p-invalid {\n    border-color: ${dt('inputtext.invalid.border.color')};\n}\n\n.p-inputtext.p-variant-filled {\n    background: ${dt('inputtext.filled.background')};\n}\n    \n.p-inputtext.p-variant-filled:enabled:hover {\n    background: ${dt('inputtext.filled.hover.background')};\n}\n\n.p-inputtext.p-variant-filled:enabled:focus {\n    background: ${dt('inputtext.filled.focus.background')};\n}\n\n.p-inputtext:disabled {\n    opacity: 1;\n    background: ${dt('inputtext.disabled.background')};\n    color: ${dt('inputtext.disabled.color')};\n}\n\n.p-inputtext::placeholder {\n    color: ${dt('inputtext.placeholder.color')};\n}\n\n.p-inputtext.ng-invalid.ng-dirty::placeholder {\n    color: ${dt('inputtext.invalid.placeholder.color')};\n}\n\n.p-inputtext-sm {\n    font-size: ${dt('inputtext.sm.font.size')};\n    padding-block: ${dt('inputtext.sm.padding.y')};\n    padding-inline: ${dt('inputtext.sm.padding.x')};\n}\n\n.p-inputtext-lg {\n    font-size: ${dt('inputtext.lg.font.size')};\n    padding-block: ${dt('inputtext.lg.padding.y')};\n    padding-inline: ${dt('inputtext.lg.padding.x')};\n}\n\n.p-inputtext-fluid {\n    width: 100%;\n}\n`;\nconst classes = {\n  root: ({\n    instance,\n    props\n  }) => ['p-inputtext p-component', {\n    'p-filled': instance.filled,\n    'p-inputtext-sm': props.size === 'small',\n    'p-inputtext-lg': props.size === 'large',\n    'p-invalid': props.invalid,\n    'p-variant-filled': props.variant === 'filled',\n    'p-inputtext-fluid': props.fluid\n  }]\n};\nlet InputTextStyle = /*#__PURE__*/(() => {\n  class InputTextStyle extends BaseStyle {\n    name = 'inputtext';\n    theme = theme;\n    classes = classes;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵInputTextStyle_BaseFactory;\n      return function InputTextStyle_Factory(__ngFactoryType__) {\n        return (ɵInputTextStyle_BaseFactory || (ɵInputTextStyle_BaseFactory = i0.ɵɵgetInheritedFactory(InputTextStyle)))(__ngFactoryType__ || InputTextStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: InputTextStyle,\n      factory: InputTextStyle.ɵfac\n    });\n  }\n  return InputTextStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * InputText renders a text field to enter data.\n *\n * [Live Demo](https://www.primeng.org/inputtext/)\n *\n * @module inputtextstyle\n *\n */\nvar InputTextClasses = /*#__PURE__*/function (InputTextClasses) {\n  /**\n   * The class of root element\n   */\n  InputTextClasses[\"root\"] = \"p-inputtext\";\n  return InputTextClasses;\n}(InputTextClasses || {});\n/**\n * InputText directive is an extension to standard input element with theming.\n * @group Components\n */\nlet InputText = /*#__PURE__*/(() => {\n  class InputText extends BaseComponent {\n    ngModel;\n    /**\n     * Specifies the input variant of the component.\n     * @group Props\n     */\n    variant;\n    /**\n     * Spans 100% width of the container when enabled.\n     * @group Props\n     */\n    fluid;\n    /**\n     * Defines the size of the component.\n     * @group Props\n     */\n    pSize;\n    filled;\n    _componentStyle = inject(InputTextStyle);\n    get hasFluid() {\n      const nativeElement = this.el.nativeElement;\n      const fluidComponent = nativeElement.closest('p-fluid');\n      return isEmpty(this.fluid) ? !!fluidComponent : this.fluid;\n    }\n    constructor(ngModel) {\n      super();\n      this.ngModel = ngModel;\n    }\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      this.updateFilledState();\n      this.cd.detectChanges();\n    }\n    ngDoCheck() {\n      this.updateFilledState();\n    }\n    onInput() {\n      this.updateFilledState();\n    }\n    updateFilledState() {\n      this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length || this.ngModel && this.ngModel.model;\n    }\n    static ɵfac = function InputText_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InputText)(i0.ɵɵdirectiveInject(i1.NgModel, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: InputText,\n      selectors: [[\"\", \"pInputText\", \"\"]],\n      hostAttrs: [1, \"p-inputtext\", \"p-component\"],\n      hostVars: 14,\n      hostBindings: function InputText_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function InputText_input_HostBindingHandler($event) {\n            return ctx.onInput($event);\n          });\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          i0.ɵɵclassProp(\"p-filled\", ctx.filled)(\"p-variant-filled\", ((tmp_1_0 = ctx.variant) !== null && tmp_1_0 !== undefined ? tmp_1_0 : ctx.config.inputStyle() || ctx.config.inputVariant()) === \"filled\")(\"p-inputtext-fluid\", ctx.hasFluid)(\"p-inputtext-sm\", ctx.pSize === \"small\")(\"p-inputfield-sm\", ctx.pSize === \"small\")(\"p-inputtext-lg\", ctx.pSize === \"large\")(\"p-inputfield-lg\", ctx.pSize === \"large\");\n        }\n      },\n      inputs: {\n        variant: \"variant\",\n        fluid: [2, \"fluid\", \"fluid\", booleanAttribute],\n        pSize: \"pSize\"\n      },\n      features: [i0.ɵɵProvidersFeature([InputTextStyle]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return InputText;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet InputTextModule = /*#__PURE__*/(() => {\n  class InputTextModule {\n    static ɵfac = function InputTextModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InputTextModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: InputTextModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return InputTextModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputText, InputTextClasses, InputTextModule, InputTextStyle };\n","class ObjectUtils {\n  static isArray(value, empty = true) {\n    return Array.isArray(value) && (empty || value.length !== 0);\n  }\n  static isObject(value, empty = true) {\n    return typeof value === 'object' && !Array.isArray(value) && value != null && (empty || Object.keys(value).length !== 0);\n  }\n  static equals(obj1, obj2, field) {\n    if (field) return this.resolveFieldData(obj1, field) === this.resolveFieldData(obj2, field);else return this.equalsByValue(obj1, obj2);\n  }\n  static equalsByValue(obj1, obj2) {\n    if (obj1 === obj2) return true;\n    if (obj1 && obj2 && typeof obj1 == 'object' && typeof obj2 == 'object') {\n      var arrA = Array.isArray(obj1),\n        arrB = Array.isArray(obj2),\n        i,\n        length,\n        key;\n      if (arrA && arrB) {\n        length = obj1.length;\n        if (length != obj2.length) return false;\n        for (i = length; i-- !== 0;) if (!this.equalsByValue(obj1[i], obj2[i])) return false;\n        return true;\n      }\n      if (arrA != arrB) return false;\n      var dateA = this.isDate(obj1),\n        dateB = this.isDate(obj2);\n      if (dateA != dateB) return false;\n      if (dateA && dateB) return obj1.getTime() == obj2.getTime();\n      var regexpA = obj1 instanceof RegExp,\n        regexpB = obj2 instanceof RegExp;\n      if (regexpA != regexpB) return false;\n      if (regexpA && regexpB) return obj1.toString() == obj2.toString();\n      var keys = Object.keys(obj1);\n      length = keys.length;\n      if (length !== Object.keys(obj2).length) return false;\n      for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(obj2, keys[i])) return false;\n      for (i = length; i-- !== 0;) {\n        key = keys[i];\n        if (!this.equalsByValue(obj1[key], obj2[key])) return false;\n      }\n      return true;\n    }\n    return obj1 !== obj1 && obj2 !== obj2;\n  }\n  static resolveFieldData(data, field) {\n    if (data && field) {\n      if (this.isFunction(field)) {\n        return field(data);\n      } else if (field.indexOf('.') == -1) {\n        return data[field];\n      } else {\n        let fields = field.split('.');\n        let value = data;\n        for (let i = 0, len = fields.length; i < len; ++i) {\n          if (value == null) {\n            return null;\n          }\n          value = value[fields[i]];\n        }\n        return value;\n      }\n    } else {\n      return null;\n    }\n  }\n  static isFunction(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n  }\n  static reorderArray(value, from, to) {\n    let target;\n    if (value && from !== to) {\n      if (to >= value.length) {\n        to %= value.length;\n        from %= value.length;\n      }\n      value.splice(to, 0, value.splice(from, 1)[0]);\n    }\n  }\n  static insertIntoOrderedArray(item, index, arr, sourceArr) {\n    if (arr.length > 0) {\n      let injected = false;\n      for (let i = 0; i < arr.length; i++) {\n        let currentItemIndex = this.findIndexInList(arr[i], sourceArr);\n        if (currentItemIndex > index) {\n          arr.splice(i, 0, item);\n          injected = true;\n          break;\n        }\n      }\n      if (!injected) {\n        arr.push(item);\n      }\n    } else {\n      arr.push(item);\n    }\n  }\n  static findIndexInList(item, list) {\n    let index = -1;\n    if (list) {\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] == item) {\n          index = i;\n          break;\n        }\n      }\n    }\n    return index;\n  }\n  static contains(value, list) {\n    if (value != null && list && list.length) {\n      for (let val of list) {\n        if (this.equals(value, val)) return true;\n      }\n    }\n    return false;\n  }\n  static removeAccents(str) {\n    if (str) {\n      str = str.normalize('NFKD').replace(/\\p{Diacritic}/gu, '');\n    }\n    return str;\n  }\n  static isDate(input) {\n    return Object.prototype.toString.call(input) === '[object Date]';\n  }\n  static isEmpty(value) {\n    return value === null || value === undefined || value === '' || Array.isArray(value) && value.length === 0 || !this.isDate(value) && typeof value === 'object' && Object.keys(value).length === 0;\n  }\n  static isNotEmpty(value) {\n    return !this.isEmpty(value);\n  }\n  static compare(value1, value2, locale, order = 1) {\n    let result = -1;\n    const emptyValue1 = this.isEmpty(value1);\n    const emptyValue2 = this.isEmpty(value2);\n    if (emptyValue1 && emptyValue2) result = 0;else if (emptyValue1) result = order;else if (emptyValue2) result = -order;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2, locale, {\n      numeric: true\n    });else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n    return result;\n  }\n  static sort(value1, value2, order = 1, locale, nullSortOrder = 1) {\n    const result = ObjectUtils.compare(value1, value2, locale, order);\n    let finalSortOrder = order;\n    // nullSortOrder == 1 means Excel like sort nulls at bottom\n    if (ObjectUtils.isEmpty(value1) || ObjectUtils.isEmpty(value2)) {\n      finalSortOrder = nullSortOrder === 1 ? order : nullSortOrder;\n    }\n    return finalSortOrder * result;\n  }\n  static merge(obj1, obj2) {\n    if (obj1 == undefined && obj2 == undefined) {\n      return undefined;\n    } else if ((obj1 == undefined || typeof obj1 === 'object') && (obj2 == undefined || typeof obj2 === 'object')) {\n      return {\n        ...(obj1 || {}),\n        ...(obj2 || {})\n      };\n    } else if ((obj1 == undefined || typeof obj1 === 'string') && (obj2 == undefined || typeof obj2 === 'string')) {\n      return [obj1 || '', obj2 || ''].join(' ');\n    }\n    return obj2 || obj1;\n  }\n  static isPrintableCharacter(char = '') {\n    return this.isNotEmpty(char) && char.length === 1 && char.match(/\\S| /);\n  }\n  static getItemValue(obj, ...params) {\n    return this.isFunction(obj) ? obj(...params) : obj;\n  }\n  static findLastIndex(arr, callback) {\n    let index = -1;\n    if (this.isNotEmpty(arr)) {\n      try {\n        index = arr.findLastIndex(callback);\n      } catch {\n        index = arr.lastIndexOf([...arr].reverse().find(callback));\n      }\n    }\n    return index;\n  }\n  static findLast(arr, callback) {\n    let item;\n    if (this.isNotEmpty(arr)) {\n      try {\n        item = arr.findLast(callback);\n      } catch {\n        item = [...arr].reverse().find(callback);\n      }\n    }\n    return item;\n  }\n  static deepEquals(a, b) {\n    if (a === b) return true;\n    if (a && b && typeof a == 'object' && typeof b == 'object') {\n      var arrA = Array.isArray(a),\n        arrB = Array.isArray(b),\n        i,\n        length,\n        key;\n      if (arrA && arrB) {\n        length = a.length;\n        if (length != b.length) return false;\n        for (i = length; i-- !== 0;) if (!this.deepEquals(a[i], b[i])) return false;\n        return true;\n      }\n      if (arrA != arrB) return false;\n      var dateA = a instanceof Date,\n        dateB = b instanceof Date;\n      if (dateA != dateB) return false;\n      if (dateA && dateB) return a.getTime() == b.getTime();\n      var regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp;\n      if (regexpA != regexpB) return false;\n      if (regexpA && regexpB) return a.toString() == b.toString();\n      var keys = Object.keys(a);\n      length = keys.length;\n      if (length !== Object.keys(b).length) return false;\n      for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n      for (i = length; i-- !== 0;) {\n        key = keys[i];\n        if (!this.deepEquals(a[key], b[key])) return false;\n      }\n      return true;\n    }\n    return a !== a && b !== b;\n  }\n  static minifyCSS(css) {\n    return css ? css.replace(/\\/\\*(?:(?!\\*\\/)[\\s\\S])*\\*\\/|[\\r\\n\\t]+/g, '').replace(/ {2,}/g, ' ').replace(/ ([{:}]) /g, '$1').replace(/([;,]) /g, '$1').replace(/ !/g, '!').replace(/: /g, ':') : css;\n  }\n  static toFlatCase(str) {\n    // convert snake, kebab, camel and pascal cases to flat case\n    return this.isString(str) ? str.replace(/(-|_)/g, '').toLowerCase() : str;\n  }\n  static isString(value, empty = true) {\n    return typeof value === 'string' && (empty || value !== '');\n  }\n}\nvar lastId = 0;\nfunction UniqueComponentId(prefix = 'pn_id_') {\n  lastId++;\n  return `${prefix}${lastId}`;\n}\nfunction ZIndexUtils() {\n  let zIndexes = [];\n  const generateZIndex = (key, baseZIndex) => {\n    let lastZIndex = zIndexes.length > 0 ? zIndexes[zIndexes.length - 1] : {\n      key,\n      value: baseZIndex\n    };\n    let newZIndex = lastZIndex.value + (lastZIndex.key === key ? 0 : baseZIndex) + 2;\n    zIndexes.push({\n      key,\n      value: newZIndex\n    });\n    return newZIndex;\n  };\n  const revertZIndex = zIndex => {\n    zIndexes = zIndexes.filter(obj => obj.value !== zIndex);\n  };\n  const getCurrentZIndex = () => {\n    return zIndexes.length > 0 ? zIndexes[zIndexes.length - 1].value : 0;\n  };\n  const getZIndex = el => {\n    return el ? parseInt(el.style.zIndex, 10) || 0 : 0;\n  };\n  return {\n    get: getZIndex,\n    set: (key, el, baseZIndex) => {\n      if (el) {\n        el.style.zIndex = String(generateZIndex(key, baseZIndex));\n      }\n    },\n    clear: el => {\n      if (el) {\n        revertZIndex(getZIndex(el));\n        el.style.zIndex = '';\n      }\n    },\n    getCurrent: () => getCurrentZIndex(),\n    generateZIndex,\n    revertZIndex\n  };\n}\nvar zindexutils = ZIndexUtils();\nconst transformToBoolean = value => {\n  return !!value;\n};\nconst transformToNumber = value => {\n  return typeof value === 'string' ? parseFloat(value) : value;\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ObjectUtils, UniqueComponentId, zindexutils as ZIndexUtils, transformToBoolean, transformToNumber };\n","import { trigger, state, transition, style, animate, query, animateChild } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, inject, numberAttribute, ViewChild, Output, Input, ChangeDetectionStrategy, ViewEncapsulation, Component, booleanAttribute, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { uuid, isEmpty, setAttribute } from '@primeuix/utils';\nimport { SharedModule, MessageService, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { CheckIcon, ExclamationTriangleIcon, InfoCircleIcon, TimesIcon, TimesCircleIcon } from 'primeng/icons';\nimport { ZIndexUtils } from 'primeng/utils';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"container\"];\nconst _c1 = (a0, a1, a2, a3) => ({\n  showTransformParams: a0,\n  hideTransformParams: a1,\n  showTransitionParams: a2,\n  hideTransitionParams: a3\n});\nconst _c2 = a0 => ({\n  value: \"visible\",\n  params: a0\n});\nconst _c3 = (a0, a1) => ({\n  $implicit: a0,\n  closeFn: a1\n});\nconst _c4 = a0 => ({\n  $implicit: a0\n});\nfunction ToastItem_Conditional_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ToastItem_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ToastItem_Conditional_2_ng_container_0_Template, 1, 0, \"ng-container\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.headlessTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c3, ctx_r1.message, ctx_r1.onCloseIconClick));\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"messageIcon\"));\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_span_2_Case_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"CheckIcon\");\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_span_2_Case_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"InfoCircleIcon\");\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_span_2_Case_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"TimesCircleIcon\");\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_span_2_Case_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ExclamationTriangleIcon\");\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_span_2_Case_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"InfoCircleIcon\");\n  }\n  if (rf & 2) {\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"icon\");\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 4);\n    i0.ɵɵtemplate(1, ToastItem_Conditional_3_ng_container_1_span_2_Case_1_Template, 1, 2, \"CheckIcon\")(2, ToastItem_Conditional_3_ng_container_1_span_2_Case_2_Template, 1, 2, \"InfoCircleIcon\")(3, ToastItem_Conditional_3_ng_container_1_span_2_Case_3_Template, 1, 2, \"TimesCircleIcon\")(4, ToastItem_Conditional_3_ng_container_1_span_2_Case_4_Template, 1, 2, \"ExclamationTriangleIcon\")(5, ToastItem_Conditional_3_ng_container_1_span_2_Case_5_Template, 1, 2, \"InfoCircleIcon\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_7_0;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"messageIcon\"));\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"icon\");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional((tmp_7_0 = ctx_r1.message.severity) === \"success\" ? 1 : tmp_7_0 === \"info\" ? 2 : tmp_7_0 === \"error\" ? 3 : tmp_7_0 === \"warn\" ? 4 : 5);\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ToastItem_Conditional_3_ng_container_1_span_1_Template, 1, 1, \"span\", 6)(2, ToastItem_Conditional_3_ng_container_1_span_2_Template, 6, 4, \"span\", 6);\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"div\", 4);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 4);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.message.icon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.message.icon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"messageText\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"text\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"summary\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"summary\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.message.summary, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"detail\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"detail\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.message.detail);\n  }\n}\nfunction ToastItem_Conditional_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ToastItem_Conditional_3_Conditional_3_Conditional_2_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"closeIcon\"));\n  }\n}\nfunction ToastItem_Conditional_3_Conditional_3_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ToastItem_Conditional_3_Conditional_3_Conditional_2_span_0_Template, 1, 1, \"span\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.message.closeIcon);\n  }\n}\nfunction ToastItem_Conditional_3_Conditional_3_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"TimesIcon\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"closeIcon\"));\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"closeicon\");\n  }\n}\nfunction ToastItem_Conditional_3_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ToastItem_Conditional_3_Conditional_3_Template_button_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onCloseIconClick($event));\n    })(\"keydown.enter\", function ToastItem_Conditional_3_Conditional_3_Template_button_keydown_enter_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onCloseIconClick($event));\n    });\n    i0.ɵɵtemplate(2, ToastItem_Conditional_3_Conditional_3_Conditional_2_Template, 1, 1, \"span\", 4)(3, ToastItem_Conditional_3_Conditional_3_Conditional_3_Template, 1, 3, \"TimesIcon\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ariaLabel\", ctx_r1.closeAriaLabel);\n    i0.ɵɵattribute(\"class\", ctx_r1.cx(\"closeButton\"))(\"data-pc-section\", \"closebutton\");\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r1.message.closeIcon ? 2 : 3);\n  }\n}\nfunction ToastItem_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, ToastItem_Conditional_3_ng_container_1_Template, 8, 10, \"ng-container\", 5)(2, ToastItem_Conditional_3_ng_container_2_Template, 1, 0, \"ng-container\", 3)(3, ToastItem_Conditional_3_Conditional_3_Template, 4, 4, \"div\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.message == null ? null : ctx_r1.message.contentStyleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"messageContent\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"content\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.template);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c4, ctx_r1.message));\n    i0.ɵɵadvance();\n    i0.ɵɵconditional((ctx_r1.message == null ? null : ctx_r1.message.closable) !== false ? 3 : -1);\n  }\n}\nconst _c5 = [\"message\"];\nconst _c6 = [\"headless\"];\nfunction Toast_p_toastItem_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-toastItem\", 3);\n    i0.ɵɵlistener(\"onClose\", function Toast_p_toastItem_2_Template_p_toastItem_onClose_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onMessageClose($event));\n    })(\"@toastAnimation.start\", function Toast_p_toastItem_2_Template_p_toastItem_animation_toastAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onAnimationStart($event));\n    })(\"@toastAnimation.done\", function Toast_p_toastItem_2_Template_p_toastItem_animation_toastAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onAnimationEnd($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"message\", msg_r3)(\"index\", i_r4)(\"life\", ctx_r1.life)(\"template\", ctx_r1.template || ctx_r1._template)(\"headlessTemplate\", ctx_r1.headlessTemplate || ctx_r1._headlessTemplate)(\"@toastAnimation\", undefined)(\"showTransformOptions\", ctx_r1.showTransformOptions)(\"hideTransformOptions\", ctx_r1.hideTransformOptions)(\"showTransitionOptions\", ctx_r1.showTransitionOptions)(\"hideTransitionOptions\", ctx_r1.hideTransitionOptions);\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-toast {\n    width: ${dt('toast.width')};\n    white-space: pre-line;\n    word-break: break-word;\n}\n\n.p-toast-message {\n    margin: 0 0 1rem 0;\n}\n\n.p-toast-message-icon {\n    flex-shrink: 0;\n    font-size: ${dt('toast.icon.size')};\n    width: ${dt('toast.icon.size')};\n    height: ${dt('toast.icon.size')};\n}\n\n.p-toast-message-content {\n    display: flex;\n    align-items: flex-start;\n    padding: ${dt('toast.content.padding')};\n    gap: ${dt('toast.content.gap')};\n}\n\n.p-toast-message-text {\n    flex: 1 1 auto;\n    display: flex;\n    flex-direction: column;\n    gap: ${dt('toast.text.gap')};\n}\n\n.p-toast-summary {\n    font-weight: ${dt('toast.summary.font.weight')};\n    font-size: ${dt('toast.summary.font.size')};\n}\n\n.p-toast-detail {\n    font-weight: ${dt('toast.detail.font.weight')};\n    font-size: ${dt('toast.detail.font.size')};\n}\n\n.p-toast-close-button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n    cursor: pointer;\n    background: transparent;\n    transition: background ${dt('toast.transition.duration')}, color ${dt('toast.transition.duration')}, outline-color ${dt('toast.transition.duration')}, box-shadow ${dt('toast.transition.duration')};\n    outline-color: transparent;\n    color: inherit;\n    width: ${dt('toast.close.button.width')};\n    height: ${dt('toast.close.button.height')};\n    border-radius: ${dt('toast.close.button.border.radius')};\n    margin: -25% 0 0 0;\n    right: -25%;\n    padding: 0;\n    border: none;\n    user-select: none;\n}\n\n.p-toast-close-button:dir(rtl) {\n    margin: -25% 0 0 auto;\n    left: -25%;\n    right: auto;\n}\n\n.p-toast-message-info,\n.p-toast-message-success,\n.p-toast-message-warn,\n.p-toast-message-error,\n.p-toast-message-secondary,\n.p-toast-message-contrast {\n    border-width: ${dt('toast.border.width')};\n    border-style: solid;\n    backdrop-filter: blur(${dt('toast.blur')});\n    border-radius: ${dt('toast.border.radius')};\n}\n\n.p-toast-close-icon {\n    font-size: ${dt('toast.close.icon.size')};\n    width: ${dt('toast.close.icon.size')};\n    height: ${dt('toast.close.icon.size')};\n}\n\n.p-toast-close-button:focus-visible {\n    outline-width: ${dt('focus.ring.width')};\n    outline-style: ${dt('focus.ring.style')};\n    outline-offset: ${dt('focus.ring.offset')};\n}\n\n.p-toast-message-info {\n    background: ${dt('toast.info.background')};\n    border-color: ${dt('toast.info.border.color')};\n    color: ${dt('toast.info.color')};\n    box-shadow: ${dt('toast.info.shadow')};\n}\n\n.p-toast-message-info .p-toast-detail {\n    color: ${dt('toast.info.detail.color')};\n}\n\n.p-toast-message-info .p-toast-close-button:focus-visible {\n    outline-color: ${dt('toast.info.close.button.focus.ring.color')};\n    box-shadow: ${dt('toast.info.close.button.focus.ring.shadow')};\n}\n\n.p-toast-message-info .p-toast-close-button:hover {\n    background: ${dt('toast.info.close.button.hover.background')};\n}\n\n.p-toast-message-success {\n    background: ${dt('toast.success.background')};\n    border-color: ${dt('toast.success.border.color')};\n    color: ${dt('toast.success.color')};\n    box-shadow: ${dt('toast.success.shadow')};\n}\n\n.p-toast-message-success .p-toast-detail {\n    color: ${dt('toast.success.detail.color')};\n}\n\n.p-toast-message-success .p-toast-close-button:focus-visible {\n    outline-color: ${dt('toast.success.close.button.focus.ring.color')};\n    box-shadow: ${dt('toast.success.close.button.focus.ring.shadow')};\n}\n\n.p-toast-message-success .p-toast-close-button:hover {\n    background: ${dt('toast.success.close.button.hover.background')};\n}\n\n.p-toast-message-warn {\n    background: ${dt('toast.warn.background')};\n    border-color: ${dt('toast.warn.border.color')};\n    color: ${dt('toast.warn.color')};\n    box-shadow: ${dt('toast.warn.shadow')};\n}\n\n.p-toast-message-warn .p-toast-detail {\n    color: ${dt('toast.warn.detail.color')};\n}\n\n.p-toast-message-warn .p-toast-close-button:focus-visible {\n    outline-color: ${dt('toast.warn.close.button.focus.ring.color')};\n    box-shadow: ${dt('toast.warn.close.button.focus.ring.shadow')};\n}\n\n.p-toast-message-warn .p-toast-close-button:hover {\n    background: ${dt('toast.warn.close.button.hover.background')};\n}\n\n.p-toast-message-error {\n    background: ${dt('toast.error.background')};\n    border-color: ${dt('toast.error.border.color')};\n    color: ${dt('toast.error.color')};\n    box-shadow: ${dt('toast.error.shadow')};\n}\n\n.p-toast-message-error .p-toast-detail {\n    color: ${dt('toast.error.detail.color')};\n}\n\n.p-toast-message-error .p-toast-close-button:focus-visible {\n    outline-color: ${dt('toast.error.close.button.focus.ring.color')};\n    box-shadow: ${dt('toast.error.close.button.focus.ring.shadow')};\n}\n\n.p-toast-message-error .p-toast-close-button:hover {\n    background: ${dt('toast.error.close.button.hover.background')};\n}\n\n.p-toast-message-secondary {\n    background: ${dt('toast.secondary.background')};\n    border-color: ${dt('toast.secondary.border.color')};\n    color: ${dt('toast.secondary.color')};\n    box-shadow: ${dt('toast.secondary.shadow')};\n}\n\n.p-toast-message-secondary .p-toast-detail {\n    color: ${dt('toast.secondary.detail.color')};\n}\n\n.p-toast-message-secondary .p-toast-close-button:focus-visible {\n    outline-color: ${dt('toast.secondary.close.button.focus.ring.color')};\n    box-shadow: ${dt('toast.secondary.close.button.focus.ring.shadow')};\n}\n\n.p-toast-message-secondary .p-toast-close-button:hover {\n    background: ${dt('toast.secondary.close.button.hover.background')};\n}\n\n.p-toast-message-contrast {\n    background: ${dt('toast.contrast.background')};\n    border-color: ${dt('toast.contrast.border.color')};\n    color: ${dt('toast.contrast.color')};\n    box-shadow: ${dt('toast.contrast.shadow')};\n}\n\n.p-toast-message-contrast .p-toast-detail {\n    color: ${dt('toast.contrast.detail.color')};\n}\n\n.p-toast-message-contrast .p-toast-close-button:focus-visible {\n    outline-color: ${dt('toast.contrast.close.button.focus.ring.color')};\n    box-shadow: ${dt('toast.contrast.close.button.focus.ring.shadow')};\n}\n\n.p-toast-message-contrast .p-toast-close-button:hover {\n    background: ${dt('toast.contrast.close.button.hover.background')};\n}\n\n.p-toast-top-center {\n    transform: translateX(-50%);\n}\n\n.p-toast-bottom-center {\n    transform: translateX(-50%);\n}\n\n.p-toast-center {\n    min-width: 20vw;\n    transform: translate(-50%, -50%);\n}\n\n.p-toast-message-enter-from {\n    opacity: 0;\n    transform: translateY(50%);\n}\n\n.p-toast-message-leave-from {\n    max-height: 1000px;\n}\n\n.p-toast .p-toast-message.p-toast-message-leave-to {\n    max-height: 0;\n    opacity: 0;\n    margin-bottom: 0;\n    overflow: hidden;\n}\n\n.p-toast-message-enter-active {\n    transition: transform 0.3s, opacity 0.3s;\n}\n\n.p-toast-message-leave-active {\n    transition: max-height 0.45s cubic-bezier(0, 1, 0, 1), opacity 0.3s, margin-bottom 0.3s;\n}\n`;\n// Position\nconst inlineStyles = {\n  root: ({\n    instance\n  }) => {\n    const {\n      _position\n    } = instance;\n    return {\n      position: 'fixed',\n      top: _position === 'top-right' || _position === 'top-left' || _position === 'top-center' ? '20px' : _position === 'center' ? '50%' : null,\n      right: (_position === 'top-right' || _position === 'bottom-right') && '20px',\n      bottom: (_position === 'bottom-left' || _position === 'bottom-right' || _position === 'bottom-center') && '20px',\n      left: _position === 'top-left' || _position === 'bottom-left' ? '20px' : _position === 'center' || _position === 'top-center' || _position === 'bottom-center' ? '50%' : null\n    };\n  }\n};\nconst classes = {\n  root: ({\n    instance\n  }) => ({\n    'p-toast p-component': true,\n    [`p-toast-${instance._position}`]: !!instance._position\n  }),\n  message: ({\n    instance\n  }) => ({\n    'p-toast-message': true,\n    'p-toast-message-info': instance.message.severity === 'info' || instance.message.severity === undefined,\n    'p-toast-message-warn': instance.message.severity === 'warn',\n    'p-toast-message-error': instance.message.severity === 'error',\n    'p-toast-message-success': instance.message.severity === 'success',\n    'p-toast-message-secondary': instance.message.severity === 'secondary',\n    'p-toast-message-contrast': instance.message.severity === 'contrast'\n  }),\n  messageContent: 'p-toast-message-content',\n  messageIcon: ({\n    instance\n  }) => ({\n    'p-toast-message-icon': true,\n    [`pi ${instance.message.icon}`]: !!instance.message.icon\n  }),\n  messageText: 'p-toast-message-text',\n  summary: 'p-toast-summary',\n  detail: 'p-toast-detail',\n  closeButton: 'p-toast-close-button',\n  closeIcon: ({\n    instance\n  }) => ({\n    'p-toast-close-icon': true,\n    [`pi ${instance.message.closeIcon}`]: !!instance.message.closeIcon\n  })\n};\nlet ToastStyle = /*#__PURE__*/(() => {\n  class ToastStyle extends BaseStyle {\n    name = 'toast';\n    theme = theme;\n    classes = classes;\n    inlineStyles = inlineStyles;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵToastStyle_BaseFactory;\n      return function ToastStyle_Factory(__ngFactoryType__) {\n        return (ɵToastStyle_BaseFactory || (ɵToastStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ToastStyle)))(__ngFactoryType__ || ToastStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ToastStyle,\n      factory: ToastStyle.ɵfac\n    });\n  }\n  return ToastStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * Toast is used to display messages in an overlay.\n *\n * [Live Demo](https://www.primeng.org/toast/)\n *\n * @module toaststyle\n *\n */\nvar ToastClasses = /*#__PURE__*/function (ToastClasses) {\n  /**\n   * Class name of the root element\n   */\n  ToastClasses[\"root\"] = \"p-toast\";\n  /**\n   * Class name of the message element\n   */\n  ToastClasses[\"message\"] = \"p-toast-message\";\n  /**\n   * Class name of the message content element\n   */\n  ToastClasses[\"messageContent\"] = \"p-toast-message-content\";\n  /**\n   * Class name of the message icon element\n   */\n  ToastClasses[\"messageIcon\"] = \"p-toast-message-icon\";\n  /**\n   * Class name of the message text element\n   */\n  ToastClasses[\"messageText\"] = \"p-toast-message-text\";\n  /**\n   * Class name of the summary element\n   */\n  ToastClasses[\"summary\"] = \"p-toast-summary\";\n  /**\n   * Class name of the detail element\n   */\n  ToastClasses[\"detail\"] = \"p-toast-detail\";\n  /**\n   * Class name of the close button element\n   */\n  ToastClasses[\"closeButton\"] = \"p-toast-close-button\";\n  /**\n   * Class name of the close icon element\n   */\n  ToastClasses[\"closeIcon\"] = \"p-toast-close-icon\";\n  return ToastClasses;\n}(ToastClasses || {});\nlet ToastItem = /*#__PURE__*/(() => {\n  class ToastItem extends BaseComponent {\n    zone;\n    message;\n    index;\n    life;\n    template;\n    headlessTemplate;\n    showTransformOptions;\n    hideTransformOptions;\n    showTransitionOptions;\n    hideTransitionOptions;\n    onClose = new EventEmitter();\n    containerViewChild;\n    _componentStyle = inject(ToastStyle);\n    timeout;\n    constructor(zone) {\n      super();\n      this.zone = zone;\n    }\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      this.initTimeout();\n    }\n    initTimeout() {\n      if (!this.message?.sticky) {\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => {\n            this.onClose.emit({\n              index: this.index,\n              message: this.message\n            });\n          }, this.message?.life || this.life || 3000);\n        });\n      }\n    }\n    clearTimeout() {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n      }\n    }\n    onMouseEnter() {\n      this.clearTimeout();\n    }\n    onMouseLeave() {\n      this.initTimeout();\n    }\n    onCloseIconClick = event => {\n      this.clearTimeout();\n      this.onClose.emit({\n        index: this.index,\n        message: this.message\n      });\n      event.preventDefault();\n    };\n    get closeAriaLabel() {\n      return this.config.translation.aria ? this.config.translation.aria.close : undefined;\n    }\n    ngOnDestroy() {\n      this.clearTimeout();\n      super.ngOnDestroy();\n    }\n    static ɵfac = function ToastItem_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastItem)(i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ToastItem,\n      selectors: [[\"p-toastItem\"]],\n      viewQuery: function ToastItem_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n        }\n      },\n      inputs: {\n        message: \"message\",\n        index: [2, \"index\", \"index\", numberAttribute],\n        life: [2, \"life\", \"life\", numberAttribute],\n        template: \"template\",\n        headlessTemplate: \"headlessTemplate\",\n        showTransformOptions: \"showTransformOptions\",\n        hideTransformOptions: \"hideTransformOptions\",\n        showTransitionOptions: \"showTransitionOptions\",\n        hideTransitionOptions: \"hideTransitionOptions\"\n      },\n      outputs: {\n        onClose: \"onClose\"\n      },\n      features: [i0.ɵɵProvidersFeature([ToastStyle]), i0.ɵɵInheritDefinitionFeature],\n      decls: 4,\n      vars: 15,\n      consts: [[\"container\", \"\"], [\"role\", \"alert\", \"aria-live\", \"assertive\", \"aria-atomic\", \"true\", 3, \"mouseenter\", \"mouseleave\", \"ngClass\"], [3, \"ngClass\", \"class\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngClass\"], [4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [\"type\", \"button\", \"autofocus\", \"\", 3, \"click\", \"keydown.enter\", \"ariaLabel\"]],\n      template: function ToastItem_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵlistener(\"mouseenter\", function ToastItem_Template_div_mouseenter_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onMouseEnter());\n          })(\"mouseleave\", function ToastItem_Template_div_mouseleave_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onMouseLeave());\n          });\n          i0.ɵɵtemplate(2, ToastItem_Conditional_2_Template, 1, 5, \"ng-container\")(3, ToastItem_Conditional_3_Template, 4, 10, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.message == null ? null : ctx.message.styleClass);\n          i0.ɵɵproperty(\"ngClass\", ctx.cx(\"message\"))(\"@messageState\", i0.ɵɵpureFunction1(13, _c2, i0.ɵɵpureFunction4(8, _c1, ctx.showTransformOptions, ctx.hideTransformOptions, ctx.showTransitionOptions, ctx.hideTransitionOptions)));\n          i0.ɵɵattribute(\"id\", ctx.message == null ? null : ctx.message.id)(\"data-pc-name\", \"toast\")(\"data-pc-section\", \"root\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵconditional(ctx.headlessTemplate ? 2 : 3);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, CheckIcon, ExclamationTriangleIcon, InfoCircleIcon, TimesIcon, TimesCircleIcon, SharedModule],\n      encapsulation: 2,\n      data: {\n        animation: [trigger('messageState', [state('visible', style({\n          transform: 'translateY(0)',\n          opacity: 1\n        })), transition('void => *', [style({\n          transform: '{{showTransformParams}}',\n          opacity: 0\n        }), animate('{{showTransitionParams}}')]), transition('* => void', [animate('{{hideTransitionParams}}', style({\n          height: 0,\n          opacity: 0,\n          transform: '{{hideTransformParams}}'\n        }))])])]\n      },\n      changeDetection: 0\n    });\n  }\n  return ToastItem;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Toast is used to display messages in an overlay.\n * @group Components\n */\nlet Toast = /*#__PURE__*/(() => {\n  class Toast extends BaseComponent {\n    /**\n     * Key of the message in case message is targeted to a specific toast component.\n     * @group Props\n     */\n    key;\n    /**\n     * Whether to automatically manage layering.\n     * @group Props\n     */\n    autoZIndex = true;\n    /**\n     * Base zIndex value to use in layering.\n     * @group Props\n     */\n    baseZIndex = 0;\n    /**\n     * The default time to display messages for in milliseconds.\n     * @group Props\n     */\n    life = 3000;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Inline class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Position of the toast in viewport.\n     * @group Props\n     */\n    get position() {\n      return this._position;\n    }\n    set position(value) {\n      this._position = value;\n      this.cd.markForCheck();\n    }\n    /**\n     * It does not add the new message if there is already a toast displayed with the same content\n     * @group Props\n     */\n    preventOpenDuplicates = false;\n    /**\n     * Displays only once a message with the same content.\n     * @group Props\n     */\n    preventDuplicates = false;\n    /**\n     * Transform options of the show animation.\n     * @group Props\n     */\n    showTransformOptions = 'translateY(100%)';\n    /**\n     * Transform options of the hide animation.\n     * @group Props\n     */\n    hideTransformOptions = 'translateY(-100%)';\n    /**\n     * Transition options of the show animation.\n     * @group Props\n     */\n    showTransitionOptions = '300ms ease-out';\n    /**\n     * Transition options of the hide animation.\n     * @group Props\n     */\n    hideTransitionOptions = '250ms ease-in';\n    /**\n     * Object literal to define styles per screen size.\n     * @group Props\n     */\n    breakpoints;\n    /**\n     * Callback to invoke when a message is closed.\n     * @param {ToastCloseEvent} event - custom close event.\n     * @group Emits\n     */\n    onClose = new EventEmitter();\n    /**\n     * Custom template of message.\n     * @group Templates\n     */\n    template;\n    /**\n     * Custom headless template.\n     * @group Templates\n     */\n    headlessTemplate;\n    containerViewChild;\n    messageSubscription;\n    clearSubscription;\n    messages;\n    messagesArchieve;\n    _position = 'top-right';\n    messageService = inject(MessageService);\n    _componentStyle = inject(ToastStyle);\n    styleElement;\n    id = uuid('pn_id_');\n    templates;\n    ngOnInit() {\n      super.ngOnInit();\n      this.messageSubscription = this.messageService.messageObserver.subscribe(messages => {\n        if (messages) {\n          if (Array.isArray(messages)) {\n            const filteredMessages = messages.filter(m => this.canAdd(m));\n            this.add(filteredMessages);\n          } else if (this.canAdd(messages)) {\n            this.add([messages]);\n          }\n        }\n      });\n      this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n        if (key) {\n          if (this.key === key) {\n            this.messages = null;\n          }\n        } else {\n          this.messages = null;\n        }\n        this.cd.markForCheck();\n      });\n    }\n    _template;\n    _headlessTemplate;\n    ngAfterContentInit() {\n      this.templates?.forEach(item => {\n        switch (item.getType()) {\n          case 'message':\n            this._template = item.template;\n            break;\n          case 'headless':\n            this._headlessTemplate = item.template;\n            break;\n          default:\n            this._template = item.template;\n            break;\n        }\n      });\n    }\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      if (this.breakpoints) {\n        this.createStyle();\n      }\n    }\n    add(messages) {\n      this.messages = this.messages ? [...this.messages, ...messages] : [...messages];\n      if (this.preventDuplicates) {\n        this.messagesArchieve = this.messagesArchieve ? [...this.messagesArchieve, ...messages] : [...messages];\n      }\n      this.cd.markForCheck();\n    }\n    canAdd(message) {\n      let allow = this.key === message.key;\n      if (allow && this.preventOpenDuplicates) {\n        allow = !this.containsMessage(this.messages, message);\n      }\n      if (allow && this.preventDuplicates) {\n        allow = !this.containsMessage(this.messagesArchieve, message);\n      }\n      return allow;\n    }\n    containsMessage(collection, message) {\n      if (!collection) {\n        return false;\n      }\n      return collection.find(m => {\n        return m.summary === message.summary && m.detail == message.detail && m.severity === message.severity;\n      }) != null;\n    }\n    onMessageClose(event) {\n      this.messages?.splice(event.index, 1);\n      this.onClose.emit({\n        message: event.message\n      });\n      this.cd.detectChanges();\n    }\n    onAnimationStart(event) {\n      if (event.fromState === 'void') {\n        this.renderer.setAttribute(this.containerViewChild?.nativeElement, this.id, '');\n        if (this.autoZIndex && this.containerViewChild?.nativeElement.style.zIndex === '') {\n          ZIndexUtils.set('modal', this.containerViewChild?.nativeElement, this.baseZIndex || this.config.zIndex.modal);\n        }\n      }\n    }\n    onAnimationEnd(event) {\n      if (event.toState === 'void') {\n        if (this.autoZIndex && isEmpty(this.messages)) {\n          ZIndexUtils.clear(this.containerViewChild?.nativeElement);\n        }\n      }\n    }\n    createStyle() {\n      if (!this.styleElement) {\n        this.styleElement = this.renderer.createElement('style');\n        this.styleElement.type = 'text/css';\n        this.renderer.appendChild(this.document.head, this.styleElement);\n        let innerHTML = '';\n        for (let breakpoint in this.breakpoints) {\n          let breakpointStyle = '';\n          for (let styleProp in this.breakpoints[breakpoint]) {\n            breakpointStyle += styleProp + ':' + this.breakpoints[breakpoint][styleProp] + ' !important;';\n          }\n          innerHTML += `\n                    @media screen and (max-width: ${breakpoint}) {\n                        .p-toast[${this.id}] {\n                           ${breakpointStyle}\n                        }\n                    }\n                `;\n        }\n        this.renderer.setProperty(this.styleElement, 'innerHTML', innerHTML);\n        setAttribute(this.styleElement, 'nonce', this.config?.csp()?.nonce);\n      }\n    }\n    destroyStyle() {\n      if (this.styleElement) {\n        this.renderer.removeChild(this.document.head, this.styleElement);\n        this.styleElement = null;\n      }\n    }\n    ngOnDestroy() {\n      if (this.messageSubscription) {\n        this.messageSubscription.unsubscribe();\n      }\n      if (this.containerViewChild && this.autoZIndex) {\n        ZIndexUtils.clear(this.containerViewChild.nativeElement);\n      }\n      if (this.clearSubscription) {\n        this.clearSubscription.unsubscribe();\n      }\n      this.destroyStyle();\n      super.ngOnDestroy();\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵToast_BaseFactory;\n      return function Toast_Factory(__ngFactoryType__) {\n        return (ɵToast_BaseFactory || (ɵToast_BaseFactory = i0.ɵɵgetInheritedFactory(Toast)))(__ngFactoryType__ || Toast);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Toast,\n      selectors: [[\"p-toast\"]],\n      contentQueries: function Toast_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, _c5, 5);\n          i0.ɵɵcontentQuery(dirIndex, _c6, 5);\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headlessTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      viewQuery: function Toast_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n        }\n      },\n      inputs: {\n        key: \"key\",\n        autoZIndex: [2, \"autoZIndex\", \"autoZIndex\", booleanAttribute],\n        baseZIndex: [2, \"baseZIndex\", \"baseZIndex\", numberAttribute],\n        life: [2, \"life\", \"life\", numberAttribute],\n        style: \"style\",\n        styleClass: \"styleClass\",\n        position: \"position\",\n        preventOpenDuplicates: [2, \"preventOpenDuplicates\", \"preventOpenDuplicates\", booleanAttribute],\n        preventDuplicates: [2, \"preventDuplicates\", \"preventDuplicates\", booleanAttribute],\n        showTransformOptions: \"showTransformOptions\",\n        hideTransformOptions: \"hideTransformOptions\",\n        showTransitionOptions: \"showTransitionOptions\",\n        hideTransitionOptions: \"hideTransitionOptions\",\n        breakpoints: \"breakpoints\"\n      },\n      outputs: {\n        onClose: \"onClose\"\n      },\n      features: [i0.ɵɵProvidersFeature([ToastStyle]), i0.ɵɵInheritDefinitionFeature],\n      decls: 3,\n      vars: 7,\n      consts: [[\"container\", \"\"], [3, \"ngClass\", \"ngStyle\"], [3, \"message\", \"index\", \"life\", \"template\", \"headlessTemplate\", \"showTransformOptions\", \"hideTransformOptions\", \"showTransitionOptions\", \"hideTransitionOptions\", \"onClose\", 4, \"ngFor\", \"ngForOf\"], [3, \"onClose\", \"message\", \"index\", \"life\", \"template\", \"headlessTemplate\", \"showTransformOptions\", \"hideTransformOptions\", \"showTransitionOptions\", \"hideTransitionOptions\"]],\n      template: function Toast_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵtemplate(2, Toast_p_toastItem_2_Template, 1, 10, \"p-toastItem\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleMap(ctx.style);\n          i0.ɵɵclassMap(ctx.styleClass);\n          i0.ɵɵproperty(\"ngClass\", ctx.cx(\"root\"))(\"ngStyle\", ctx.sx(\"root\"));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgForOf, i1.NgStyle, ToastItem, SharedModule],\n      encapsulation: 2,\n      data: {\n        animation: [trigger('toastAnimation', [transition(':enter, :leave', [query('@*', animateChild())])])]\n      },\n      changeDetection: 0\n    });\n  }\n  return Toast;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ToastModule = /*#__PURE__*/(() => {\n  class ToastModule {\n    static ɵfac = function ToastModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ToastModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [Toast, SharedModule, SharedModule]\n    });\n  }\n  return ToastModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Toast, ToastClasses, ToastItem, ToastModule, ToastStyle };\n","import { isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, TemplateRef, booleanAttribute, numberAttribute, Input, Directive, NgModule } from '@angular/core';\nimport { uuid, hasClass, appendChild, fadeIn, getWindowScrollLeft, getWindowScrollTop, findSingle, getOuterWidth, getOuterHeight, getViewport, removeChild } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ZIndexUtils } from 'primeng/utils';\nimport { BaseStyle } from 'primeng/base';\nconst theme = ({\n  dt\n}) => `\n.p-tooltip {\n    position: absolute;\n    display: none;\n    max-width: ${dt('tooltip.max.width')};\n}\n\n.p-tooltip-right,\n.p-tooltip-left {\n    padding: 0 ${dt('tooltip.gutter')};\n}\n\n.p-tooltip-top,\n.p-tooltip-bottom {\n    padding: ${dt('tooltip.gutter')} 0;\n}\n\n.p-tooltip-text {\n    white-space: pre-line;\n    word-break: break-word;\n    background: ${dt('tooltip.background')};\n    color: ${dt('tooltip.color')};\n    padding: ${dt('tooltip.padding')};\n    box-shadow: ${dt('tooltip.shadow')};\n    border-radius: ${dt('tooltip.border.radius')};\n}\n\n.p-tooltip-arrow {\n    position: absolute;\n    width: 0;\n    height: 0;\n    border-color: transparent;\n    border-style: solid;\n    scale: 2;\n}\n\n.p-tooltip-right .p-tooltip-arrow {\n    top: 50%;\n    left: 0;\n    margin-top: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} 0;\n    border-right-color: ${dt('tooltip.background')};\n}\n\n.p-tooltip-left .p-tooltip-arrow {\n    top: 50%;\n    right: 0;\n    margin-top: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: ${dt('tooltip.gutter')} 0 ${dt('tooltip.gutter')} ${dt('tooltip.gutter')};\n    border-left-color: ${dt('tooltip.background')};\n}\n\n.p-tooltip-top .p-tooltip-arrow {\n    bottom: 0;\n    left: 50%;\n    margin-left: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} 0 ${dt('tooltip.gutter')};\n    border-top-color: ${dt('tooltip.background')};\n    border-bottom-color: ${dt('tooltip.background')};\n}\n\n.p-tooltip-bottom .p-tooltip-arrow {\n    top: 0;\n    left: 50%;\n    margin-left: calc(-1 * ${dt('tooltip.gutter')});\n    border-width: 0 ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} ${dt('tooltip.gutter')};\n    border-top-color: ${dt('tooltip.background')};\n    border-bottom-color: ${dt('tooltip.background')};\n}\n`;\nconst classes = {\n  root: 'p-tooltip p-component',\n  arrow: 'p-tooltip-arrow',\n  text: 'p-tooltip-text'\n};\nlet TooltipStyle = /*#__PURE__*/(() => {\n  class TooltipStyle extends BaseStyle {\n    name = 'tooltip';\n    theme = theme;\n    classes = classes;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵTooltipStyle_BaseFactory;\n      return function TooltipStyle_Factory(__ngFactoryType__) {\n        return (ɵTooltipStyle_BaseFactory || (ɵTooltipStyle_BaseFactory = i0.ɵɵgetInheritedFactory(TooltipStyle)))(__ngFactoryType__ || TooltipStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TooltipStyle,\n      factory: TooltipStyle.ɵfac\n    });\n  }\n  return TooltipStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * Tooltip directive provides advisory information for a component.\n *\n * [Live Demo](https://www.primeng.org/tooltip)\n *\n * @module tooltipstyle\n *\n */\nvar TooltipClasses = /*#__PURE__*/function (TooltipClasses) {\n  /**\n   * Class name of the root element\n   */\n  TooltipClasses[\"root\"] = \"p-tooltip\";\n  /**\n   * Class name of the arrow element\n   */\n  TooltipClasses[\"arrow\"] = \"p-tooltip-arrow\";\n  /**\n   * Class name of the text element\n   */\n  TooltipClasses[\"text\"] = \"p-tooltip-text\";\n  return TooltipClasses;\n}(TooltipClasses || {});\n/**\n * Tooltip directive provides advisory information for a component.\n * @group Components\n */\nlet Tooltip = /*#__PURE__*/(() => {\n  class Tooltip extends BaseComponent {\n    zone;\n    viewContainer;\n    /**\n     * Position of the tooltip.\n     * @group Props\n     */\n    tooltipPosition;\n    /**\n     * Event to show the tooltip.\n     * @group Props\n     */\n    tooltipEvent = 'hover';\n    /**\n     *  Target element to attach the overlay, valid values are \"body\", \"target\" or a local ng-F variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    appendTo;\n    /**\n     * Type of CSS position.\n     * @group Props\n     */\n    positionStyle;\n    /**\n     * Style class of the tooltip.\n     * @group Props\n     */\n    tooltipStyleClass;\n    /**\n     * Whether the z-index should be managed automatically to always go on top or have a fixed value.\n     * @group Props\n     */\n    tooltipZIndex;\n    /**\n     * By default the tooltip contents are rendered as text. Set to false to support html tags in the content.\n     * @group Props\n     */\n    escape = true;\n    /**\n     * Delay to show the tooltip in milliseconds.\n     * @group Props\n     */\n    showDelay;\n    /**\n     * Delay to hide the tooltip in milliseconds.\n     * @group Props\n     */\n    hideDelay;\n    /**\n     * Time to wait in milliseconds to hide the tooltip even it is active.\n     * @group Props\n     */\n    life;\n    /**\n     * Specifies the additional vertical offset of the tooltip from its default position.\n     * @group Props\n     */\n    positionTop;\n    /**\n     * Specifies the additional horizontal offset of the tooltip from its default position.\n     * @group Props\n     */\n    positionLeft;\n    /**\n     * Whether to hide tooltip when hovering over tooltip content.\n     * @group Props\n     */\n    autoHide = true;\n    /**\n     * Automatically adjusts the element position when there is not enough space on the selected position.\n     * @group Props\n     */\n    fitContent = true;\n    /**\n     * Whether to hide tooltip on escape key press.\n     * @group Props\n     */\n    hideOnEscape = true;\n    /**\n     * Content of the tooltip.\n     * @group Props\n     */\n    content;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @defaultValue false\n     * @group Props\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(val) {\n      this._disabled = val;\n      this.deactivate();\n    }\n    /**\n     * Specifies the tooltip configuration options for the component.\n     * @group Props\n     */\n    tooltipOptions;\n    _tooltipOptions = {\n      tooltipLabel: null,\n      tooltipPosition: 'right',\n      tooltipEvent: 'hover',\n      appendTo: 'body',\n      positionStyle: null,\n      tooltipStyleClass: null,\n      tooltipZIndex: 'auto',\n      escape: true,\n      disabled: null,\n      showDelay: null,\n      hideDelay: null,\n      positionTop: null,\n      positionLeft: null,\n      life: null,\n      autoHide: true,\n      hideOnEscape: true,\n      id: uuid('pn_id_') + '_tooltip'\n    };\n    _disabled;\n    container;\n    styleClass;\n    tooltipText;\n    showTimeout;\n    hideTimeout;\n    active;\n    mouseEnterListener;\n    mouseLeaveListener;\n    containerMouseleaveListener;\n    clickListener;\n    focusListener;\n    blurListener;\n    documentEscapeListener;\n    scrollHandler;\n    resizeListener;\n    _componentStyle = inject(TooltipStyle);\n    interactionInProgress = false;\n    constructor(zone, viewContainer) {\n      super();\n      this.zone = zone;\n      this.viewContainer = viewContainer;\n    }\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      if (isPlatformBrowser(this.platformId)) {\n        this.zone.runOutsideAngular(() => {\n          const tooltipEvent = this.getOption('tooltipEvent');\n          if (tooltipEvent === 'hover' || tooltipEvent === 'both') {\n            this.mouseEnterListener = this.onMouseEnter.bind(this);\n            this.mouseLeaveListener = this.onMouseLeave.bind(this);\n            this.clickListener = this.onInputClick.bind(this);\n            this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\n            this.el.nativeElement.addEventListener('click', this.clickListener);\n            this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\n          }\n          if (tooltipEvent === 'focus' || tooltipEvent === 'both') {\n            this.focusListener = this.onFocus.bind(this);\n            this.blurListener = this.onBlur.bind(this);\n            let target = this.el.nativeElement.querySelector('.p-component');\n            if (!target) {\n              target = this.getTarget(this.el.nativeElement);\n            }\n            target.addEventListener('focus', this.focusListener);\n            target.addEventListener('blur', this.blurListener);\n          }\n        });\n      }\n    }\n    ngOnChanges(simpleChange) {\n      super.ngOnChanges(simpleChange);\n      if (simpleChange.tooltipPosition) {\n        this.setOption({\n          tooltipPosition: simpleChange.tooltipPosition.currentValue\n        });\n      }\n      if (simpleChange.tooltipEvent) {\n        this.setOption({\n          tooltipEvent: simpleChange.tooltipEvent.currentValue\n        });\n      }\n      if (simpleChange.appendTo) {\n        this.setOption({\n          appendTo: simpleChange.appendTo.currentValue\n        });\n      }\n      if (simpleChange.positionStyle) {\n        this.setOption({\n          positionStyle: simpleChange.positionStyle.currentValue\n        });\n      }\n      if (simpleChange.tooltipStyleClass) {\n        this.setOption({\n          tooltipStyleClass: simpleChange.tooltipStyleClass.currentValue\n        });\n      }\n      if (simpleChange.tooltipZIndex) {\n        this.setOption({\n          tooltipZIndex: simpleChange.tooltipZIndex.currentValue\n        });\n      }\n      if (simpleChange.escape) {\n        this.setOption({\n          escape: simpleChange.escape.currentValue\n        });\n      }\n      if (simpleChange.showDelay) {\n        this.setOption({\n          showDelay: simpleChange.showDelay.currentValue\n        });\n      }\n      if (simpleChange.hideDelay) {\n        this.setOption({\n          hideDelay: simpleChange.hideDelay.currentValue\n        });\n      }\n      if (simpleChange.life) {\n        this.setOption({\n          life: simpleChange.life.currentValue\n        });\n      }\n      if (simpleChange.positionTop) {\n        this.setOption({\n          positionTop: simpleChange.positionTop.currentValue\n        });\n      }\n      if (simpleChange.positionLeft) {\n        this.setOption({\n          positionLeft: simpleChange.positionLeft.currentValue\n        });\n      }\n      if (simpleChange.disabled) {\n        this.setOption({\n          disabled: simpleChange.disabled.currentValue\n        });\n      }\n      if (simpleChange.content) {\n        this.setOption({\n          tooltipLabel: simpleChange.content.currentValue\n        });\n        if (this.active) {\n          if (simpleChange.content.currentValue) {\n            if (this.container && this.container.offsetParent) {\n              this.updateText();\n              this.align();\n            } else {\n              this.show();\n            }\n          } else {\n            this.hide();\n          }\n        }\n      }\n      if (simpleChange.autoHide) {\n        this.setOption({\n          autoHide: simpleChange.autoHide.currentValue\n        });\n      }\n      if (simpleChange.id) {\n        this.setOption({\n          id: simpleChange.id.currentValue\n        });\n      }\n      if (simpleChange.tooltipOptions) {\n        this._tooltipOptions = {\n          ...this._tooltipOptions,\n          ...simpleChange.tooltipOptions.currentValue\n        };\n        this.deactivate();\n        if (this.active) {\n          if (this.getOption('tooltipLabel')) {\n            if (this.container && this.container.offsetParent) {\n              this.updateText();\n              this.align();\n            } else {\n              this.show();\n            }\n          } else {\n            this.hide();\n          }\n        }\n      }\n    }\n    isAutoHide() {\n      return this.getOption('autoHide');\n    }\n    onMouseEnter(e) {\n      if (!this.container && !this.showTimeout) {\n        this.activate();\n      }\n    }\n    onMouseLeave(e) {\n      if (!this.isAutoHide()) {\n        const valid = hasClass(e.relatedTarget, 'p-tooltip') || hasClass(e.relatedTarget, 'p-tooltip-text') || hasClass(e.relatedTarget, 'p-tooltip-arrow');\n        !valid && this.deactivate();\n      } else {\n        this.deactivate();\n      }\n    }\n    onFocus(e) {\n      this.activate();\n    }\n    onBlur(e) {\n      this.deactivate();\n    }\n    onInputClick(e) {\n      this.deactivate();\n    }\n    activate() {\n      if (!this.interactionInProgress) {\n        this.active = true;\n        this.clearHideTimeout();\n        if (this.getOption('showDelay')) this.showTimeout = setTimeout(() => {\n          this.show();\n        }, this.getOption('showDelay'));else this.show();\n        if (this.getOption('life')) {\n          let duration = this.getOption('showDelay') ? this.getOption('life') + this.getOption('showDelay') : this.getOption('life');\n          this.hideTimeout = setTimeout(() => {\n            this.hide();\n          }, duration);\n        }\n        if (this.getOption('hideOnEscape')) {\n          this.documentEscapeListener = this.renderer.listen('document', 'keydown.escape', () => {\n            this.deactivate();\n            this.documentEscapeListener();\n          });\n        }\n        this.interactionInProgress = true;\n      }\n    }\n    deactivate() {\n      this.interactionInProgress = false;\n      this.active = false;\n      this.clearShowTimeout();\n      if (this.getOption('hideDelay')) {\n        this.clearHideTimeout(); //life timeout\n        this.hideTimeout = setTimeout(() => {\n          this.hide();\n        }, this.getOption('hideDelay'));\n      } else {\n        this.hide();\n      }\n      if (this.documentEscapeListener) {\n        this.documentEscapeListener();\n      }\n    }\n    create() {\n      if (this.container) {\n        this.clearHideTimeout();\n        this.remove();\n      }\n      this.container = document.createElement('div');\n      this.container.setAttribute('id', this.getOption('id'));\n      this.container.setAttribute('role', 'tooltip');\n      let tooltipArrow = document.createElement('div');\n      tooltipArrow.className = 'p-tooltip-arrow';\n      this.container.appendChild(tooltipArrow);\n      this.tooltipText = document.createElement('div');\n      this.tooltipText.className = 'p-tooltip-text';\n      this.updateText();\n      if (this.getOption('positionStyle')) {\n        this.container.style.position = this.getOption('positionStyle');\n      }\n      this.container.appendChild(this.tooltipText);\n      if (this.getOption('appendTo') === 'body') document.body.appendChild(this.container);else if (this.getOption('appendTo') === 'target') appendChild(this.container, this.el.nativeElement);else appendChild(this.getOption('appendTo'), this.container);\n      this.container.style.display = 'none';\n      if (this.fitContent) {\n        this.container.style.width = 'fit-content';\n      }\n      if (this.isAutoHide()) {\n        this.container.style.pointerEvents = 'none';\n      } else {\n        this.container.style.pointerEvents = 'unset';\n        this.bindContainerMouseleaveListener();\n      }\n    }\n    bindContainerMouseleaveListener() {\n      if (!this.containerMouseleaveListener) {\n        const targetEl = this.container ?? this.container.nativeElement;\n        this.containerMouseleaveListener = this.renderer.listen(targetEl, 'mouseleave', e => {\n          this.deactivate();\n        });\n      }\n    }\n    unbindContainerMouseleaveListener() {\n      if (this.containerMouseleaveListener) {\n        this.bindContainerMouseleaveListener();\n        this.containerMouseleaveListener = null;\n      }\n    }\n    show() {\n      if (!this.getOption('tooltipLabel') || this.getOption('disabled')) {\n        return;\n      }\n      this.create();\n      const nativeElement = this.el.nativeElement;\n      const pDialogWrapper = nativeElement.closest('p-dialog');\n      if (pDialogWrapper) {\n        setTimeout(() => {\n          this.container && (this.container.style.display = 'inline-block');\n          this.container && this.align();\n        }, 100);\n      } else {\n        this.container.style.display = 'inline-block';\n        this.align();\n      }\n      fadeIn(this.container, 250);\n      if (this.getOption('tooltipZIndex') === 'auto') ZIndexUtils.set('tooltip', this.container, this.config.zIndex.tooltip);else this.container.style.zIndex = this.getOption('tooltipZIndex');\n      this.bindDocumentResizeListener();\n      this.bindScrollListener();\n    }\n    hide() {\n      if (this.getOption('tooltipZIndex') === 'auto') {\n        ZIndexUtils.clear(this.container);\n      }\n      this.remove();\n    }\n    updateText() {\n      const content = this.getOption('tooltipLabel');\n      if (content instanceof TemplateRef) {\n        const embeddedViewRef = this.viewContainer.createEmbeddedView(content);\n        embeddedViewRef.detectChanges();\n        embeddedViewRef.rootNodes.forEach(node => this.tooltipText.appendChild(node));\n      } else if (this.getOption('escape')) {\n        this.tooltipText.innerHTML = '';\n        this.tooltipText.appendChild(document.createTextNode(content));\n      } else {\n        this.tooltipText.innerHTML = content;\n      }\n    }\n    align() {\n      let position = this.getOption('tooltipPosition');\n      const positionPriority = {\n        top: [this.alignTop, this.alignBottom, this.alignRight, this.alignLeft],\n        bottom: [this.alignBottom, this.alignTop, this.alignRight, this.alignLeft],\n        left: [this.alignLeft, this.alignRight, this.alignTop, this.alignBottom],\n        right: [this.alignRight, this.alignLeft, this.alignTop, this.alignBottom]\n      };\n      for (let [index, alignmentFn] of positionPriority[position].entries()) {\n        if (index === 0) alignmentFn.call(this);else if (this.isOutOfBounds()) alignmentFn.call(this);else break;\n      }\n    }\n    getHostOffset() {\n      if (this.getOption('appendTo') === 'body' || this.getOption('appendTo') === 'target') {\n        let offset = this.el.nativeElement.getBoundingClientRect();\n        let targetLeft = offset.left + getWindowScrollLeft();\n        let targetTop = offset.top + getWindowScrollTop();\n        return {\n          left: targetLeft,\n          top: targetTop\n        };\n      } else {\n        return {\n          left: 0,\n          top: 0\n        };\n      }\n    }\n    get activeElement() {\n      return this.el.nativeElement.nodeName.includes('P-') ? findSingle(this.el.nativeElement, '.p-component') : this.el.nativeElement;\n    }\n    alignRight() {\n      this.preAlign('right');\n      const el = this.activeElement;\n      const offsetLeft = getOuterWidth(el);\n      const offsetTop = (getOuterHeight(el) - getOuterHeight(this.container)) / 2;\n      this.alignTooltip(offsetLeft, offsetTop);\n    }\n    alignLeft() {\n      this.preAlign('left');\n      let offsetLeft = getOuterWidth(this.container);\n      let offsetTop = (getOuterHeight(this.el.nativeElement) - getOuterHeight(this.container)) / 2;\n      this.alignTooltip(-offsetLeft, offsetTop);\n    }\n    alignTop() {\n      this.preAlign('top');\n      let offsetLeft = (getOuterWidth(this.el.nativeElement) - getOuterWidth(this.container)) / 2;\n      let offsetTop = getOuterHeight(this.container);\n      this.alignTooltip(offsetLeft, -offsetTop);\n    }\n    alignBottom() {\n      this.preAlign('bottom');\n      let offsetLeft = (getOuterWidth(this.el.nativeElement) - getOuterWidth(this.container)) / 2;\n      let offsetTop = getOuterHeight(this.el.nativeElement);\n      this.alignTooltip(offsetLeft, offsetTop);\n    }\n    alignTooltip(offsetLeft, offsetTop) {\n      let hostOffset = this.getHostOffset();\n      let left = hostOffset.left + offsetLeft;\n      let top = hostOffset.top + offsetTop;\n      this.container.style.left = left + this.getOption('positionLeft') + 'px';\n      this.container.style.top = top + this.getOption('positionTop') + 'px';\n    }\n    setOption(option) {\n      this._tooltipOptions = {\n        ...this._tooltipOptions,\n        ...option\n      };\n    }\n    getOption(option) {\n      return this._tooltipOptions[option];\n    }\n    getTarget(el) {\n      return hasClass(el, 'p-inputwrapper') ? findSingle(el, 'input') : el;\n    }\n    preAlign(position) {\n      this.container.style.left = -999 + 'px';\n      this.container.style.top = -999 + 'px';\n      let defaultClassName = 'p-tooltip p-component p-tooltip-' + position;\n      this.container.className = this.getOption('tooltipStyleClass') ? defaultClassName + ' ' + this.getOption('tooltipStyleClass') : defaultClassName;\n    }\n    isOutOfBounds() {\n      let offset = this.container.getBoundingClientRect();\n      let targetTop = offset.top;\n      let targetLeft = offset.left;\n      let width = getOuterWidth(this.container);\n      let height = getOuterHeight(this.container);\n      let viewport = getViewport();\n      return targetLeft + width > viewport.width || targetLeft < 0 || targetTop < 0 || targetTop + height > viewport.height;\n    }\n    onWindowResize(e) {\n      this.hide();\n    }\n    bindDocumentResizeListener() {\n      this.zone.runOutsideAngular(() => {\n        this.resizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.resizeListener);\n      });\n    }\n    unbindDocumentResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n    bindScrollListener() {\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\n          if (this.container) {\n            this.hide();\n          }\n        });\n      }\n      this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n    unbindEvents() {\n      const tooltipEvent = this.getOption('tooltipEvent');\n      if (tooltipEvent === 'hover' || tooltipEvent === 'both') {\n        this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\n        this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\n        this.el.nativeElement.removeEventListener('click', this.clickListener);\n      }\n      if (tooltipEvent === 'focus' || tooltipEvent === 'both') {\n        let target = this.el.nativeElement.querySelector('.p-component');\n        if (!target) {\n          target = this.getTarget(this.el.nativeElement);\n        }\n        target.removeEventListener('focus', this.focusListener);\n        target.removeEventListener('blur', this.blurListener);\n      }\n      this.unbindDocumentResizeListener();\n    }\n    remove() {\n      if (this.container && this.container.parentElement) {\n        if (this.getOption('appendTo') === 'body') document.body.removeChild(this.container);else if (this.getOption('appendTo') === 'target') this.el.nativeElement.removeChild(this.container);else removeChild(this.getOption('appendTo'), this.container);\n      }\n      this.unbindDocumentResizeListener();\n      this.unbindScrollListener();\n      this.unbindContainerMouseleaveListener();\n      this.clearTimeouts();\n      this.container = null;\n      this.scrollHandler = null;\n    }\n    clearShowTimeout() {\n      if (this.showTimeout) {\n        clearTimeout(this.showTimeout);\n        this.showTimeout = null;\n      }\n    }\n    clearHideTimeout() {\n      if (this.hideTimeout) {\n        clearTimeout(this.hideTimeout);\n        this.hideTimeout = null;\n      }\n    }\n    clearTimeouts() {\n      this.clearShowTimeout();\n      this.clearHideTimeout();\n    }\n    ngOnDestroy() {\n      this.unbindEvents();\n      super.ngOnDestroy();\n      if (this.container) {\n        ZIndexUtils.clear(this.container);\n      }\n      this.remove();\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n      if (this.documentEscapeListener) {\n        this.documentEscapeListener();\n      }\n    }\n    static ɵfac = function Tooltip_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Tooltip)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: Tooltip,\n      selectors: [[\"\", \"pTooltip\", \"\"]],\n      inputs: {\n        tooltipPosition: \"tooltipPosition\",\n        tooltipEvent: \"tooltipEvent\",\n        appendTo: \"appendTo\",\n        positionStyle: \"positionStyle\",\n        tooltipStyleClass: \"tooltipStyleClass\",\n        tooltipZIndex: \"tooltipZIndex\",\n        escape: [2, \"escape\", \"escape\", booleanAttribute],\n        showDelay: [2, \"showDelay\", \"showDelay\", numberAttribute],\n        hideDelay: [2, \"hideDelay\", \"hideDelay\", numberAttribute],\n        life: [2, \"life\", \"life\", numberAttribute],\n        positionTop: [2, \"positionTop\", \"positionTop\", numberAttribute],\n        positionLeft: [2, \"positionLeft\", \"positionLeft\", numberAttribute],\n        autoHide: [2, \"autoHide\", \"autoHide\", booleanAttribute],\n        fitContent: [2, \"fitContent\", \"fitContent\", booleanAttribute],\n        hideOnEscape: [2, \"hideOnEscape\", \"hideOnEscape\", booleanAttribute],\n        content: [0, \"pTooltip\", \"content\"],\n        disabled: [0, \"tooltipDisabled\", \"disabled\"],\n        tooltipOptions: \"tooltipOptions\"\n      },\n      features: [i0.ɵɵProvidersFeature([TooltipStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return Tooltip;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TooltipModule = /*#__PURE__*/(() => {\n  class TooltipModule {\n    static ɵfac = function TooltipModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TooltipModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TooltipModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return TooltipModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Tooltip, TooltipClasses, TooltipModule, TooltipStyle };\n","import { trigger, transition, style, animate } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, PLATFORM_ID, Inject, Pipe, EventEmitter, forwardRef, Output, Input, ViewEncapsulation, Component, computed, signal, inject, numberAttribute, booleanAttribute, ContentChildren, ContentChild, ViewChild, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i3 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport { uuid, focus, relativePosition, absolutePosition, appendChild, isTouchDevice, find, findSingle } from '@primeuix/utils';\nimport * as i5 from 'primeng/api';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport * as i4 from 'primeng/badge';\nimport { BadgeModule } from 'primeng/badge';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { Ripple } from 'primeng/ripple';\nimport * as i6 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ZIndexUtils } from 'primeng/utils';\nimport { BaseStyle } from 'primeng/base';\nimport * as i1 from '@angular/platform-browser';\nconst _c0 = [\"pMenuItemContent\", \"\"];\nconst _c1 = a0 => ({\n  \"p-disabled\": a0\n});\nconst _c2 = a0 => ({\n  $implicit: a0\n});\nconst _c3 = () => ({\n  exact: false\n});\nfunction MenuItemContent_ng_container_1_a_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MenuItemContent_ng_container_1_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 6);\n    i0.ɵɵtemplate(1, MenuItemContent_ng_container_1_a_1_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    const itemContent_r3 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"target\", ctx_r1.item.target)(\"ngClass\", i0.ɵɵpureFunction1(9, _c1, ctx_r1.item.disabled));\n    i0.ɵɵattribute(\"title\", ctx_r1.item.title)(\"href\", ctx_r1.item.url || null, i0.ɵɵsanitizeUrl)(\"data-automationid\", ctx_r1.item.automationId)(\"tabindex\", -1)(\"data-pc-section\", \"action\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", itemContent_r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(11, _c2, ctx_r1.item));\n  }\n}\nfunction MenuItemContent_ng_container_1_a_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MenuItemContent_ng_container_1_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 8);\n    i0.ɵɵtemplate(1, MenuItemContent_ng_container_1_a_2_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    const itemContent_r3 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"routerLink\", ctx_r1.item.routerLink)(\"queryParams\", ctx_r1.item.queryParams)(\"routerLinkActiveOptions\", ctx_r1.item.routerLinkActiveOptions || i0.ɵɵpureFunction0(17, _c3))(\"target\", ctx_r1.item.target)(\"ngClass\", i0.ɵɵpureFunction1(18, _c1, ctx_r1.item.disabled))(\"fragment\", ctx_r1.item.fragment)(\"queryParamsHandling\", ctx_r1.item.queryParamsHandling)(\"preserveFragment\", ctx_r1.item.preserveFragment)(\"skipLocationChange\", ctx_r1.item.skipLocationChange)(\"replaceUrl\", ctx_r1.item.replaceUrl)(\"state\", ctx_r1.item.state);\n    i0.ɵɵattribute(\"data-automationid\", ctx_r1.item.automationId)(\"tabindex\", -1)(\"data-pc-section\", \"action\")(\"title\", ctx_r1.item.title);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", itemContent_r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(20, _c2, ctx_r1.item));\n  }\n}\nfunction MenuItemContent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuItemContent_ng_container_1_a_1_Template, 2, 13, \"a\", 4)(2, MenuItemContent_ng_container_1_a_2_Template, 2, 22, \"a\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r1.item == null ? null : ctx_r1.item.routerLink));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.item == null ? null : ctx_r1.item.routerLink);\n  }\n}\nfunction MenuItemContent_ng_container_2_1_ng_template_0_Template(rf, ctx) {}\nfunction MenuItemContent_ng_container_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MenuItemContent_ng_container_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction MenuItemContent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuItemContent_ng_container_2_1_Template, 1, 0, null, 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r1.item));\n  }\n}\nfunction MenuItemContent_ng_template_3_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r1.item.iconClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.item.icon)(\"ngStyle\", ctx_r1.item.iconStyle);\n  }\n}\nfunction MenuItemContent_ng_template_3_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.item.label);\n  }\n}\nfunction MenuItemContent_ng_template_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n    i0.ɵɵpipe(1, \"safeHtml\");\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 1, ctx_r1.item.label), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction MenuItemContent_ng_template_3_p_badge_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-badge\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"styleClass\", ctx_r1.item.badgeStyleClass)(\"value\", ctx_r1.item.badge);\n  }\n}\nfunction MenuItemContent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MenuItemContent_ng_template_3_span_0_Template, 1, 4, \"span\", 9)(1, MenuItemContent_ng_template_3_span_1_Template, 2, 1, \"span\", 10)(2, MenuItemContent_ng_template_3_ng_template_2_Template, 2, 3, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(4, MenuItemContent_ng_template_3_p_badge_4_Template, 1, 2, \"p-badge\", 11);\n  }\n  if (rf & 2) {\n    const htmlLabel_r4 = i0.ɵɵreference(3);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.item.icon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.item.escape !== false)(\"ngIfElse\", htmlLabel_r4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.item.badge);\n  }\n}\nconst _c4 = [\"start\"];\nconst _c5 = [\"end\"];\nconst _c6 = [\"header\"];\nconst _c7 = [\"item\"];\nconst _c8 = [\"submenuheader\"];\nconst _c9 = [\"list\"];\nconst _c10 = [\"container\"];\nconst _c11 = a0 => ({\n  \"p-menu p-component\": true,\n  \"p-menu-overlay\": a0\n});\nconst _c12 = (a0, a1) => ({\n  showTransitionParams: a0,\n  hideTransitionParams: a1\n});\nconst _c13 = a0 => ({\n  value: \"visible\",\n  params: a0\n});\nconst _c14 = (a0, a1) => ({\n  \"p-hidden\": a0,\n  flex: a1\n});\nconst _c15 = (a0, a1) => ({\n  \"p-focus\": a0,\n  \"p-disabled\": a1\n});\nfunction Menu_div_0_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Menu_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, Menu_div_0_div_2_ng_container_1_Template, 1, 0, \"ng-container\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_5_0;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"start\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (tmp_5_0 = ctx_r1.startTemplate) !== null && tmp_5_0 !== undefined ? tmp_5_0 : ctx_r1._startTemplate);\n  }\n}\nfunction Menu_div_0_5_ng_template_0_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"li\", 14);\n  }\n}\nfunction Menu_div_0_5_ng_template_0_li_1_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const submenu_r3 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(submenu_r3.label);\n  }\n}\nfunction Menu_div_0_5_ng_template_0_li_1_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 18);\n    i0.ɵɵpipe(1, \"safeHtml\");\n  }\n  if (rf & 2) {\n    const submenu_r3 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 1, submenu_r3.label), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction Menu_div_0_5_ng_template_0_li_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Menu_div_0_5_ng_template_0_li_1_ng_container_1_span_1_Template, 2, 1, \"span\", 17)(2, Menu_div_0_5_ng_template_0_li_1_ng_container_1_ng_template_2_Template, 2, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const htmlSubmenuLabel_r4 = i0.ɵɵreference(3);\n    const submenu_r3 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", submenu_r3.escape !== false)(\"ngIfElse\", htmlSubmenuLabel_r4);\n  }\n}\nfunction Menu_div_0_5_ng_template_0_li_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Menu_div_0_5_ng_template_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 15);\n    i0.ɵɵtemplate(1, Menu_div_0_5_ng_template_0_li_1_ng_container_1_Template, 4, 2, \"ng-container\", 7)(2, Menu_div_0_5_ng_template_0_li_1_ng_container_2_Template, 1, 0, \"ng-container\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_13_0;\n    const ctx_r4 = i0.ɵɵnextContext();\n    const submenu_r3 = ctx_r4.$implicit;\n    const i_r6 = ctx_r4.index;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c14, submenu_r3.visible === false, submenu_r3.visible))(\"tooltipOptions\", submenu_r3.tooltipOptions);\n    i0.ɵɵattribute(\"data-automationid\", submenu_r3.automationId)(\"id\", ctx_r1.menuitemId(submenu_r3, ctx_r1.id, i_r6));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.submenuHeaderTemplate && !ctx_r1._submenuHeaderTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (tmp_13_0 = ctx_r1.submenuHeaderTemplate) !== null && tmp_13_0 !== undefined ? tmp_13_0 : ctx_r1._submenuHeaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c2, submenu_r3));\n  }\n}\nfunction Menu_div_0_5_ng_template_0_ng_template_2_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"li\", 14);\n  }\n}\nfunction Menu_div_0_5_ng_template_0_ng_template_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 20);\n    i0.ɵɵlistener(\"onMenuItemClick\", function Menu_div_0_5_ng_template_0_ng_template_2_li_1_Template_li_onMenuItemClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r7 = i0.ɵɵnextContext();\n      const item_r9 = ctx_r7.$implicit;\n      const j_r10 = ctx_r7.index;\n      const i_r6 = i0.ɵɵnextContext().index;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.itemClick($event, ctx_r1.menuitemId(item_r9, ctx_r1.id, i_r6, j_r10)));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_13_0;\n    const ctx_r7 = i0.ɵɵnextContext();\n    const item_r9 = ctx_r7.$implicit;\n    const j_r10 = ctx_r7.index;\n    const i_r6 = i0.ɵɵnextContext().index;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(item_r9.styleClass);\n    i0.ɵɵproperty(\"pMenuItemContent\", item_r9)(\"itemTemplate\", (tmp_13_0 = ctx_r1.itemTemplate) !== null && tmp_13_0 !== undefined ? tmp_13_0 : ctx_r1._itemTemplate)(\"ngClass\", i0.ɵɵpureFunction2(13, _c15, ctx_r1.focusedOptionId() && ctx_r1.menuitemId(item_r9, ctx_r1.id, i_r6, j_r10) === ctx_r1.focusedOptionId(), ctx_r1.disabled(item_r9.disabled)))(\"ngStyle\", item_r9.style)(\"tooltipOptions\", item_r9.tooltipOptions);\n    i0.ɵɵattribute(\"data-pc-section\", \"menuitem\")(\"aria-label\", ctx_r1.label(item_r9.label))(\"data-p-focused\", ctx_r1.isItemFocused(ctx_r1.menuitemId(item_r9, ctx_r1.id, i_r6, j_r10)))(\"data-p-disabled\", ctx_r1.disabled(item_r9.disabled))(\"aria-disabled\", ctx_r1.disabled(item_r9.disabled))(\"id\", ctx_r1.menuitemId(item_r9, ctx_r1.id, i_r6, j_r10));\n  }\n}\nfunction Menu_div_0_5_ng_template_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Menu_div_0_5_ng_template_0_ng_template_2_li_0_Template, 1, 0, \"li\", 12)(1, Menu_div_0_5_ng_template_0_ng_template_2_li_1_Template, 1, 16, \"li\", 19);\n  }\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    const submenu_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngIf\", item_r9.separator && (item_r9.visible !== false || submenu_r3.visible !== false));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !item_r9.separator && item_r9.visible !== false && (item_r9.visible !== undefined || submenu_r3.visible !== false));\n  }\n}\nfunction Menu_div_0_5_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Menu_div_0_5_ng_template_0_li_0_Template, 1, 0, \"li\", 12)(1, Menu_div_0_5_ng_template_0_li_1_Template, 3, 12, \"li\", 13)(2, Menu_div_0_5_ng_template_0_ng_template_2_Template, 2, 2, \"ng-template\", 11);\n  }\n  if (rf & 2) {\n    const submenu_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", submenu_r3.separator && submenu_r3.visible !== false);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !submenu_r3.separator);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", submenu_r3.items);\n  }\n}\nfunction Menu_div_0_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Menu_div_0_5_ng_template_0_Template, 3, 3, \"ng-template\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.model);\n  }\n}\nfunction Menu_div_0_6_ng_template_0_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"li\", 14);\n  }\n}\nfunction Menu_div_0_6_ng_template_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 20);\n    i0.ɵɵlistener(\"onMenuItemClick\", function Menu_div_0_6_ng_template_0_li_1_Template_li_onMenuItemClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r11 = i0.ɵɵnextContext();\n      const item_r13 = ctx_r11.$implicit;\n      const i_r14 = ctx_r11.index;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.itemClick($event, ctx_r1.menuitemId(item_r13, ctx_r1.id, i_r14)));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_10_0;\n    const ctx_r11 = i0.ɵɵnextContext();\n    const item_r13 = ctx_r11.$implicit;\n    const i_r14 = ctx_r11.index;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(item_r13.styleClass);\n    i0.ɵɵproperty(\"pMenuItemContent\", item_r13)(\"itemTemplate\", (tmp_10_0 = ctx_r1.itemTemplate) !== null && tmp_10_0 !== undefined ? tmp_10_0 : ctx_r1._itemTemplate)(\"ngClass\", i0.ɵɵpureFunction2(13, _c15, ctx_r1.focusedOptionId() && ctx_r1.menuitemId(item_r13, ctx_r1.id, i_r14) === ctx_r1.focusedOptionId(), ctx_r1.disabled(item_r13.disabled)))(\"ngStyle\", item_r13.style)(\"tooltipOptions\", item_r13.tooltipOptions);\n    i0.ɵɵattribute(\"data-pc-section\", \"menuitem\")(\"aria-label\", ctx_r1.label(item_r13.label))(\"data-p-focused\", ctx_r1.isItemFocused(ctx_r1.menuitemId(item_r13, ctx_r1.id, i_r14)))(\"data-p-disabled\", ctx_r1.disabled(item_r13.disabled))(\"aria-disabled\", ctx_r1.disabled(item_r13.disabled))(\"id\", ctx_r1.menuitemId(item_r13, ctx_r1.id, i_r14));\n  }\n}\nfunction Menu_div_0_6_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Menu_div_0_6_ng_template_0_li_0_Template, 1, 0, \"li\", 12)(1, Menu_div_0_6_ng_template_0_li_1_Template, 1, 16, \"li\", 19);\n  }\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", item_r13.separator && item_r13.visible !== false);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !item_r13.separator && item_r13.visible !== false);\n  }\n}\nfunction Menu_div_0_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Menu_div_0_6_ng_template_0_Template, 2, 2, \"ng-template\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.model);\n  }\n}\nfunction Menu_div_0_div_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Menu_div_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, Menu_div_0_div_7_ng_container_1_Template, 1, 0, \"ng-container\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_5_0;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"end\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (tmp_5_0 = ctx_r1.endTemplate) !== null && tmp_5_0 !== undefined ? tmp_5_0 : ctx_r1._endTemplate);\n  }\n}\nfunction Menu_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4, 0);\n    i0.ɵɵlistener(\"click\", function Menu_div_0_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onOverlayClick($event));\n    })(\"@overlayAnimation.start\", function Menu_div_0_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onOverlayAnimationStart($event));\n    })(\"@overlayAnimation.done\", function Menu_div_0_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onOverlayAnimationEnd($event));\n    });\n    i0.ɵɵtemplate(2, Menu_div_0_div_2_Template, 2, 2, \"div\", 5);\n    i0.ɵɵelementStart(3, \"ul\", 6, 1);\n    i0.ɵɵlistener(\"focus\", function Menu_div_0_Template_ul_focus_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onListFocus($event));\n    })(\"blur\", function Menu_div_0_Template_ul_blur_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onListBlur($event));\n    })(\"keydown\", function Menu_div_0_Template_ul_keydown_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onListKeyDown($event));\n    });\n    i0.ɵɵtemplate(5, Menu_div_0_5_Template, 1, 1, null, 7)(6, Menu_div_0_6_Template, 1, 1, null, 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, Menu_div_0_div_7_Template, 2, 2, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_10_0;\n    let tmp_19_0;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.styleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c11, ctx_r1.popup))(\"ngStyle\", ctx_r1.style)(\"@overlayAnimation\", i0.ɵɵpureFunction1(23, _c13, i0.ɵɵpureFunction2(20, _c12, ctx_r1.showTransitionOptions, ctx_r1.hideTransitionOptions)))(\"@.disabled\", ctx_r1.popup !== true);\n    i0.ɵɵattribute(\"data-pc-name\", \"menu\")(\"id\", ctx_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", (tmp_10_0 = ctx_r1.startTemplate) !== null && tmp_10_0 !== undefined ? tmp_10_0 : ctx_r1._startTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"id\", ctx_r1.id + \"_list\")(\"tabindex\", ctx_r1.getTabIndexValue())(\"data-pc-section\", \"menu\")(\"aria-activedescendant\", ctx_r1.activedescendant())(\"aria-label\", ctx_r1.ariaLabel)(\"aria-labelledBy\", ctx_r1.ariaLabelledBy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasSubMenu());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.hasSubMenu());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_19_0 = ctx_r1.endTemplate) !== null && tmp_19_0 !== undefined ? tmp_19_0 : ctx_r1._endTemplate);\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-menu {\n    background: ${dt('menu.background')};\n    color: ${dt('menu.color')};\n    border: 1px solid ${dt('menu.border.color')};\n    border-radius: ${dt('menu.border.radius')};\n    min-width: 12.5rem;\n}\n\n.p-menu-list {\n    margin: 0;\n    padding: ${dt('menu.list.padding')};\n    outline: 0 none;\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    gap: ${dt('menu.list.gap')};\n}\n\n.p-menu-item-content {\n    transition: background ${dt('menu.transition.duration')}, color ${dt('menu.transition.duration')};\n    border-radius: ${dt('menu.item.border.radius')};\n    color: ${dt('menu.item.color')};\n}\n\n.p-menu-item-link {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    overflow: hidden;\n    position: relative;\n    color: inherit;\n    padding: ${dt('menu.item.padding')};\n    gap: ${dt('menu.item.gap')};\n    user-select: none;\n    outline: 0 none;\n}\n\n.p-menu-item-label {\n    line-height: 1;\n}\n\n.p-menu-item-icon {\n    color: ${dt('menu.item.icon.color')};\n}\n\n.p-menu-item.p-focus .p-menu-item-content {\n    color: ${dt('menu.item.focus.color')};\n    background: ${dt('menu.item.focus.background')};\n}\n\n.p-menu-item.p-focus .p-menu-item-icon {\n    color: ${dt('menu.item.icon.focus.color')};\n}\n\n.p-menu-item:not(.p-disabled) .p-menu-item-content:hover {\n    color: ${dt('menu.item.focus.color')};\n    background: ${dt('menu.item.focus.background')};\n}\n\n.p-menu-item:not(.p-disabled) .p-menu-item-content:hover .p-menu-item-icon {\n    color: ${dt('menu.item.icon.focus.color')};\n}\n\n.p-menu-overlay {\n    box-shadow: ${dt('menu.shadow')};\n}\n\n.p-menu-submenu-label {\n    background: ${dt('menu.submenu.label.background')};\n    padding: ${dt('menu.submenu.label.padding')};\n    color: ${dt('menu.submenu.label.color')};\n    font-weight: ${dt('menu.submenu.label.font.weight')};\n}\n\n.p-menu-separator {\n    border-top: 1px solid ${dt('menu.separator.border.color')};\n}\n\n/* For PrimeNG */\n.p-menu-overlay {\n    position: absolute;\n}\n`;\nconst classes = {\n  root: ({\n    props\n  }) => ['p-menu p-component', {\n    'p-menu-overlay': props.popup\n  }],\n  start: 'p-menu-start',\n  list: 'p-menu-list',\n  submenuLabel: 'p-menu-submenu-label',\n  separator: 'p-menu-separator',\n  end: 'p-menu-end',\n  item: ({\n    instance\n  }) => ['p-menu-item', {\n    'p-focus': instance.id === instance.focusedOptionId,\n    'p-disabled': instance.disabled()\n  }],\n  itemContent: 'p-menu-item-content',\n  itemLink: 'p-menu-item-link',\n  itemIcon: 'p-menu-item-icon',\n  itemLabel: 'p-menu-item-label'\n};\nlet MenuStyle = /*#__PURE__*/(() => {\n  class MenuStyle extends BaseStyle {\n    name = 'menu';\n    theme = theme;\n    classes = classes;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMenuStyle_BaseFactory;\n      return function MenuStyle_Factory(__ngFactoryType__) {\n        return (ɵMenuStyle_BaseFactory || (ɵMenuStyle_BaseFactory = i0.ɵɵgetInheritedFactory(MenuStyle)))(__ngFactoryType__ || MenuStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MenuStyle,\n      factory: MenuStyle.ɵfac\n    });\n  }\n  return MenuStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * Menu is a navigation / command component that supports dynamic and static positioning.\n *\n * [Live Demo](https://www.primeng.org/menu/)\n *\n * @module menustyle\n *\n */\nvar MenuClasses = /*#__PURE__*/function (MenuClasses) {\n  /**\n   * Class name of the root element\n   */\n  MenuClasses[\"root\"] = \"p-menu\";\n  /**\n   * Class name of the start element\n   */\n  MenuClasses[\"start\"] = \"p-menu-start\";\n  /**\n   * Class name of the list element\n   */\n  MenuClasses[\"list\"] = \"p-menu-list\";\n  /**\n   * Class name of the submenu item element\n   */\n  MenuClasses[\"submenuItem\"] = \"p-menu-submenu-item\";\n  /**\n   * Class name of the separator element\n   */\n  MenuClasses[\"separator\"] = \"p-menu-separator\";\n  /**\n   * Class name of the end element\n   */\n  MenuClasses[\"end\"] = \"p-menu-end\";\n  /**\n   * Class name of the item element\n   */\n  MenuClasses[\"item\"] = \"p-menu-item\";\n  /**\n   * Class name of the item content element\n   */\n  MenuClasses[\"itemContent\"] = \"p-menu-item-content\";\n  /**\n   * Class name of the item link element\n   */\n  MenuClasses[\"itemLink\"] = \"p-menu-item-link\";\n  /**\n   * Class name of the item icon element\n   */\n  MenuClasses[\"itemIcon\"] = \"p-menu-item-icon\";\n  /**\n   * Class name of the item label element\n   */\n  MenuClasses[\"itemLabel\"] = \"p-menu-item-label\";\n  return MenuClasses;\n}(MenuClasses || {});\nlet SafeHtmlPipe = /*#__PURE__*/(() => {\n  class SafeHtmlPipe {\n    platformId;\n    sanitizer;\n    constructor(platformId, sanitizer) {\n      this.platformId = platformId;\n      this.sanitizer = sanitizer;\n    }\n    transform(value) {\n      if (!value || !isPlatformBrowser(this.platformId)) {\n        return value;\n      }\n      return this.sanitizer.bypassSecurityTrustHtml(value);\n    }\n    static ɵfac = function SafeHtmlPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SafeHtmlPipe)(i0.ɵɵdirectiveInject(PLATFORM_ID, 16), i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"safeHtml\",\n      type: SafeHtmlPipe,\n      pure: true\n    });\n  }\n  return SafeHtmlPipe;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MenuItemContent = /*#__PURE__*/(() => {\n  class MenuItemContent {\n    item;\n    itemTemplate;\n    onMenuItemClick = new EventEmitter();\n    menu;\n    constructor(menu) {\n      this.menu = menu;\n    }\n    onItemClick(event, item) {\n      this.onMenuItemClick.emit({\n        originalEvent: event,\n        item\n      });\n    }\n    static ɵfac = function MenuItemContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MenuItemContent)(i0.ɵɵdirectiveInject(forwardRef(() => Menu)));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MenuItemContent,\n      selectors: [[\"\", \"pMenuItemContent\", \"\"]],\n      inputs: {\n        item: [0, \"pMenuItemContent\", \"item\"],\n        itemTemplate: \"itemTemplate\"\n      },\n      outputs: {\n        onMenuItemClick: \"onMenuItemClick\"\n      },\n      attrs: _c0,\n      decls: 5,\n      vars: 3,\n      consts: [[\"itemContent\", \"\"], [\"htmlLabel\", \"\"], [1, \"p-menu-item-content\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"p-menu-item-link\", \"pRipple\", \"\", 3, \"target\", \"ngClass\", 4, \"ngIf\"], [\"routerLinkActive\", \"p-menu-item-link-active\", \"class\", \"p-menu-item-link\", \"pRipple\", \"\", 3, \"routerLink\", \"queryParams\", \"routerLinkActiveOptions\", \"target\", \"ngClass\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", 4, \"ngIf\"], [\"pRipple\", \"\", 1, \"p-menu-item-link\", 3, \"target\", \"ngClass\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"routerLinkActive\", \"p-menu-item-link-active\", \"pRipple\", \"\", 1, \"p-menu-item-link\", 3, \"routerLink\", \"queryParams\", \"routerLinkActiveOptions\", \"target\", \"ngClass\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\"], [\"class\", \"p-menu-item-icon\", 3, \"ngClass\", \"class\", \"ngStyle\", 4, \"ngIf\"], [\"class\", \"p-menu-item-label\", 4, \"ngIf\", \"ngIfElse\"], [3, \"styleClass\", \"value\", 4, \"ngIf\"], [1, \"p-menu-item-icon\", 3, \"ngClass\", \"ngStyle\"], [1, \"p-menu-item-label\"], [1, \"p-menu-item-label\", 3, \"innerHTML\"], [3, \"styleClass\", \"value\"]],\n      template: function MenuItemContent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 2);\n          i0.ɵɵlistener(\"click\", function MenuItemContent_Template_div_click_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onItemClick($event, ctx.item));\n          });\n          i0.ɵɵtemplate(1, MenuItemContent_ng_container_1_Template, 3, 2, \"ng-container\", 3)(2, MenuItemContent_ng_container_2_Template, 2, 4, \"ng-container\", 3)(3, MenuItemContent_ng_template_3_Template, 5, 4, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-pc-section\", \"content\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.itemTemplate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.itemTemplate);\n        }\n      },\n      dependencies: [CommonModule, i2.NgClass, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, RouterModule, i3.RouterLink, i3.RouterLinkActive, Ripple, TooltipModule, BadgeModule, i4.Badge, SharedModule, SafeHtmlPipe],\n      encapsulation: 2\n    });\n  }\n  return MenuItemContent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Menu is a navigation / command component that supports dynamic and static positioning.\n * @group Components\n */\nlet Menu = /*#__PURE__*/(() => {\n  class Menu extends BaseComponent {\n    overlayService;\n    /**\n     * An array of menuitems.\n     * @group Props\n     */\n    model;\n    /**\n     * Defines if menu would displayed as a popup.\n     * @group Props\n     */\n    popup;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    appendTo;\n    /**\n     * Whether to automatically manage layering.\n     * @group Props\n     */\n    autoZIndex = true;\n    /**\n     * Base zIndex value to use in layering.\n     * @group Props\n     */\n    baseZIndex = 0;\n    /**\n     * Transition options of the show animation.\n     * @group Props\n     */\n    showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    /**\n     * Transition options of the hide animation.\n     * @group Props\n     */\n    hideTransitionOptions = '.1s linear';\n    /**\n     * Defines a string value that labels an interactive element.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Identifier of the underlying input element.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Current id state as a string.\n     * @group Props\n     */\n    id;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex = 0;\n    /**\n     * Callback to invoke when overlay menu is shown.\n     * @group Emits\n     */\n    onShow = new EventEmitter();\n    /**\n     * Callback to invoke when overlay menu is hidden.\n     * @group Emits\n     */\n    onHide = new EventEmitter();\n    /**\n     * Callback to invoke when the list loses focus.\n     * @param {Event} event - blur event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    /**\n     * Callback to invoke when the list receives focus.\n     * @param {Event} event - focus event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    listViewChild;\n    containerViewChild;\n    container;\n    scrollHandler;\n    documentClickListener;\n    documentResizeListener;\n    preventDocumentDefault;\n    target;\n    visible;\n    focusedOptionId = computed(() => {\n      return this.focusedOptionIndex() !== -1 ? this.focusedOptionIndex() : null;\n    });\n    focusedOptionIndex = signal(-1);\n    selectedOptionIndex = signal(-1);\n    focused = false;\n    overlayVisible = false;\n    relativeAlign;\n    _componentStyle = inject(MenuStyle);\n    constructor(overlayService) {\n      super();\n      this.overlayService = overlayService;\n      this.id = this.id || uuid('pn_id_');\n    }\n    /**\n     * Toggles the visibility of the popup menu.\n     * @param {Event} event - Browser event.\n     * @group Method\n     */\n    toggle(event) {\n      if (this.visible) this.hide();else this.show(event);\n      this.preventDocumentDefault = true;\n    }\n    /**\n     * Displays the popup menu.\n     * @param {Event} event - Browser event.\n     * @group Method\n     */\n    show(event) {\n      this.target = event.currentTarget;\n      this.relativeAlign = event.relativeAlign;\n      this.visible = true;\n      this.preventDocumentDefault = true;\n      this.overlayVisible = true;\n      this.cd.markForCheck();\n    }\n    ngOnInit() {\n      super.ngOnInit();\n      if (!this.popup) {\n        this.bindDocumentClickListener();\n      }\n    }\n    /**\n     * Defines template option for start.\n     * @group Templates\n     */\n    startTemplate;\n    _startTemplate;\n    /**\n     * Defines template option for end.\n     * @group Templates\n     */\n    endTemplate;\n    _endTemplate;\n    /**\n     * Defines template option for header.\n     * @group Templates\n     */\n    headerTemplate;\n    _headerTemplate;\n    /**\n     * Defines template option for item.\n     * @group Templates\n     */\n    itemTemplate;\n    _itemTemplate;\n    /**\n     * Defines template option for item.\n     * @group Templates\n     */\n    submenuHeaderTemplate;\n    _submenuHeaderTemplate;\n    templates;\n    ngAfterContentInit() {\n      this.templates?.forEach(item => {\n        switch (item.getType()) {\n          case 'start':\n            this._startTemplate = item.template;\n            break;\n          case 'end':\n            this._endTemplate = item.template;\n            break;\n          case 'item':\n            this._itemTemplate = item.template;\n            break;\n          case 'submenuheader':\n            this._submenuHeaderTemplate = item.template;\n            break;\n          default:\n            this._itemTemplate = item.template;\n            break;\n        }\n      });\n    }\n    getTabIndexValue() {\n      return this.tabindex !== undefined ? this.tabindex.toString() : null;\n    }\n    onOverlayAnimationStart(event) {\n      switch (event.toState) {\n        case 'visible':\n          if (this.popup) {\n            this.container = event.element;\n            this.moveOnTop();\n            this.onShow.emit({});\n            this.appendOverlay();\n            this.alignOverlay();\n            this.bindDocumentClickListener();\n            this.bindDocumentResizeListener();\n            this.bindScrollListener();\n            focus(this.listViewChild.nativeElement);\n          }\n          break;\n        case 'void':\n          this.onOverlayHide();\n          this.onHide.emit({});\n          break;\n      }\n    }\n    onOverlayAnimationEnd(event) {\n      switch (event.toState) {\n        case 'void':\n          if (this.autoZIndex) {\n            ZIndexUtils.clear(event.element);\n          }\n          break;\n      }\n    }\n    alignOverlay() {\n      if (this.relativeAlign) relativePosition(this.container, this.target);else absolutePosition(this.container, this.target);\n    }\n    appendOverlay() {\n      if (this.appendTo) {\n        if (this.appendTo === 'body') this.renderer.appendChild(this.document.body, this.container);else appendChild(this.appendTo, this.container);\n      }\n    }\n    restoreOverlayAppend() {\n      if (this.container && this.appendTo) {\n        this.renderer.appendChild(this.el.nativeElement, this.container);\n      }\n    }\n    moveOnTop() {\n      if (this.autoZIndex) {\n        ZIndexUtils.set('menu', this.container, this.baseZIndex + this.config.zIndex.menu);\n      }\n    }\n    /**\n     * Hides the popup menu.\n     * @group Method\n     */\n    hide() {\n      this.visible = false;\n      this.relativeAlign = false;\n      this.cd.markForCheck();\n    }\n    onWindowResize() {\n      if (this.visible && !isTouchDevice()) {\n        this.hide();\n      }\n    }\n    menuitemId(item, id, index, childIndex) {\n      return item?.id ?? `${id}_${index}${childIndex !== undefined ? '_' + childIndex : ''}`;\n    }\n    isItemFocused(id) {\n      return this.focusedOptionId() === id;\n    }\n    label(label) {\n      return typeof label === 'function' ? label() : label;\n    }\n    disabled(disabled) {\n      return typeof disabled === 'function' ? disabled() : typeof disabled === 'undefined' ? false : disabled;\n    }\n    activedescendant() {\n      return this.focused ? this.focusedOptionId() : undefined;\n    }\n    onListFocus(event) {\n      if (!this.focused) {\n        this.focused = true;\n        this.onFocus.emit(event);\n      }\n    }\n    onListBlur(event) {\n      if (this.focused) {\n        this.focused = false;\n        this.changeFocusedOptionIndex(-1);\n        this.selectedOptionIndex.set(-1);\n        this.focusedOptionIndex.set(-1);\n        this.onBlur.emit(event);\n      }\n    }\n    onListKeyDown(event) {\n      switch (event.code) {\n        case 'ArrowDown':\n          this.onArrowDownKey(event);\n          break;\n        case 'ArrowUp':\n          this.onArrowUpKey(event);\n          break;\n        case 'Home':\n          this.onHomeKey(event);\n          break;\n        case 'End':\n          this.onEndKey(event);\n          break;\n        case 'Enter':\n          this.onEnterKey(event);\n          break;\n        case 'NumpadEnter':\n          this.onEnterKey(event);\n          break;\n        case 'Space':\n          this.onSpaceKey(event);\n          break;\n        case 'Escape':\n        case 'Tab':\n          if (this.popup) {\n            focus(this.target);\n            this.hide();\n          }\n          this.overlayVisible && this.hide();\n          break;\n        default:\n          break;\n      }\n    }\n    onArrowDownKey(event) {\n      const optionIndex = this.findNextOptionIndex(this.focusedOptionIndex());\n      this.changeFocusedOptionIndex(optionIndex);\n      event.preventDefault();\n    }\n    onArrowUpKey(event) {\n      if (event.altKey && this.popup) {\n        focus(this.target);\n        this.hide();\n        event.preventDefault();\n      } else {\n        const optionIndex = this.findPrevOptionIndex(this.focusedOptionIndex());\n        this.changeFocusedOptionIndex(optionIndex);\n        event.preventDefault();\n      }\n    }\n    onHomeKey(event) {\n      this.changeFocusedOptionIndex(0);\n      event.preventDefault();\n    }\n    onEndKey(event) {\n      this.changeFocusedOptionIndex(find(this.containerViewChild.nativeElement, 'li[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"]').length - 1);\n      event.preventDefault();\n    }\n    onEnterKey(event) {\n      const element = findSingle(this.containerViewChild.nativeElement, `li[id=\"${`${this.focusedOptionIndex()}`}\"]`);\n      const anchorElement = element && findSingle(element, 'a[data-pc-section=\"action\"]');\n      this.popup && focus(this.target);\n      anchorElement ? anchorElement.click() : element && element.click();\n      event.preventDefault();\n    }\n    onSpaceKey(event) {\n      this.onEnterKey(event);\n    }\n    findNextOptionIndex(index) {\n      const links = find(this.containerViewChild.nativeElement, 'li[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"]');\n      const matchedOptionIndex = [...links].findIndex(link => link.id === index);\n      return matchedOptionIndex > -1 ? matchedOptionIndex + 1 : 0;\n    }\n    findPrevOptionIndex(index) {\n      const links = find(this.containerViewChild.nativeElement, 'li[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"]');\n      const matchedOptionIndex = [...links].findIndex(link => link.id === index);\n      return matchedOptionIndex > -1 ? matchedOptionIndex - 1 : 0;\n    }\n    changeFocusedOptionIndex(index) {\n      const links = find(this.containerViewChild.nativeElement, 'li[data-pc-section=\"menuitem\"][data-p-disabled=\"false\"]');\n      if (links.length > 0) {\n        let order = index >= links.length ? links.length - 1 : index < 0 ? 0 : index;\n        order > -1 && this.focusedOptionIndex.set(links[order].getAttribute('id'));\n      }\n    }\n    itemClick(event, id) {\n      const {\n        originalEvent,\n        item\n      } = event;\n      if (!this.focused) {\n        this.focused = true;\n        this.onFocus.emit();\n      }\n      if (item.disabled) {\n        originalEvent.preventDefault();\n        return;\n      }\n      if (!item.url && !item.routerLink) {\n        originalEvent.preventDefault();\n      }\n      if (item.command) {\n        item.command({\n          originalEvent: originalEvent,\n          item: item\n        });\n      }\n      if (this.popup) {\n        this.hide();\n      }\n      if (!this.popup && this.focusedOptionIndex() !== id) {\n        this.focusedOptionIndex.set(id);\n      }\n    }\n    onOverlayClick(event) {\n      if (this.popup) {\n        this.overlayService.add({\n          originalEvent: event,\n          target: this.el.nativeElement\n        });\n      }\n      this.preventDocumentDefault = true;\n    }\n    bindDocumentClickListener() {\n      if (!this.documentClickListener && isPlatformBrowser(this.platformId)) {\n        const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n        this.documentClickListener = this.renderer.listen(documentTarget, 'click', event => {\n          const isOutsideContainer = this.containerViewChild?.nativeElement && !this.containerViewChild?.nativeElement.contains(event.target);\n          const isOutsideTarget = !(this.target && (this.target === event.target || this.target.contains(event.target)));\n          if (!this.popup && isOutsideContainer && isOutsideTarget) {\n            this.onListBlur(event);\n          }\n          if (this.preventDocumentDefault && this.overlayVisible && isOutsideContainer && isOutsideTarget) {\n            this.hide();\n            this.preventDocumentDefault = false;\n          }\n        });\n      }\n    }\n    unbindDocumentClickListener() {\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        this.documentClickListener = null;\n      }\n    }\n    bindDocumentResizeListener() {\n      if (!this.documentResizeListener && isPlatformBrowser(this.platformId)) {\n        const window = this.document.defaultView;\n        this.documentResizeListener = this.renderer.listen(window, 'resize', this.onWindowResize.bind(this));\n      }\n    }\n    unbindDocumentResizeListener() {\n      if (this.documentResizeListener) {\n        this.documentResizeListener();\n        this.documentResizeListener = null;\n      }\n    }\n    bindScrollListener() {\n      if (!this.scrollHandler && isPlatformBrowser(this.platformId)) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, () => {\n          if (this.visible) {\n            this.hide();\n          }\n        });\n      }\n      this.scrollHandler?.bindScrollListener();\n    }\n    unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n    onOverlayHide() {\n      this.unbindDocumentClickListener();\n      this.unbindDocumentResizeListener();\n      this.unbindScrollListener();\n      this.preventDocumentDefault = false;\n      if (!this.cd.destroyed) {\n        this.target = null;\n      }\n    }\n    ngOnDestroy() {\n      if (this.popup) {\n        if (this.scrollHandler) {\n          this.scrollHandler.destroy();\n          this.scrollHandler = null;\n        }\n        if (this.container && this.autoZIndex) {\n          ZIndexUtils.clear(this.container);\n        }\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n      }\n      if (!this.popup) {\n        this.unbindDocumentClickListener();\n      }\n      super.ngOnDestroy();\n    }\n    hasSubMenu() {\n      return this.model?.some(item => item.items) ?? false;\n    }\n    isItemHidden(item) {\n      if (item.separator) {\n        return item.visible === false || item.items && item.items.some(subitem => subitem.visible !== false);\n      }\n      return item.visible === false;\n    }\n    static ɵfac = function Menu_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Menu)(i0.ɵɵdirectiveInject(i5.OverlayService));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Menu,\n      selectors: [[\"p-menu\"]],\n      contentQueries: function Menu_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, _c4, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c5, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c6, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c7, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c8, 4);\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.startTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.endTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.submenuHeaderTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      viewQuery: function Menu_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c9, 5);\n          i0.ɵɵviewQuery(_c10, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.listViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n        }\n      },\n      inputs: {\n        model: \"model\",\n        popup: [2, \"popup\", \"popup\", booleanAttribute],\n        style: \"style\",\n        styleClass: \"styleClass\",\n        appendTo: \"appendTo\",\n        autoZIndex: [2, \"autoZIndex\", \"autoZIndex\", booleanAttribute],\n        baseZIndex: [2, \"baseZIndex\", \"baseZIndex\", numberAttribute],\n        showTransitionOptions: \"showTransitionOptions\",\n        hideTransitionOptions: \"hideTransitionOptions\",\n        ariaLabel: \"ariaLabel\",\n        ariaLabelledBy: \"ariaLabelledBy\",\n        id: \"id\",\n        tabindex: [2, \"tabindex\", \"tabindex\", numberAttribute]\n      },\n      outputs: {\n        onShow: \"onShow\",\n        onHide: \"onHide\",\n        onBlur: \"onBlur\",\n        onFocus: \"onFocus\"\n      },\n      features: [i0.ɵɵProvidersFeature([MenuStyle]), i0.ɵɵInheritDefinitionFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[\"container\", \"\"], [\"list\", \"\"], [\"htmlSubmenuLabel\", \"\"], [3, \"ngClass\", \"class\", \"ngStyle\", \"click\", 4, \"ngIf\"], [3, \"click\", \"ngClass\", \"ngStyle\"], [\"class\", \"p-menu-start\", 4, \"ngIf\"], [\"role\", \"menu\", 1, \"p-menu-list\", \"p-reset\", 3, \"focus\", \"blur\", \"keydown\"], [4, \"ngIf\"], [\"class\", \"p-menu-end\", 4, \"ngIf\"], [1, \"p-menu-start\"], [4, \"ngTemplateOutlet\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"p-menu-separator\", \"role\", \"separator\", 4, \"ngIf\"], [\"class\", \"p-menu-submenu-label\", \"pTooltip\", \"\", \"role\", \"none\", 3, \"ngClass\", \"tooltipOptions\", 4, \"ngIf\"], [\"role\", \"separator\", 1, \"p-menu-separator\"], [\"pTooltip\", \"\", \"role\", \"none\", 1, \"p-menu-submenu-label\", 3, \"ngClass\", \"tooltipOptions\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngIf\", \"ngIfElse\"], [3, \"innerHTML\"], [\"class\", \"p-menu-item\", \"pTooltip\", \"\", \"role\", \"menuitem\", 3, \"pMenuItemContent\", \"itemTemplate\", \"ngClass\", \"ngStyle\", \"class\", \"tooltipOptions\", \"onMenuItemClick\", 4, \"ngIf\"], [\"pTooltip\", \"\", \"role\", \"menuitem\", 1, \"p-menu-item\", 3, \"onMenuItemClick\", \"pMenuItemContent\", \"itemTemplate\", \"ngClass\", \"ngStyle\", \"tooltipOptions\"], [1, \"p-menu-end\"]],\n      template: function Menu_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, Menu_div_0_Template, 8, 25, \"div\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", !ctx.popup || ctx.visible);\n        }\n      },\n      dependencies: [CommonModule, i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, RouterModule, MenuItemContent, TooltipModule, i6.Tooltip, BadgeModule, SharedModule, SafeHtmlPipe],\n      encapsulation: 2,\n      data: {\n        animation: [trigger('overlayAnimation', [transition(':enter', [style({\n          opacity: 0,\n          transform: 'scaleY(0.8)'\n        }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n          opacity: 0\n        }))])])]\n      },\n      changeDetection: 0\n    });\n  }\n  return Menu;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MenuModule = /*#__PURE__*/(() => {\n  class MenuModule {\n    static ɵfac = function MenuModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MenuModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MenuModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [Menu, SharedModule, SharedModule]\n    });\n  }\n  return MenuModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Menu, MenuClasses, MenuItemContent, MenuModule, MenuStyle, SafeHtmlPipe };\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastsPositionService {\r\n\r\n toastPosition: 'top-right' | 'top-center' = 'top-right';\r\n\r\n  constructor() {\r\n    if (typeof window !== 'undefined') {\r\n      this.setToastPosition(window.innerWidth);\r\n      window.addEventListener('resize', () => {\r\n        this.setToastPosition(window.innerWidth);\r\n      });\r\n    }\r\n  }\r\n\r\n  private setToastPosition(width: number): void {\r\n    this.toastPosition = width < 768 ? 'top-center' : 'top-right';\r\n  }\r\n\r\n  getPosition() {\r\n    return this.toastPosition;\r\n  }\r\n}\r\n","import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, booleanAttribute, Input, Directive, NgModule } from '@angular/core';\nimport { createElement, getFirstFocusableElement, focus, getLastFocusableElement } from '@primeuix/utils';\nimport { BaseComponent } from 'primeng/basecomponent';\n\n/**\n * Focus Trap keeps focus within a certain DOM element while tabbing.\n * @group Components\n */\nlet FocusTrap = /*#__PURE__*/(() => {\n  class FocusTrap extends BaseComponent {\n    /**\n     * When set as true, focus wouldn't be managed.\n     * @group Props\n     */\n    pFocusTrapDisabled = false;\n    platformId = inject(PLATFORM_ID);\n    document = inject(DOCUMENT);\n    firstHiddenFocusableElement;\n    lastHiddenFocusableElement;\n    ngOnInit() {\n      super.ngOnInit();\n      if (isPlatformBrowser(this.platformId) && !this.pFocusTrapDisabled) {\n        !this.firstHiddenFocusableElement && !this.lastHiddenFocusableElement && this.createHiddenFocusableElements();\n      }\n    }\n    ngOnChanges(changes) {\n      super.ngOnChanges(changes);\n      if (changes.pFocusTrapDisabled && isPlatformBrowser(this.platformId)) {\n        if (changes.pFocusTrapDisabled.currentValue) {\n          this.removeHiddenFocusableElements();\n        } else {\n          this.createHiddenFocusableElements();\n        }\n      }\n    }\n    removeHiddenFocusableElements() {\n      if (this.firstHiddenFocusableElement && this.firstHiddenFocusableElement.parentNode) {\n        this.firstHiddenFocusableElement.parentNode.removeChild(this.firstHiddenFocusableElement);\n      }\n      if (this.lastHiddenFocusableElement && this.lastHiddenFocusableElement.parentNode) {\n        this.lastHiddenFocusableElement.parentNode.removeChild(this.lastHiddenFocusableElement);\n      }\n    }\n    getComputedSelector(selector) {\n      return `:not(.p-hidden-focusable):not([data-p-hidden-focusable=\"true\"])${selector ?? ''}`;\n    }\n    createHiddenFocusableElements() {\n      const tabindex = '0';\n      const createFocusableElement = onFocus => {\n        return createElement('span', {\n          class: 'p-hidden-accessible p-hidden-focusable',\n          tabindex,\n          role: 'presentation',\n          'aria-hidden': true,\n          'data-p-hidden-accessible': true,\n          'data-p-hidden-focusable': true,\n          onFocus: onFocus?.bind(this)\n        });\n      };\n      this.firstHiddenFocusableElement = createFocusableElement(this.onFirstHiddenElementFocus);\n      this.lastHiddenFocusableElement = createFocusableElement(this.onLastHiddenElementFocus);\n      this.firstHiddenFocusableElement.setAttribute('data-pc-section', 'firstfocusableelement');\n      this.lastHiddenFocusableElement.setAttribute('data-pc-section', 'lastfocusableelement');\n      this.el.nativeElement.prepend(this.firstHiddenFocusableElement);\n      this.el.nativeElement.append(this.lastHiddenFocusableElement);\n    }\n    onFirstHiddenElementFocus(event) {\n      const {\n        currentTarget,\n        relatedTarget\n      } = event;\n      const focusableElement = relatedTarget === this.lastHiddenFocusableElement || !this.el.nativeElement?.contains(relatedTarget) ? getFirstFocusableElement(currentTarget.parentElement, ':not(.p-hidden-focusable)') : this.lastHiddenFocusableElement;\n      focus(focusableElement);\n    }\n    onLastHiddenElementFocus(event) {\n      const {\n        currentTarget,\n        relatedTarget\n      } = event;\n      const focusableElement = relatedTarget === this.firstHiddenFocusableElement || !this.el.nativeElement?.contains(relatedTarget) ? getLastFocusableElement(currentTarget.parentElement, ':not(.p-hidden-focusable)') : this.firstHiddenFocusableElement;\n      focus(focusableElement);\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵFocusTrap_BaseFactory;\n      return function FocusTrap_Factory(__ngFactoryType__) {\n        return (ɵFocusTrap_BaseFactory || (ɵFocusTrap_BaseFactory = i0.ɵɵgetInheritedFactory(FocusTrap)))(__ngFactoryType__ || FocusTrap);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FocusTrap,\n      selectors: [[\"\", \"pFocusTrap\", \"\"]],\n      inputs: {\n        pFocusTrapDisabled: [2, \"pFocusTrapDisabled\", \"pFocusTrapDisabled\", booleanAttribute]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return FocusTrap;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FocusTrapModule = /*#__PURE__*/(() => {\n  class FocusTrapModule {\n    static ɵfac = function FocusTrapModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FocusTrapModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: FocusTrapModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return FocusTrapModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FocusTrap, FocusTrapModule };\n","import { animation, style, animate, trigger, transition, useAnimation } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, inject, NgZone, booleanAttribute, numberAttribute, ContentChildren, ContentChild, Input, ViewChild, Output, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { uuid, blockBodyScroll, unblockBodyScroll, setAttribute, hasClass, addClass, getOuterWidth, getOuterHeight, getViewport, removeClass, appendChild } from '@primeuix/utils';\nimport { TranslationKeys, SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { Button } from 'primeng/button';\nimport { DomHandler } from 'primeng/dom';\nimport { FocusTrap } from 'primeng/focustrap';\nimport { TimesIcon, WindowMaximizeIcon, WindowMinimizeIcon } from 'primeng/icons';\nimport { ZIndexUtils } from 'primeng/utils';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"header\"];\nconst _c1 = [\"content\"];\nconst _c2 = [\"footer\"];\nconst _c3 = [\"closeicon\"];\nconst _c4 = [\"maximizeicon\"];\nconst _c5 = [\"minimizeicon\"];\nconst _c6 = [\"headless\"];\nconst _c7 = [\"titlebar\"];\nconst _c8 = [\"*\", [[\"p-footer\"]]];\nconst _c9 = [\"*\", \"p-footer\"];\nconst _c10 = (a0, a1, a2) => ({\n  position: \"fixed\",\n  height: \"100%\",\n  width: \"100%\",\n  left: 0,\n  top: 0,\n  display: \"flex\",\n  \"justify-content\": a0,\n  \"align-items\": a1,\n  \"pointer-events\": a2\n});\nconst _c11 = a0 => ({\n  \"p-dialog p-component\": true,\n  \"p-dialog-maximized\": a0\n});\nconst _c12 = () => ({\n  display: \"flex\",\n  \"flex-direction\": \"column\",\n  \"pointer-events\": \"auto\"\n});\nconst _c13 = (a0, a1) => ({\n  transform: a0,\n  transition: a1\n});\nconst _c14 = a0 => ({\n  value: \"visible\",\n  params: a0\n});\nfunction Dialog_div_0_div_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dialog_div_0_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dialog_div_0_div_1_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1._headlessTemplate || ctx_r1.headlessTemplate || ctx_r1.headlessT);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵlistener(\"mousedown\", function Dialog_div_0_div_1_ng_template_3_div_0_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.initResize($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"resizeHandle\"));\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"id\", ctx_r1.ariaLabelledBy)(\"ngClass\", ctx_r1.cx(\"title\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.header);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.maximized ? ctx_r1.minimizeIcon : ctx_r1.maximizeIcon);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_2_WindowMaximizeIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"WindowMaximizeIcon\");\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_2_WindowMinimizeIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"WindowMinimizeIcon\");\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_2_WindowMaximizeIcon_1_Template, 1, 0, \"WindowMaximizeIcon\", 22)(2, Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_2_WindowMinimizeIcon_2_Template, 1, 0, \"WindowMinimizeIcon\", 22);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.maximized && !ctx_r1._maximizeiconTemplate && !ctx_r1.maximizeIconTemplate && !ctx_r1.maximizeIconT);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.maximized && !ctx_r1._minimizeiconTemplate && !ctx_r1.minimizeIconTemplate && !ctx_r1.minimizeIconT);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_3_1_ng_template_0_Template(rf, ctx) {}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_3_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_3_1_Template, 1, 0, null, 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1._maximizeiconTemplate || ctx_r1.maximizeIconTemplate || ctx_r1.maximizeIconT);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_4_1_ng_template_0_Template(rf, ctx) {}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_4_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_4_1_Template, 1, 0, null, 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1._minimizeiconTemplate || ctx_r1.minimizeIconTemplate || ctx_r1.minimizeIconT);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 21);\n    i0.ɵɵlistener(\"onClick\", function Dialog_div_0_div_1_ng_template_3_p_button_6_Template_p_button_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.maximize());\n    })(\"keydown.enter\", function Dialog_div_0_div_1_ng_template_3_p_button_6_Template_p_button_keydown_enter_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.maximize());\n    });\n    i0.ɵɵtemplate(1, Dialog_div_0_div_1_ng_template_3_p_button_6_span_1_Template, 1, 1, \"span\", 18)(2, Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_2_Template, 3, 2, \"ng-container\", 22)(3, Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_3_Template, 2, 1, \"ng-container\", 22)(4, Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_4_Template, 2, 1, \"ng-container\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"styleClass\", ctx_r1.cx(\"pcMaximizeButton\"))(\"tabindex\", ctx_r1.maximizable ? \"0\" : \"-1\")(\"ariaLabel\", ctx_r1.maximizeLabel)(\"buttonProps\", ctx_r1.maximizeButtonProps);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.maximizeIcon && !ctx_r1._maximizeiconTemplate && !ctx_r1._minimizeiconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.maximizeIcon && !(ctx_r1.maximizeButtonProps == null ? null : ctx_r1.maximizeButtonProps.icon));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.maximized);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.maximized);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_ng_container_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 15);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(7);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.closeIcon);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_ng_container_0_TimesIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"TimesIcon\");\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_ng_container_0_span_1_Template, 1, 1, \"span\", 18)(2, Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_ng_container_0_TimesIcon_2_Template, 1, 0, \"TimesIcon\", 22);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.closeIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.closeIcon);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_span_1_1_ng_template_0_Template(rf, ctx) {}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_span_1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_span_1_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_span_1_1_Template, 1, 0, null, 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1._closeiconTemplate || ctx_r1.closeIconTemplate || ctx_r1.closeIconT);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_ng_container_0_Template, 3, 2, \"ng-container\", 22)(1, Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_span_1_Template, 2, 1, \"span\", 22);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1._closeiconTemplate && !ctx_r1.closeIconTemplate && !ctx_r1.closeIconT && !(ctx_r1.closeButtonProps == null ? null : ctx_r1.closeButtonProps.icon));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1._closeiconTemplate || ctx_r1.closeIconTemplate || ctx_r1.closeIconT);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_p_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 23);\n    i0.ɵɵlistener(\"onClick\", function Dialog_div_0_div_1_ng_template_3_p_button_7_Template_p_button_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.close($event));\n    })(\"keydown.enter\", function Dialog_div_0_div_1_ng_template_3_p_button_7_Template_p_button_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.close($event));\n    });\n    i0.ɵɵtemplate(1, Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_Template, 2, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"styleClass\", ctx_r1.cx(\"pcCloseButton\"))(\"ariaLabel\", ctx_r1.closeAriaLabel)(\"tabindex\", ctx_r1.closeTabindex)(\"buttonProps\", ctx_r1.closeButtonProps);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_div_12_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15, 5);\n    i0.ɵɵprojection(2, 1);\n    i0.ɵɵtemplate(3, Dialog_div_0_div_1_ng_template_3_div_12_ng_container_3_Template, 1, 0, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"footer\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1._footerTemplate || ctx_r1.footerTemplate || ctx_r1.footerT);\n  }\n}\nfunction Dialog_div_0_div_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtemplate(0, Dialog_div_0_div_1_ng_template_3_div_0_Template, 1, 1, \"div\", 12);\n    i0.ɵɵelementStart(1, \"div\", 13, 2);\n    i0.ɵɵlistener(\"mousedown\", function Dialog_div_0_div_1_ng_template_3_Template_div_mousedown_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.initDrag($event));\n    });\n    i0.ɵɵtemplate(3, Dialog_div_0_div_1_ng_template_3_span_3_Template, 2, 3, \"span\", 14)(4, Dialog_div_0_div_1_ng_template_3_ng_container_4_Template, 1, 0, \"ng-container\", 11);\n    i0.ɵɵelementStart(5, \"div\", 15);\n    i0.ɵɵtemplate(6, Dialog_div_0_div_1_ng_template_3_p_button_6_Template, 5, 8, \"p-button\", 16)(7, Dialog_div_0_div_1_ng_template_3_p_button_7_Template, 3, 4, \"p-button\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 7, 3);\n    i0.ɵɵprojection(10);\n    i0.ɵɵtemplate(11, Dialog_div_0_div_1_ng_template_3_ng_container_11_Template, 1, 0, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, Dialog_div_0_div_1_ng_template_3_div_12_Template, 4, 2, \"div\", 18);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.resizable);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"header\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1._headerTemplate && !ctx_r1.headerTemplate && !ctx_r1.headerT);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1._headerTemplate || ctx_r1.headerTemplate || ctx_r1.headerT);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"headerActions\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.maximizable);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.closable);\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.contentStyleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"content\"))(\"ngStyle\", ctx_r1.contentStyle);\n    i0.ɵɵattribute(\"data-pc-section\", \"content\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1._contentTemplate || ctx_r1.contentTemplate || ctx_r1.contentT);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1._footerTemplate || ctx_r1.footerTemplate || ctx_r1.footerT);\n  }\n}\nfunction Dialog_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9, 0);\n    i0.ɵɵlistener(\"@animation.start\", function Dialog_div_0_div_1_Template_div_animation_animation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onAnimationStart($event));\n    })(\"@animation.done\", function Dialog_div_0_div_1_Template_div_animation_animation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onAnimationEnd($event));\n    });\n    i0.ɵɵtemplate(2, Dialog_div_0_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 10)(3, Dialog_div_0_div_1_ng_template_3_Template, 13, 14, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const notHeadless_r7 = i0.ɵɵreference(4);\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(ctx_r1.style);\n    i0.ɵɵclassMap(ctx_r1.styleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c11, ctx_r1.maximizable && ctx_r1.maximized))(\"ngStyle\", i0.ɵɵpureFunction0(15, _c12))(\"pFocusTrapDisabled\", ctx_r1.focusTrap === false)(\"@animation\", i0.ɵɵpureFunction1(19, _c14, i0.ɵɵpureFunction2(16, _c13, ctx_r1.transformOptions, ctx_r1.transitionOptions)));\n    i0.ɵɵattribute(\"role\", ctx_r1.role)(\"aria-labelledby\", ctx_r1.ariaLabelledBy)(\"aria-modal\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1._headlessTemplate || ctx_r1.headlessTemplate || ctx_r1.headlessT)(\"ngIfElse\", notHeadless_r7);\n  }\n}\nfunction Dialog_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, Dialog_div_0_div_1_Template, 5, 21, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(ctx_r1.maskStyle);\n    i0.ɵɵclassMap(ctx_r1.maskStyleClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.maskClass)(\"ngStyle\", i0.ɵɵpureFunction3(7, _c10, ctx_r1.position === \"left\" || ctx_r1.position === \"topleft\" || ctx_r1.position === \"bottomleft\" ? \"flex-start\" : ctx_r1.position === \"right\" || ctx_r1.position === \"topright\" || ctx_r1.position === \"bottomright\" ? \"flex-end\" : \"center\", ctx_r1.position === \"top\" || ctx_r1.position === \"topleft\" || ctx_r1.position === \"topright\" ? \"flex-start\" : ctx_r1.position === \"bottom\" || ctx_r1.position === \"bottomleft\" || ctx_r1.position === \"bottomright\" ? \"flex-end\" : \"center\", ctx_r1.modal ? \"auto\" : \"none\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.visible);\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-dialog {\n    max-height: 90%;\n    transform: scale(1);\n    border-radius: ${dt('dialog.border.radius')};\n    box-shadow: ${dt('dialog.shadow')};\n    background: ${dt('dialog.background')};\n    border: 1px solid ${dt('dialog.border.color')};\n    color: ${dt('dialog.color')};\n    display: flex;\n    flex-direction: column;\n    pointer-events: auto\n}\n\n.p-dialog-content {\n    overflow-y: auto;\n    padding: ${dt('dialog.content.padding')};\n    flex-grow: 1;\n}\n\n.p-dialog-header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-shrink: 0;\n    padding: ${dt('dialog.header.padding')};\n}\n\n.p-dialog-title {\n    font-weight: ${dt('dialog.title.font.weight')};\n    font-size: ${dt('dialog.title.font.size')};\n}\n\n.p-dialog-footer {\n    flex-shrink: 0;\n    padding: ${dt('dialog.footer.padding')};\n    display: flex;\n    justify-content: flex-end;\n    gap: ${dt('dialog.footer.gap')};\n}\n\n.p-dialog-header-actions {\n    display: flex;\n    align-items: center;\n    gap: ${dt('dialog.header.gap')};\n}\n\n.p-dialog-enter-active {\n    transition: all 150ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.p-dialog-leave-active {\n    transition: all 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.p-dialog-enter-from,\n.p-dialog-leave-to {\n    opacity: 0;\n    transform: scale(0.7);\n}\n\n.p-dialog-top .p-dialog,\n.p-dialog-bottom .p-dialog,\n.p-dialog-left .p-dialog,\n.p-dialog-right .p-dialog,\n.p-dialog-topleft .p-dialog,\n.p-dialog-topright .p-dialog,\n.p-dialog-bottomleft .p-dialog,\n.p-dialog-bottomright .p-dialog {\n    margin: 0.75rem;\n    transform: translate3d(0px, 0px, 0px);\n}\n\n.p-dialog-top .p-dialog-enter-active,\n.p-dialog-top .p-dialog-leave-active,\n.p-dialog-bottom .p-dialog-enter-active,\n.p-dialog-bottom .p-dialog-leave-active,\n.p-dialog-left .p-dialog-enter-active,\n.p-dialog-left .p-dialog-leave-active,\n.p-dialog-right .p-dialog-enter-active,\n.p-dialog-right .p-dialog-leave-active,\n.p-dialog-topleft .p-dialog-enter-active,\n.p-dialog-topleft .p-dialog-leave-active,\n.p-dialog-topright .p-dialog-enter-active,\n.p-dialog-topright .p-dialog-leave-active,\n.p-dialog-bottomleft .p-dialog-enter-active,\n.p-dialog-bottomleft .p-dialog-leave-active,\n.p-dialog-bottomright .p-dialog-enter-active,\n.p-dialog-bottomright .p-dialog-leave-active {\n    transition: all 0.3s ease-out;\n}\n\n.p-dialog-top .p-dialog-enter-from,\n.p-dialog-top .p-dialog-leave-to {\n    transform: translate3d(0px, -100%, 0px);\n}\n\n.p-dialog-bottom .p-dialog-enter-from,\n.p-dialog-bottom .p-dialog-leave-to {\n    transform: translate3d(0px, 100%, 0px);\n}\n\n.p-dialog-left .p-dialog-enter-from,\n.p-dialog-left .p-dialog-leave-to,\n.p-dialog-topleft .p-dialog-enter-from,\n.p-dialog-topleft .p-dialog-leave-to,\n.p-dialog-bottomleft .p-dialog-enter-from,\n.p-dialog-bottomleft .p-dialog-leave-to {\n    transform: translate3d(-100%, 0px, 0px);\n}\n\n.p-dialog-right .p-dialog-enter-from,\n.p-dialog-right .p-dialog-leave-to,\n.p-dialog-topright .p-dialog-enter-from,\n.p-dialog-topright .p-dialog-leave-to,\n.p-dialog-bottomright .p-dialog-enter-from,\n.p-dialog-bottomright .p-dialog-leave-to {\n    transform: translate3d(100%, 0px, 0px);\n}\n\n.p-dialog-left:dir(rtl) .p-dialog-enter-from,\n.p-dialog-left:dir(rtl) .p-dialog-leave-to,\n.p-dialog-topleft:dir(rtl) .p-dialog-enter-from,\n.p-dialog-topleft:dir(rtl) .p-dialog-leave-to,\n.p-dialog-bottomleft:dir(rtl) .p-dialog-enter-from,\n.p-dialog-bottomleft:dir(rtl) .p-dialog-leave-to {\n    transform: translate3d(100%, 0px, 0px);\n}\n\n.p-dialog-right:dir(rtl) .p-dialog-enter-from,\n.p-dialog-right:dir(rtl) .p-dialog-leave-to,\n.p-dialog-topright:dir(rtl) .p-dialog-enter-from,\n.p-dialog-topright:dir(rtl) .p-dialog-leave-to,\n.p-dialog-bottomright:dir(rtl) .p-dialog-enter-from,\n.p-dialog-bottomright:dir(rtl) .p-dialog-leave-to {\n    transform: translate3d(-100%, 0px, 0px);\n}\n\n.p-dialog-maximized {\n    width: 100vw !important;\n    height: 100vh !important;\n    top: 0px !important;\n    left: 0px !important;\n    max-height: 100%;\n    height: 100%;\n    border-radius: 0;\n}\n\n.p-dialog-maximized .p-dialog-content {\n    flex-grow: 1;\n}\n\n.p-overlay-mask:dir(rtl) {\n    flex-direction: row-reverse;\n}\n\n/* For PrimeNG */\n\n.p-dialog .p-resizable-handle {\n    position: absolute;\n    font-size: 0.1px;\n    display: block;\n    cursor: se-resize;\n    width: 12px;\n    height: 12px;\n    right: 1px;\n    bottom: 1px;\n}\n\n.p-confirm-dialog .p-dialog-content {\n    display: flex;\n    align-items: center;\n}\n`;\n/* Position */\nconst inlineStyles = {\n  mask: ({\n    instance\n  }) => ({\n    position: 'fixed',\n    height: '100%',\n    width: '100%',\n    left: 0,\n    top: 0,\n    display: 'flex',\n    justifyContent: instance.position === 'left' || instance.position === 'topleft' || instance.position === 'bottomleft' ? 'flex-start' : instance.position === 'right' || instance.position === 'topright' || instance.position === 'bottomright' ? 'flex-end' : 'center',\n    alignItems: instance.position === 'top' || instance.position === 'topleft' || instance.position === 'topright' ? 'flex-start' : instance.position === 'bottom' || instance.position === 'bottomleft' || instance.position === 'bottomright' ? 'flex-end' : 'center',\n    pointerEvents: instance.modal ? 'auto' : 'none'\n  }),\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    pointerEvents: 'auto'\n  }\n};\nconst classes = {\n  mask: ({\n    instance\n  }) => {\n    const positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];\n    const pos = positions.find(item => item === instance.position);\n    return {\n      'p-dialog-mask': true,\n      'p-overlay-mask p-overlay-mask-enter': instance.modal,\n      [`p-dialog-${pos}`]: pos\n    };\n  },\n  root: ({\n    instance\n  }) => ({\n    'p-dialog p-component': true,\n    'p-dialog-maximized': instance.maximizable && instance.maximized\n  }),\n  header: 'p-dialog-header',\n  title: 'p-dialog-title',\n  resizeHandle: 'p-resizable-handle',\n  headerActions: 'p-dialog-header-actions',\n  pcMaximizeButton: 'p-dialog-maximize-button',\n  pcCloseButton: 'p-dialog-close-button',\n  content: 'p-dialog-content',\n  footer: 'p-dialog-footer'\n};\nlet DialogStyle = /*#__PURE__*/(() => {\n  class DialogStyle extends BaseStyle {\n    name = 'dialog';\n    theme = theme;\n    classes = classes;\n    inlineStyles = inlineStyles;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵDialogStyle_BaseFactory;\n      return function DialogStyle_Factory(__ngFactoryType__) {\n        return (ɵDialogStyle_BaseFactory || (ɵDialogStyle_BaseFactory = i0.ɵɵgetInheritedFactory(DialogStyle)))(__ngFactoryType__ || DialogStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DialogStyle,\n      factory: DialogStyle.ɵfac\n    });\n  }\n  return DialogStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * Dialog is a container to display content in an overlay window.\n *\n * [Live Demo](https://www.primeng.org/dialog)\n *\n * @module dialogstyle\n *\n */\nvar DialogClasses = /*#__PURE__*/function (DialogClasses) {\n  /**\n   * Class name of the mask element\n   */\n  DialogClasses[\"mask\"] = \"p-dialog-mask\";\n  /**\n   * Class name of the root element\n   */\n  DialogClasses[\"root\"] = \"p-dialog\";\n  /**\n   * Class name of the header element\n   */\n  DialogClasses[\"header\"] = \"p-dialog-header\";\n  /**\n   * Class name of the title element\n   */\n  DialogClasses[\"title\"] = \"p-dialog-title\";\n  /**\n   * Class name of the header actions element\n   */\n  DialogClasses[\"headerActions\"] = \"p-dialog-header-actions\";\n  /**\n   * Class name of the maximize button element\n   */\n  DialogClasses[\"pcMaximizeButton\"] = \"p-dialog-maximize-button\";\n  /**\n   * Class name of the close button element\n   */\n  DialogClasses[\"pcCloseButton\"] = \"p-dialog-close-button\";\n  /**\n   * Class name of the content element\n   */\n  DialogClasses[\"content\"] = \"p-dialog-content\";\n  /**\n   * Class name of the footer element\n   */\n  DialogClasses[\"footer\"] = \"p-dialog-footer\";\n  return DialogClasses;\n}(DialogClasses || {});\nconst showAnimation = animation([style({\n  transform: '{{transform}}',\n  opacity: 0\n}), animate('{{transition}}')]);\nconst hideAnimation = animation([animate('{{transition}}', style({\n  transform: '{{transform}}',\n  opacity: 0\n}))]);\n/**\n * Dialog is a container to display content in an overlay window.\n * @group Components\n */\nlet Dialog = /*#__PURE__*/(() => {\n  class Dialog extends BaseComponent {\n    /**\n     * Title text of the dialog.\n     * @group Props\n     */\n    header;\n    /**\n     * Enables dragging to change the position using header.\n     * @group Props\n     */\n    draggable = true;\n    /**\n     * Enables resizing of the content.\n     * @group Props\n     */\n    resizable = true;\n    /**\n     * Defines the left offset of dialog.\n     * @group Props\n     * @deprecated positionLeft property is deprecated.\n     */\n    get positionLeft() {\n      return 0;\n    }\n    set positionLeft(_positionLeft) {\n      console.log('positionLeft property is deprecated.');\n    }\n    /**\n     * Defines the top offset of dialog.\n     * @group Props\n     * @deprecated positionTop property is deprecated.\n     */\n    get positionTop() {\n      return 0;\n    }\n    set positionTop(_positionTop) {\n      console.log('positionTop property is deprecated.');\n    }\n    /**\n     * Style of the content section.\n     * @group Props\n     */\n    contentStyle;\n    /**\n     * Style class of the content.\n     * @group Props\n     */\n    contentStyleClass;\n    /**\n     * Defines if background should be blocked when dialog is displayed.\n     * @group Props\n     */\n    modal = false;\n    /**\n     * Specifies if pressing escape key should hide the dialog.\n     * @group Props\n     */\n    closeOnEscape = true;\n    /**\n     * Specifies if clicking the modal background should hide the dialog.\n     * @group Props\n     */\n    dismissableMask = false;\n    /**\n     * When enabled dialog is displayed in RTL direction.\n     * @group Props\n     */\n    rtl = false;\n    /**\n     * Adds a close icon to the header to hide the dialog.\n     * @group Props\n     */\n    closable = true;\n    /**\n     * Defines if the component is responsive.\n     * @group Props\n     * @deprecated Responsive property is deprecated.\n     */\n    get responsive() {\n      return false;\n    }\n    set responsive(_responsive) {\n      console.log('Responsive property is deprecated.');\n    }\n    /**\n     * Target element to attach the dialog, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    appendTo;\n    /**\n     * Object literal to define widths per screen size.\n     * @group Props\n     */\n    breakpoints;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the mask.\n     * @group Props\n     */\n    maskStyleClass;\n    /**\n     * Style of the mask.\n     * @group Props\n     */\n    maskStyle;\n    /**\n     * Whether to show the header or not.\n     * @group Props\n     */\n    showHeader = true;\n    /**\n     * Defines the breakpoint of the component responsive.\n     * @group Props\n     * @deprecated Breakpoint property is not utilized and deprecated. Use breakpoints or CSS media queries instead.\n     */\n    get breakpoint() {\n      return 649;\n    }\n    set breakpoint(_breakpoint) {\n      console.log('Breakpoint property is not utilized and deprecated, use breakpoints or CSS media queries instead.');\n    }\n    /**\n     * Whether background scroll should be blocked when dialog is visible.\n     * @group Props\n     */\n    blockScroll = false;\n    /**\n     * Whether to automatically manage layering.\n     * @group Props\n     */\n    autoZIndex = true;\n    /**\n     * Base zIndex value to use in layering.\n     * @group Props\n     */\n    baseZIndex = 0;\n    /**\n     * Minimum value for the left coordinate of dialog in dragging.\n     * @group Props\n     */\n    minX = 0;\n    /**\n     * Minimum value for the top coordinate of dialog in dragging.\n     * @group Props\n     */\n    minY = 0;\n    /**\n     * When enabled, first focusable element receives focus on show.\n     * @group Props\n     */\n    focusOnShow = true;\n    /**\n     * Whether the dialog can be displayed full screen.\n     * @group Props\n     */\n    maximizable = false;\n    /**\n     * Keeps dialog in the viewport.\n     * @group Props\n     */\n    keepInViewport = true;\n    /**\n     * When enabled, can only focus on elements inside the dialog.\n     * @group Props\n     */\n    focusTrap = true;\n    /**\n     * Transition options of the animation.\n     * @group Props\n     */\n    transitionOptions = '150ms cubic-bezier(0, 0, 0.2, 1)';\n    /**\n     * Name of the close icon.\n     * @group Props\n     */\n    closeIcon;\n    /**\n     * Defines a string that labels the close button for accessibility.\n     * @group Props\n     */\n    closeAriaLabel;\n    /**\n     * Index of the close button in tabbing order.\n     * @group Props\n     */\n    closeTabindex = '0';\n    /**\n     * Name of the minimize icon.\n     * @group Props\n     */\n    minimizeIcon;\n    /**\n     * Name of the maximize icon.\n     * @group Props\n     */\n    maximizeIcon;\n    /**\n     * Used to pass all properties of the ButtonProps to the Button component.\n     * @group Props\n     */\n    closeButtonProps = {\n      severity: 'secondary',\n      text: true,\n      rounded: true\n    };\n    /**\n     * Used to pass all properties of the ButtonProps to the Button component.\n     * @group Props\n     */\n    maximizeButtonProps = {\n      severity: 'secondary',\n      text: true,\n      rounded: true\n    };\n    /**\n     * Specifies the visibility of the dialog.\n     * @group Props\n     */\n    get visible() {\n      return this._visible;\n    }\n    set visible(value) {\n      this._visible = value;\n      if (this._visible && !this.maskVisible) {\n        this.maskVisible = true;\n      }\n    }\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    get style() {\n      return this._style;\n    }\n    set style(value) {\n      if (value) {\n        this._style = {\n          ...value\n        };\n        this.originalStyle = value;\n      }\n    }\n    /**\n     * Position of the dialog.\n     * @group Props\n     */\n    get position() {\n      return this._position;\n    }\n    set position(value) {\n      this._position = value;\n      switch (value) {\n        case 'topleft':\n        case 'bottomleft':\n        case 'left':\n          this.transformOptions = 'translate3d(-100%, 0px, 0px)';\n          break;\n        case 'topright':\n        case 'bottomright':\n        case 'right':\n          this.transformOptions = 'translate3d(100%, 0px, 0px)';\n          break;\n        case 'bottom':\n          this.transformOptions = 'translate3d(0px, 100%, 0px)';\n          break;\n        case 'top':\n          this.transformOptions = 'translate3d(0px, -100%, 0px)';\n          break;\n        default:\n          this.transformOptions = 'scale(0.7)';\n          break;\n      }\n    }\n    /**\n     * Role attribute of html element.\n     * @group Emits\n     */\n    role = 'dialog';\n    /**\n     * Callback to invoke when dialog is shown.\n     * @group Emits\n     */\n    onShow = new EventEmitter();\n    /**\n     * Callback to invoke when dialog is hidden.\n     * @group Emits\n     */\n    onHide = new EventEmitter();\n    /**\n     * This EventEmitter is used to notify changes in the visibility state of a component.\n     * @param {boolean} value - New value.\n     * @group Emits\n     */\n    visibleChange = new EventEmitter();\n    /**\n     * Callback to invoke when dialog resizing is initiated.\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    onResizeInit = new EventEmitter();\n    /**\n     * Callback to invoke when dialog resizing is completed.\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    onResizeEnd = new EventEmitter();\n    /**\n     * Callback to invoke when dialog dragging is completed.\n     * @param {DragEvent} event - Drag event.\n     * @group Emits\n     */\n    onDragEnd = new EventEmitter();\n    /**\n     * Callback to invoke when dialog maximized or unmaximized.\n     * @group Emits\n     */\n    onMaximize = new EventEmitter();\n    headerViewChild;\n    contentViewChild;\n    footerViewChild;\n    /**\n     * Header template.\n     * @group Props\n     */\n    headerTemplate;\n    /**\n     * Content template.\n     * @group Props\n     */\n    contentTemplate;\n    /**\n     * Footer template.\n     * @group Props\n     */\n    footerTemplate;\n    /**\n     * Close icon template.\n     * @group Props\n     */\n    closeIconTemplate;\n    /**\n     * Maximize icon template.\n     * @group Props\n     */\n    maximizeIconTemplate;\n    /**\n     * Minimize icon template.\n     * @group Props\n     */\n    minimizeIconTemplate;\n    /**\n     * Headless template.\n     * @group Props\n     */\n    headlessTemplate;\n    _headerTemplate;\n    _contentTemplate;\n    _footerTemplate;\n    _closeiconTemplate;\n    _maximizeiconTemplate;\n    _minimizeiconTemplate;\n    _headlessTemplate;\n    _visible = false;\n    maskVisible;\n    container;\n    wrapper;\n    dragging;\n    ariaLabelledBy = this.getAriaLabelledBy();\n    documentDragListener;\n    documentDragEndListener;\n    resizing;\n    documentResizeListener;\n    documentResizeEndListener;\n    documentEscapeListener;\n    maskClickListener;\n    lastPageX;\n    lastPageY;\n    preventVisibleChangePropagation;\n    maximized;\n    preMaximizeContentHeight;\n    preMaximizeContainerWidth;\n    preMaximizeContainerHeight;\n    preMaximizePageX;\n    preMaximizePageY;\n    id = uuid('pn_id_');\n    _style = {};\n    _position = 'center';\n    originalStyle;\n    transformOptions = 'scale(0.7)';\n    styleElement;\n    window;\n    _componentStyle = inject(DialogStyle);\n    headerT;\n    contentT;\n    footerT;\n    closeIconT;\n    maximizeIconT;\n    minimizeIconT;\n    headlessT;\n    get maximizeLabel() {\n      return this.config.getTranslation(TranslationKeys.ARIA)['maximizeLabel'];\n    }\n    zone = inject(NgZone);\n    get maskClass() {\n      const positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];\n      const pos = positions.find(item => item === this.position);\n      return {\n        'p-dialog-mask': true,\n        'p-overlay-mask p-overlay-mask-enter': this.modal || this.dismissableMask,\n        [`p-dialog-${pos}`]: pos\n      };\n    }\n    ngOnInit() {\n      super.ngOnInit();\n      if (this.breakpoints) {\n        this.createStyle();\n      }\n    }\n    templates;\n    ngAfterContentInit() {\n      this.templates?.forEach(item => {\n        switch (item.getType()) {\n          case 'header':\n            this.headerT = item.template;\n            break;\n          case 'content':\n            this.contentT = item.template;\n            break;\n          case 'footer':\n            this.footerT = item.template;\n            break;\n          case 'closeicon':\n            this.closeIconT = item.template;\n            break;\n          case 'maximizeicon':\n            this.maximizeIconT = item.template;\n            break;\n          case 'minimizeicon':\n            this.minimizeIconT = item.template;\n            break;\n          case 'headless':\n            this.headlessT = item.template;\n            break;\n          default:\n            this.contentT = item.template;\n            break;\n        }\n      });\n    }\n    getAriaLabelledBy() {\n      return this.header !== null ? uuid('pn_id_') + '_header' : null;\n    }\n    parseDurationToMilliseconds(durationString) {\n      const transitionTimeRegex = /([\\d\\.]+)(ms|s)\\b/g;\n      let totalMilliseconds = 0;\n      let match;\n      while ((match = transitionTimeRegex.exec(durationString)) !== null) {\n        const value = parseFloat(match[1]);\n        const unit = match[2];\n        if (unit === 'ms') {\n          totalMilliseconds += value;\n        } else if (unit === 's') {\n          totalMilliseconds += value * 1000;\n        }\n      }\n      if (totalMilliseconds === 0) {\n        return undefined;\n      }\n      return totalMilliseconds;\n    }\n    _focus(focusParentElement) {\n      if (focusParentElement) {\n        const timeoutDuration = this.parseDurationToMilliseconds(this.transitionOptions);\n        let _focusableElements = DomHandler.getFocusableElements(focusParentElement);\n        if (_focusableElements && _focusableElements.length > 0) {\n          this.zone.runOutsideAngular(() => {\n            setTimeout(() => _focusableElements[0].focus(), timeoutDuration || 5);\n          });\n          return true;\n        }\n      }\n      return false;\n    }\n    focus(focusParentElement) {\n      let focused = this._focus(focusParentElement);\n      if (!focused) {\n        focused = this._focus(this.footerViewChild?.nativeElement);\n        if (!focused) {\n          focused = this._focus(this.headerViewChild?.nativeElement);\n          if (!focused) {\n            this._focus(this.contentViewChild?.nativeElement);\n          }\n        }\n      }\n    }\n    close(event) {\n      this.visibleChange.emit(false);\n      event.preventDefault();\n    }\n    enableModality() {\n      if (this.closable && this.dismissableMask) {\n        this.maskClickListener = this.renderer.listen(this.wrapper, 'mousedown', event => {\n          if (this.wrapper && this.wrapper.isSameNode(event.target)) {\n            this.close(event);\n          }\n        });\n      }\n      if (this.modal) {\n        blockBodyScroll();\n      }\n    }\n    disableModality() {\n      if (this.wrapper) {\n        if (this.dismissableMask) {\n          this.unbindMaskClickListener();\n        }\n        // for nested dialogs w/modal\n        const scrollBlockers = document.querySelectorAll('.p-dialog-mask-scrollblocker');\n        if (this.modal && scrollBlockers && scrollBlockers.length == 1) {\n          unblockBodyScroll();\n        }\n        if (!this.cd.destroyed) {\n          this.cd.detectChanges();\n        }\n      }\n    }\n    maximize() {\n      this.maximized = !this.maximized;\n      if (!this.modal && !this.blockScroll) {\n        if (this.maximized) {\n          blockBodyScroll();\n        } else {\n          unblockBodyScroll();\n        }\n      }\n      this.onMaximize.emit({\n        maximized: this.maximized\n      });\n    }\n    unbindMaskClickListener() {\n      if (this.maskClickListener) {\n        this.maskClickListener();\n        this.maskClickListener = null;\n      }\n    }\n    moveOnTop() {\n      if (this.autoZIndex) {\n        ZIndexUtils.set('modal', this.container, this.baseZIndex + this.config.zIndex.modal);\n        this.wrapper.style.zIndex = String(parseInt(this.container.style.zIndex, 10) - 1);\n      }\n    }\n    createStyle() {\n      if (isPlatformBrowser(this.platformId)) {\n        if (!this.styleElement) {\n          this.styleElement = this.renderer.createElement('style');\n          this.styleElement.type = 'text/css';\n          this.renderer.appendChild(this.document.head, this.styleElement);\n          let innerHTML = '';\n          for (let breakpoint in this.breakpoints) {\n            innerHTML += `\n                        @media screen and (max-width: ${breakpoint}) {\n                            .p-dialog[${this.id}]:not(.p-dialog-maximized) {\n                                width: ${this.breakpoints[breakpoint]} !important;\n                            }\n                        }\n                    `;\n          }\n          this.renderer.setProperty(this.styleElement, 'innerHTML', innerHTML);\n          setAttribute(this.styleElement, 'nonce', this.config?.csp()?.nonce);\n        }\n      }\n    }\n    initDrag(event) {\n      if (hasClass(event.target, 'p-dialog-maximize-icon') || hasClass(event.target, 'p-dialog-header-close-icon') || hasClass(event.target.parentElement, 'p-dialog-header-icon')) {\n        return;\n      }\n      if (this.draggable) {\n        this.dragging = true;\n        this.lastPageX = event.pageX;\n        this.lastPageY = event.pageY;\n        this.container.style.margin = '0';\n        addClass(this.document.body, 'p-unselectable-text');\n      }\n    }\n    onDrag(event) {\n      if (this.dragging) {\n        const containerWidth = getOuterWidth(this.container);\n        const containerHeight = getOuterHeight(this.container);\n        const deltaX = event.pageX - this.lastPageX;\n        const deltaY = event.pageY - this.lastPageY;\n        const offset = this.container.getBoundingClientRect();\n        const containerComputedStyle = getComputedStyle(this.container);\n        const leftMargin = parseFloat(containerComputedStyle.marginLeft);\n        const topMargin = parseFloat(containerComputedStyle.marginTop);\n        const leftPos = offset.left + deltaX - leftMargin;\n        const topPos = offset.top + deltaY - topMargin;\n        const viewport = getViewport();\n        this.container.style.position = 'fixed';\n        if (this.keepInViewport) {\n          if (leftPos >= this.minX && leftPos + containerWidth < viewport.width) {\n            this._style.left = `${leftPos}px`;\n            this.lastPageX = event.pageX;\n            this.container.style.left = `${leftPos}px`;\n          }\n          if (topPos >= this.minY && topPos + containerHeight < viewport.height) {\n            this._style.top = `${topPos}px`;\n            this.lastPageY = event.pageY;\n            this.container.style.top = `${topPos}px`;\n          }\n        } else {\n          this.lastPageX = event.pageX;\n          this.container.style.left = `${leftPos}px`;\n          this.lastPageY = event.pageY;\n          this.container.style.top = `${topPos}px`;\n        }\n      }\n    }\n    endDrag(event) {\n      if (this.dragging) {\n        this.dragging = false;\n        removeClass(this.document.body, 'p-unselectable-text');\n        this.cd.detectChanges();\n        this.onDragEnd.emit(event);\n      }\n    }\n    resetPosition() {\n      this.container.style.position = '';\n      this.container.style.left = '';\n      this.container.style.top = '';\n      this.container.style.margin = '';\n    }\n    //backward compatibility\n    center() {\n      this.resetPosition();\n    }\n    initResize(event) {\n      if (this.resizable) {\n        this.resizing = true;\n        this.lastPageX = event.pageX;\n        this.lastPageY = event.pageY;\n        addClass(this.document.body, 'p-unselectable-text');\n        this.onResizeInit.emit(event);\n      }\n    }\n    onResize(event) {\n      if (this.resizing) {\n        let deltaX = event.pageX - this.lastPageX;\n        let deltaY = event.pageY - this.lastPageY;\n        let containerWidth = getOuterWidth(this.container);\n        let containerHeight = getOuterHeight(this.container);\n        let contentHeight = getOuterHeight(this.contentViewChild?.nativeElement);\n        let newWidth = containerWidth + deltaX;\n        let newHeight = containerHeight + deltaY;\n        let minWidth = this.container.style.minWidth;\n        let minHeight = this.container.style.minHeight;\n        let offset = this.container.getBoundingClientRect();\n        let viewport = getViewport();\n        let hasBeenDragged = !parseInt(this.container.style.top) || !parseInt(this.container.style.left);\n        if (hasBeenDragged) {\n          newWidth += deltaX;\n          newHeight += deltaY;\n        }\n        if ((!minWidth || newWidth > parseInt(minWidth)) && offset.left + newWidth < viewport.width) {\n          this._style.width = newWidth + 'px';\n          this.container.style.width = this._style.width;\n        }\n        if ((!minHeight || newHeight > parseInt(minHeight)) && offset.top + newHeight < viewport.height) {\n          this.contentViewChild.nativeElement.style.height = contentHeight + newHeight - containerHeight + 'px';\n          if (this._style.height) {\n            this._style.height = newHeight + 'px';\n            this.container.style.height = this._style.height;\n          }\n        }\n        this.lastPageX = event.pageX;\n        this.lastPageY = event.pageY;\n      }\n    }\n    resizeEnd(event) {\n      if (this.resizing) {\n        this.resizing = false;\n        removeClass(this.document.body, 'p-unselectable-text');\n        this.onResizeEnd.emit(event);\n      }\n    }\n    bindGlobalListeners() {\n      if (this.draggable) {\n        this.bindDocumentDragListener();\n        this.bindDocumentDragEndListener();\n      }\n      if (this.resizable) {\n        this.bindDocumentResizeListeners();\n      }\n      if (this.closeOnEscape && this.closable) {\n        this.bindDocumentEscapeListener();\n      }\n    }\n    unbindGlobalListeners() {\n      this.unbindDocumentDragListener();\n      this.unbindDocumentDragEndListener();\n      this.unbindDocumentResizeListeners();\n      this.unbindDocumentEscapeListener();\n    }\n    bindDocumentDragListener() {\n      if (!this.documentDragListener) {\n        this.zone.runOutsideAngular(() => {\n          this.documentDragListener = this.renderer.listen(this.document.defaultView, 'mousemove', this.onDrag.bind(this));\n        });\n      }\n    }\n    unbindDocumentDragListener() {\n      if (this.documentDragListener) {\n        this.documentDragListener();\n        this.documentDragListener = null;\n      }\n    }\n    bindDocumentDragEndListener() {\n      if (!this.documentDragEndListener) {\n        this.zone.runOutsideAngular(() => {\n          this.documentDragEndListener = this.renderer.listen(this.document.defaultView, 'mouseup', this.endDrag.bind(this));\n        });\n      }\n    }\n    unbindDocumentDragEndListener() {\n      if (this.documentDragEndListener) {\n        this.documentDragEndListener();\n        this.documentDragEndListener = null;\n      }\n    }\n    bindDocumentResizeListeners() {\n      if (!this.documentResizeListener && !this.documentResizeEndListener) {\n        this.zone.runOutsideAngular(() => {\n          this.documentResizeListener = this.renderer.listen(this.document.defaultView, 'mousemove', this.onResize.bind(this));\n          this.documentResizeEndListener = this.renderer.listen(this.document.defaultView, 'mouseup', this.resizeEnd.bind(this));\n        });\n      }\n    }\n    unbindDocumentResizeListeners() {\n      if (this.documentResizeListener && this.documentResizeEndListener) {\n        this.documentResizeListener();\n        this.documentResizeEndListener();\n        this.documentResizeListener = null;\n        this.documentResizeEndListener = null;\n      }\n    }\n    bindDocumentEscapeListener() {\n      const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n      this.documentEscapeListener = this.renderer.listen(documentTarget, 'keydown', event => {\n        if (event.key == 'Escape') {\n          this.close(event);\n        }\n      });\n    }\n    unbindDocumentEscapeListener() {\n      if (this.documentEscapeListener) {\n        this.documentEscapeListener();\n        this.documentEscapeListener = null;\n      }\n    }\n    appendContainer() {\n      if (this.appendTo) {\n        if (this.appendTo === 'body') this.renderer.appendChild(this.document.body, this.wrapper);else appendChild(this.appendTo, this.wrapper);\n      }\n    }\n    restoreAppend() {\n      if (this.container && this.appendTo) {\n        this.renderer.appendChild(this.el.nativeElement, this.wrapper);\n      }\n    }\n    onAnimationStart(event) {\n      switch (event.toState) {\n        case 'visible':\n          this.container = event.element;\n          this.wrapper = this.container?.parentElement;\n          this.appendContainer();\n          this.moveOnTop();\n          this.bindGlobalListeners();\n          this.container?.setAttribute(this.id, '');\n          if (this.modal) {\n            this.enableModality();\n          }\n          // if (!this.modal && this.blockScroll) {\n          //     addClass(this.document.body, 'p-overflow-hidden');\n          // }\n          if (this.focusOnShow) {\n            this.focus();\n          }\n          break;\n        case 'void':\n          if (this.wrapper && this.modal) {\n            addClass(this.wrapper, 'p-overlay-mask-leave');\n          }\n          break;\n      }\n    }\n    onAnimationEnd(event) {\n      switch (event.toState) {\n        case 'void':\n          this.onContainerDestroy();\n          this.onHide.emit({});\n          this.cd.markForCheck();\n          break;\n        case 'visible':\n          this.onShow.emit({});\n          break;\n      }\n    }\n    onContainerDestroy() {\n      this.unbindGlobalListeners();\n      this.dragging = false;\n      this.maskVisible = false;\n      if (this.maximized) {\n        // removeClass(this.document.body, 'p-overflow-hidden')\n        this.document.body.style.removeProperty('--scrollbar;-width');\n        this.maximized = false;\n      }\n      if (this.modal) {\n        this.disableModality();\n      }\n      // if (this.blockScroll) {\n      //      removeClass(this.document.body, 'p-overflow-hidden');\n      // }\n      if (hasClass(this.document.body, 'p-overflow-hidden')) {\n        removeClass(this.document.body, 'p-overflow-hidden');\n      }\n      if (this.container && this.autoZIndex) {\n        ZIndexUtils.clear(this.container);\n      }\n      this.container = null;\n      this.wrapper = null;\n      this._style = this.originalStyle ? {\n        ...this.originalStyle\n      } : {};\n    }\n    destroyStyle() {\n      if (this.styleElement) {\n        this.renderer.removeChild(this.document.head, this.styleElement);\n        this.styleElement = null;\n      }\n    }\n    ngOnDestroy() {\n      if (this.container) {\n        this.restoreAppend();\n        this.onContainerDestroy();\n      }\n      this.destroyStyle();\n      super.ngOnDestroy();\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵDialog_BaseFactory;\n      return function Dialog_Factory(__ngFactoryType__) {\n        return (ɵDialog_BaseFactory || (ɵDialog_BaseFactory = i0.ɵɵgetInheritedFactory(Dialog)))(__ngFactoryType__ || Dialog);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Dialog,\n      selectors: [[\"p-dialog\"]],\n      contentQueries: function Dialog_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c1, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c2, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c3, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c4, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c5, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c6, 4);\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._headerTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._footerTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._closeiconTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._maximizeiconTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._minimizeiconTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._headlessTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      viewQuery: function Dialog_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c7, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(_c2, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerViewChild = _t.first);\n        }\n      },\n      inputs: {\n        header: \"header\",\n        draggable: [2, \"draggable\", \"draggable\", booleanAttribute],\n        resizable: [2, \"resizable\", \"resizable\", booleanAttribute],\n        positionLeft: \"positionLeft\",\n        positionTop: \"positionTop\",\n        contentStyle: \"contentStyle\",\n        contentStyleClass: \"contentStyleClass\",\n        modal: [2, \"modal\", \"modal\", booleanAttribute],\n        closeOnEscape: [2, \"closeOnEscape\", \"closeOnEscape\", booleanAttribute],\n        dismissableMask: [2, \"dismissableMask\", \"dismissableMask\", booleanAttribute],\n        rtl: [2, \"rtl\", \"rtl\", booleanAttribute],\n        closable: [2, \"closable\", \"closable\", booleanAttribute],\n        responsive: \"responsive\",\n        appendTo: \"appendTo\",\n        breakpoints: \"breakpoints\",\n        styleClass: \"styleClass\",\n        maskStyleClass: \"maskStyleClass\",\n        maskStyle: \"maskStyle\",\n        showHeader: [2, \"showHeader\", \"showHeader\", booleanAttribute],\n        breakpoint: \"breakpoint\",\n        blockScroll: [2, \"blockScroll\", \"blockScroll\", booleanAttribute],\n        autoZIndex: [2, \"autoZIndex\", \"autoZIndex\", booleanAttribute],\n        baseZIndex: [2, \"baseZIndex\", \"baseZIndex\", numberAttribute],\n        minX: [2, \"minX\", \"minX\", numberAttribute],\n        minY: [2, \"minY\", \"minY\", numberAttribute],\n        focusOnShow: [2, \"focusOnShow\", \"focusOnShow\", booleanAttribute],\n        maximizable: [2, \"maximizable\", \"maximizable\", booleanAttribute],\n        keepInViewport: [2, \"keepInViewport\", \"keepInViewport\", booleanAttribute],\n        focusTrap: [2, \"focusTrap\", \"focusTrap\", booleanAttribute],\n        transitionOptions: \"transitionOptions\",\n        closeIcon: \"closeIcon\",\n        closeAriaLabel: \"closeAriaLabel\",\n        closeTabindex: \"closeTabindex\",\n        minimizeIcon: \"minimizeIcon\",\n        maximizeIcon: \"maximizeIcon\",\n        closeButtonProps: \"closeButtonProps\",\n        maximizeButtonProps: \"maximizeButtonProps\",\n        visible: \"visible\",\n        style: \"style\",\n        position: \"position\",\n        role: \"role\",\n        headerTemplate: [0, \"content\", \"headerTemplate\"],\n        contentTemplate: \"contentTemplate\",\n        footerTemplate: \"footerTemplate\",\n        closeIconTemplate: \"closeIconTemplate\",\n        maximizeIconTemplate: \"maximizeIconTemplate\",\n        minimizeIconTemplate: \"minimizeIconTemplate\",\n        headlessTemplate: \"headlessTemplate\"\n      },\n      outputs: {\n        onShow: \"onShow\",\n        onHide: \"onHide\",\n        visibleChange: \"visibleChange\",\n        onResizeInit: \"onResizeInit\",\n        onResizeEnd: \"onResizeEnd\",\n        onDragEnd: \"onDragEnd\",\n        onMaximize: \"onMaximize\"\n      },\n      features: [i0.ɵɵProvidersFeature([DialogStyle]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c9,\n      decls: 1,\n      vars: 1,\n      consts: [[\"container\", \"\"], [\"notHeadless\", \"\"], [\"titlebar\", \"\"], [\"content\", \"\"], [\"icon\", \"\"], [\"footer\", \"\"], [3, \"ngClass\", \"class\", \"ngStyle\", \"style\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [\"pFocusTrap\", \"\", 3, \"class\", \"ngClass\", \"ngStyle\", \"style\", \"pFocusTrapDisabled\", 4, \"ngIf\"], [\"pFocusTrap\", \"\", 3, \"ngClass\", \"ngStyle\", \"pFocusTrapDisabled\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"ngTemplateOutlet\"], [\"style\", \"z-index: 90;\", 3, \"ngClass\", \"mousedown\", 4, \"ngIf\"], [3, \"mousedown\", \"ngClass\"], [3, \"id\", \"ngClass\", 4, \"ngIf\"], [3, \"ngClass\"], [3, \"styleClass\", \"tabindex\", \"ariaLabel\", \"buttonProps\", \"onClick\", \"keydown.enter\", 4, \"ngIf\"], [3, \"styleClass\", \"ariaLabel\", \"tabindex\", \"buttonProps\", \"onClick\", \"keydown.enter\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [2, \"z-index\", \"90\", 3, \"mousedown\", \"ngClass\"], [3, \"id\", \"ngClass\"], [3, \"onClick\", \"keydown.enter\", \"styleClass\", \"tabindex\", \"ariaLabel\", \"buttonProps\"], [4, \"ngIf\"], [3, \"onClick\", \"keydown.enter\", \"styleClass\", \"ariaLabel\", \"tabindex\", \"buttonProps\"]],\n      template: function Dialog_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c8);\n          i0.ɵɵtemplate(0, Dialog_div_0_Template, 2, 11, \"div\", 6);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.maskVisible);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, Button, FocusTrap, TimesIcon, WindowMaximizeIcon, WindowMinimizeIcon, SharedModule],\n      encapsulation: 2,\n      data: {\n        animation: [trigger('animation', [transition('void => visible', [useAnimation(showAnimation)]), transition('visible => void', [useAnimation(hideAnimation)])])]\n      },\n      changeDetection: 0\n    });\n  }\n  return Dialog;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DialogModule = /*#__PURE__*/(() => {\n  class DialogModule {\n    static ɵfac = function DialogModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DialogModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: DialogModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [Dialog, SharedModule, SharedModule]\n    });\n  }\n  return DialogModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Dialog, DialogClasses, DialogModule, DialogStyle };\n","import * as i3 from '@angular/common';\nimport { isPlatformBrowser, CommonModule, DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, inject, ViewChild, SkipSelf, Optional, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule, createComponent, Inject } from '@angular/core';\nimport { uuid, setAttribute, addClass, removeClass, getOuterWidth, getOuterHeight, getViewport, hasClass, appendChild } from '@primeuix/utils';\nimport { animation, style, animate, trigger, transition, useAnimation } from '@angular/animations';\nimport { TranslationKeys, SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { Button } from 'primeng/button';\nimport { DomHandler } from 'primeng/dom';\nimport { FocusTrap } from 'primeng/focustrap';\nimport { WindowMaximizeIcon, WindowMinimizeIcon, TimesIcon } from 'primeng/icons';\nimport { ZIndexUtils } from 'primeng/utils';\nimport { DialogStyle } from 'primeng/dialog';\nimport { Subject } from 'rxjs';\nconst _c0 = [\"mask\"];\nconst _c1 = [\"content\"];\nconst _c2 = [\"footer\"];\nconst _c3 = [\"titlebar\"];\nconst _c4 = (a0, a1, a2) => ({\n  position: \"fixed\",\n  height: \"100%\",\n  width: \"100%\",\n  left: 0,\n  top: 0,\n  display: \"flex\",\n  \"justify-content\": a0,\n  \"align-items\": a1,\n  \"pointer-events\": a2\n});\nconst _c5 = a0 => ({\n  \"p-dialog p-component\": true,\n  \"p-dialog-maximized\": a0\n});\nconst _c6 = () => ({\n  display: \"flex\",\n  \"flex-direction\": \"column\",\n  \"pointer-events\": \"auto\"\n});\nconst _c7 = (a0, a1) => ({\n  transform: a0,\n  transition: a1\n});\nconst _c8 = a0 => ({\n  value: \"visible\",\n  params: a0\n});\nfunction DynamicDialogComponent_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵlistener(\"mousedown\", function DynamicDialogComponent_div_2_div_2_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.initResize($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"ngClass\", \"p-resizable-handle\");\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_1_WindowMaximizeIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"WindowMaximizeIcon\");\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_1_WindowMinimizeIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"WindowMinimizeIcon\");\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_1_WindowMaximizeIcon_1_Template, 1, 0, \"WindowMaximizeIcon\", 11)(2, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_1_WindowMinimizeIcon_2_Template, 1, 0, \"WindowMinimizeIcon\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.maximized && !ctx_r1.maximizeIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.maximized && !ctx_r1.minimizeIconTemplate);\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_2_1_ng_template_0_Template(rf, ctx) {}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_2_1_Template, 1, 0, null, 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.maximizeIconTemplate);\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_3_1_ng_template_0_Template(rf, ctx) {}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_3_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_3_1_Template, 1, 0, null, 21);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.minimizeIconTemplate);\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 20);\n    i0.ɵɵlistener(\"onClick\", function DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_Template_p_button_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.maximize());\n    })(\"keydown.enter\", function DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_Template_p_button_keydown_enter_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.maximize());\n    });\n    i0.ɵɵtemplate(1, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_1_Template, 3, 2, \"ng-container\", 11)(2, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_2_Template, 2, 1, \"ng-container\", 11)(3, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_3_Template, 2, 1, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"styleClass\", \"p-dialog-maximize-button\")(\"tabindex\", ctx_r1.maximizable ? \"0\" : \"-1\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.maximizeIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.maximized);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.maximized);\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"TimesIcon\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_span_2_1_Template, 1, 0, null, 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.closeIconTemplate);\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-button\", 22);\n    i0.ɵɵlistener(\"onClick\", function DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_Template_p_button_onClick_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.hide());\n    })(\"keydown.enter\", function DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_Template_p_button_keydown_enter_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r1.hide());\n    });\n    i0.ɵɵtemplate(1, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_ng_container_1_Template, 2, 0, \"ng-container\", 11)(2, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_span_2_Template, 2, 1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"styleClass\", \"p-dialog-close-button\")(\"ariaLabel\", ctx_r1.ddconfig.closeAriaLabel || ctx_r1.defaultCloseAriaLabel);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.closeIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.closeIconTemplate);\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 17);\n    i0.ɵɵtemplate(4, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_Template, 4, 5, \"p-button\", 18)(5, DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_Template, 3, 4, \"p-button\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", \"p-dialog-title\")(\"id\", ctx_r1.ariaLabelledBy);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.ddconfig.header);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", \"p-dialog-header-actions\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ddconfig.maximizable);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.closable);\n  }\n}\nfunction DynamicDialogComponent_div_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15, 3);\n    i0.ɵɵlistener(\"mousedown\", function DynamicDialogComponent_div_2_div_3_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.initDrag($event));\n    });\n    i0.ɵɵtemplate(2, DynamicDialogComponent_div_2_div_3_ng_container_2_Template, 1, 0, \"ng-container\", 12)(3, DynamicDialogComponent_div_2_div_3_ng_container_3_Template, 6, 6, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", \"p-dialog-header\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngComponentOutlet\", ctx_r1.headerTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.headerTemplate);\n  }\n}\nfunction DynamicDialogComponent_div_2_6_ng_template_0_Template(rf, ctx) {}\nfunction DynamicDialogComponent_div_2_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, DynamicDialogComponent_div_2_6_ng_template_0_Template, 0, 0, \"ng-template\", 23);\n  }\n}\nfunction DynamicDialogComponent_div_2_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction DynamicDialogComponent_div_2_div_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.ddconfig.footer, \" \");\n  }\n}\nfunction DynamicDialogComponent_div_2_div_8_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction DynamicDialogComponent_div_2_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17, 4);\n    i0.ɵɵtemplate(2, DynamicDialogComponent_div_2_div_8_ng_container_2_Template, 2, 1, \"ng-container\", 11)(3, DynamicDialogComponent_div_2_div_8_ng_container_3_Template, 1, 0, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", \"p-dialog-footer\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.footerTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngComponentOutlet\", ctx_r1.footerTemplate);\n  }\n}\nfunction DynamicDialogComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7, 1);\n    i0.ɵɵlistener(\"@animation.start\", function DynamicDialogComponent_div_2_Template_div_animation_animation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onAnimationStart($event));\n    })(\"@animation.done\", function DynamicDialogComponent_div_2_Template_div_animation_animation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onAnimationEnd($event));\n    });\n    i0.ɵɵtemplate(2, DynamicDialogComponent_div_2_div_2_Template, 1, 1, \"div\", 8)(3, DynamicDialogComponent_div_2_div_3_Template, 4, 3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"div\", 10, 2);\n    i0.ɵɵtemplate(6, DynamicDialogComponent_div_2_6_Template, 1, 0, null, 11)(7, DynamicDialogComponent_div_2_ng_container_7_Template, 1, 0, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, DynamicDialogComponent_div_2_div_8_Template, 4, 3, \"div\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(ctx_r1.ddconfig.style);\n    i0.ɵɵclassMap(ctx_r1.ddconfig.styleClass);\n    i0.ɵɵstyleProp(\"width\", ctx_r1.ddconfig.width)(\"height\", ctx_r1.ddconfig.height);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c5, ctx_r1.maximizable && ctx_r1.maximized))(\"ngStyle\", i0.ɵɵpureFunction0(24, _c6))(\"@animation\", i0.ɵɵpureFunction1(28, _c8, i0.ɵɵpureFunction2(25, _c7, ctx_r1.transformOptions, ctx_r1.ddconfig.transitionOptions || \"150ms cubic-bezier(0, 0, 0.2, 1)\")))(\"pFocusTrapDisabled\", ctx_r1.ddconfig.focusTrap === false);\n    i0.ɵɵattribute(\"aria-labelledby\", ctx_r1.ariaLabelledBy)(\"aria-modal\", true)(\"id\", ctx_r1.dialogId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ddconfig.resizable);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ddconfig.showHeader !== false);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", \"p-dialog-content\")(\"ngStyle\", ctx_r1.ddconfig.contentStyle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.contentTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngComponentOutlet\", ctx_r1.contentTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.ddconfig.footer || ctx_r1.footerTemplate);\n  }\n}\nlet DynamicDialogContent = /*#__PURE__*/(() => {\n  class DynamicDialogContent {\n    viewContainerRef;\n    constructor(viewContainerRef) {\n      this.viewContainerRef = viewContainerRef;\n    }\n    static ɵfac = function DynamicDialogContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DynamicDialogContent)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: DynamicDialogContent,\n      selectors: [[\"\", \"pDynamicDialogContent\", \"\"]]\n    });\n  }\n  return DynamicDialogContent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DynamicDialogStyle = /*#__PURE__*/(() => {\n  class DynamicDialogStyle extends DialogStyle {\n    name = 'dialog';\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵDynamicDialogStyle_BaseFactory;\n      return function DynamicDialogStyle_Factory(__ngFactoryType__) {\n        return (ɵDynamicDialogStyle_BaseFactory || (ɵDynamicDialogStyle_BaseFactory = i0.ɵɵgetInheritedFactory(DynamicDialogStyle)))(__ngFactoryType__ || DynamicDialogStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DynamicDialogStyle,\n      factory: DynamicDialogStyle.ɵfac\n    });\n  }\n  return DynamicDialogStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * DynamicDialog is a container to display content in an overlay window.\n *\n * [Live Demo](https://www.primeng.org/dynamicdialog)\n *\n * @module dynamicdialogstyle\n *\n */\nvar DynamicDialogClasses = /*#__PURE__*/function (DynamicDialogClasses) {\n  /**\n   * Class name of the mask element\n   */\n  DynamicDialogClasses[\"mask\"] = \"p-dialog-mask\";\n  /**\n   * Class name of the root element\n   */\n  DynamicDialogClasses[\"root\"] = \"p-dialog\";\n  /**\n   * Class name of the header element\n   */\n  DynamicDialogClasses[\"header\"] = \"p-dialog-header\";\n  /**\n   * Class name of the title element\n   */\n  DynamicDialogClasses[\"title\"] = \"p-dialog-title\";\n  /**\n   * Class name of the header actions element\n   */\n  DynamicDialogClasses[\"headerActions\"] = \"p-dialog-header-actions\";\n  /**\n   * Class name of the maximize button element\n   */\n  DynamicDialogClasses[\"pcMaximizeButton\"] = \"p-dialog-maximize-button\";\n  /**\n   * Class name of the close button element\n   */\n  DynamicDialogClasses[\"pcCloseButton\"] = \"p-dialog-close-button\";\n  /**\n   * Class name of the content element\n   */\n  DynamicDialogClasses[\"content\"] = \"p-dialog-content\";\n  /**\n   * Class name of the footer element\n   */\n  DynamicDialogClasses[\"footer\"] = \"p-dialog-footer\";\n  return DynamicDialogClasses;\n}(DynamicDialogClasses || {});\n/**\n * Dialogs can be created dynamically with any component as the content using a DialogService.\n * @group Components\n */\nclass DynamicDialogConfig {\n  /**\n   * An object to pass to the component loaded inside the Dialog.\n   * @group Props\n   */\n  data;\n  /**\n   * An object to pass to the component loaded inside the Dialog.\n   * @group Props\n   */\n  inputValues;\n  /**\n   * Header text of the dialog.\n   * @group Props\n   */\n  header;\n  /**\n   * Identifies the element (or elements) that labels the element it is applied to.\n   * @group Props\n   */\n  ariaLabelledBy;\n  /**\n   * Footer text of the dialog.\n   * @group Props\n   */\n  footer;\n  /**\n   * Width of the dialog.\n   * @group Props\n   */\n  width;\n  /**\n   * Height of the dialog.\n   * @group Props\n   */\n  height;\n  /**\n   * Specifies if pressing escape key should hide the dialog.\n   * @group Props\n   */\n  closeOnEscape = false;\n  /**\n   * Specifies if autofocus should happen on show.\n   * @group Props\n   */\n  focusOnShow = true;\n  /**\n   * When enabled, can only focus on elements inside the dialog.\n   * @group Props\n   */\n  focusTrap = true;\n  /**\n   * Base zIndex value to use in layering.\n   * @group Props\n   */\n  baseZIndex;\n  /**\n   * Whether to re-enforce layering through applying zIndex.\n   * @group Props\n   */\n  autoZIndex = false;\n  /**\n   * Specifies if clicking the modal background should hide the dialog.\n   * @group Props\n   */\n  dismissableMask = false;\n  /**\n   * Inline style of the component.\n   * @group Props\n   */\n  rtl = false;\n  /**\n   * Inline style of the comopnent.\n   * @group Props\n   */\n  style;\n  /**\n   * Inline style of the content.\n   * @group Props\n   */\n  contentStyle;\n  /**\n   * Style class of the component.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Transition options of the animation.\n   * @group Props\n   */\n  transitionOptions;\n  /**\n   * Adds a close icon to the header to hide the dialog.\n   * @group Props\n   */\n  closable = false;\n  /**\n   * Whether to show the header or not.\n   * @group Props\n   */\n  showHeader = false;\n  /**\n   * Defines if background should be blocked when dialog is displayed.\n   * @group Props\n   */\n  modal = false;\n  /**\n   * Style class of the mask.\n   * @group Props\n   */\n  maskStyleClass;\n  /**\n   * Enables resizing of the content.\n   * @group Props\n   */\n  resizable = false;\n  /**\n   * Enables dragging to change the position using header.\n   * @group Props\n   */\n  draggable = false;\n  /**\n   * Keeps dialog in the viewport.\n   * @group Props\n   */\n  keepInViewport = false;\n  /**\n   * Minimum value for the left coordinate of dialog in dragging.\n   * @group Props\n   */\n  minX;\n  /**\n   * Minimum value for the top coordinate of dialog in dragging.\n   * @group Props\n   */\n  minY;\n  /**\n   * Whether the dialog can be displayed full screen.\n   * @group Props\n   */\n  maximizable = false;\n  /**\n   * Name of the maximize icon.\n   * @group Props\n   */\n  maximizeIcon;\n  /**\n   * Name of the minimize icon.\n   * @group Props\n   */\n  minimizeIcon;\n  /**\n   * Position of the dialog, options are \"center\", \"top\", \"bottom\", \"left\", \"right\", \"top-left\", \"top-right\", \"bottom-left\" or \"bottom-right\".\n   * @group Props\n   */\n  position;\n  /**\n   * Defines a string that labels the close button for accessibility.\n   * @group Props\n   */\n  closeAriaLabel;\n  /**\n   * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n   * @group Props\n   */\n  appendTo;\n  /**\n   * A boolean to determine if it can be duplicate.\n   * @group Props\n   */\n  duplicate = false;\n  /**\n   * Object literal to define widths per screen size.\n   * @group Props\n   */\n  breakpoints;\n  /**\n   * Dialog templates.\n   * @group Props\n   */\n  templates;\n}\n\n/**\n * Dynamic Dialog instance.\n * @group Components\n */\nclass DynamicDialogRef {\n  constructor() {}\n  /**\n   * Closes dialog.\n   * @group Method\n   */\n  close(result) {\n    this._onClose.next(result);\n    setTimeout(() => {\n      this._onClose.complete();\n    }, 1000);\n  }\n  /**\n   * Destroys the dialog instance.\n   * @group Method\n   */\n  destroy() {\n    this._onDestroy.next(null);\n  }\n  /**\n   * Callback to invoke on drag start.\n   * @param {MouseEvent} event - Mouse event.\n   * @group Method\n   */\n  dragStart(event) {\n    this._onDragStart.next(event);\n  }\n  /**\n   * Callback to invoke on drag end.\n   * @param {MouseEvent} event - Mouse event.\n   * @group Method\n   */\n  dragEnd(event) {\n    this._onDragEnd.next(event);\n  }\n  /**\n   * Callback to invoke on resize start.\n   * @param {MouseEvent} event - Mouse event.\n   * @group Method\n   */\n  resizeInit(event) {\n    this._onResizeInit.next(event);\n  }\n  /**\n   * Callback to invoke on resize start.\n   * @param {MouseEvent} event - Mouse event.\n   * @group Method\n   */\n  resizeEnd(event) {\n    this._onResizeEnd.next(event);\n  }\n  /**\n   * Callback to invoke on dialog is maximized.\n   * @param {*} value - Size value.\n   * @group Method\n   */\n  maximize(value) {\n    this._onMaximize.next(value);\n  }\n  _onClose = new Subject();\n  /**\n   * Event triggered on dialog is closed.\n   * @group Events\n   */\n  onClose = this._onClose.asObservable();\n  _onDestroy = new Subject();\n  /**\n   * Event triggered on dialog instance is destroyed.\n   * @group Events\n   */\n  onDestroy = this._onDestroy.asObservable();\n  _onDragStart = new Subject();\n  /**\n   * Event triggered on drag start.\n   * @param {MouseEvent} event - Mouse event.\n   * @group Events\n   */\n  onDragStart = this._onDragStart.asObservable();\n  _onDragEnd = new Subject();\n  /**\n   * Event triggered on drag end.\n   * @param {MouseEvent} event - Mouse event.\n   * @group Events\n   */\n  onDragEnd = this._onDragEnd.asObservable();\n  _onResizeInit = new Subject();\n  /**\n   * Event triggered on resize start.\n   * @param {MouseEvent} event - Mouse event.\n   * @group Events\n   */\n  onResizeInit = this._onResizeInit.asObservable();\n  _onResizeEnd = new Subject();\n  /**\n   * Event triggered on resize end.\n   * @param {MouseEvent} event - Mouse event.\n   * @group Events\n   */\n  onResizeEnd = this._onResizeEnd.asObservable();\n  _onMaximize = new Subject();\n  /**\n   * Event triggered on dialog is maximized.\n   * @param {*} value - Size value.\n   * @group Events\n   */\n  onMaximize = this._onMaximize.asObservable();\n  /**\n   * Event triggered on child component load.\n   * @param {*} value - Chi.\n   * @group Events\n   */\n  onChildComponentLoaded = new Subject();\n}\nconst showAnimation = animation([style({\n  transform: '{{transform}}',\n  opacity: 0\n}), animate('{{transition}}', style({\n  transform: 'none',\n  opacity: 1\n}))]);\nconst hideAnimation = animation([animate('{{transition}}', style({\n  transform: '{{transform}}',\n  opacity: 0\n}))]);\nlet DynamicDialogComponent = /*#__PURE__*/(() => {\n  class DynamicDialogComponent extends BaseComponent {\n    renderer;\n    ddconfig;\n    dialogRef;\n    zone;\n    parentDialog;\n    visible = true;\n    componentRef;\n    mask;\n    resizing;\n    dragging;\n    maximized;\n    _style = {};\n    originalStyle;\n    lastPageX;\n    lastPageY;\n    ariaLabelledBy;\n    id = uuid('pn_id_');\n    styleElement;\n    insertionPoint;\n    maskViewChild;\n    contentViewChild;\n    footerViewChild;\n    headerViewChild;\n    childComponentType;\n    inputValues;\n    container;\n    wrapper;\n    documentKeydownListener;\n    documentEscapeListener;\n    maskClickListener;\n    transformOptions = 'scale(0.7)';\n    documentResizeListener;\n    documentResizeEndListener;\n    documentDragListener;\n    documentDragEndListener;\n    _componentStyle = inject(DynamicDialogStyle);\n    get minX() {\n      return this.ddconfig.minX ? this.ddconfig.minX : 0;\n    }\n    get minY() {\n      return this.ddconfig.minY ? this.ddconfig.minY : 0;\n    }\n    get keepInViewport() {\n      return this.ddconfig.keepInViewport;\n    }\n    get maximizable() {\n      return this.ddconfig.maximizable;\n    }\n    get maximizeIcon() {\n      return this.ddconfig.maximizeIcon;\n    }\n    get minimizeIcon() {\n      return this.ddconfig.minimizeIcon;\n    }\n    get closable() {\n      return this.ddconfig.closable;\n    }\n    get style() {\n      return this._style;\n    }\n    get position() {\n      return this.ddconfig.position;\n    }\n    get defaultCloseAriaLabel() {\n      return this.config.getTranslation(TranslationKeys.ARIA)['close'];\n    }\n    set style(value) {\n      if (value) {\n        this._style = {\n          ...value\n        };\n        this.originalStyle = value;\n      }\n    }\n    get parent() {\n      const domElements = Array.from(this.document.getElementsByClassName('p-dialog'));\n      if (domElements.length > 1) {\n        return domElements.pop();\n      }\n    }\n    get parentContent() {\n      const domElements = Array.from(this.document.getElementsByClassName('p-dialog'));\n      if (domElements.length > 0) {\n        const contentElements = domElements[domElements.length - 1].querySelector('.p-dialog-content');\n        if (contentElements) return Array.isArray(contentElements) ? contentElements[0] : contentElements;\n      }\n    }\n    get header() {\n      return this.ddconfig.header;\n    }\n    get data() {\n      return this.ddconfig.data;\n    }\n    get breakpoints() {\n      return this.ddconfig.breakpoints;\n    }\n    get footerTemplate() {\n      return this.ddconfig?.templates?.footer;\n    }\n    get headerTemplate() {\n      return this.ddconfig?.templates?.header;\n    }\n    get contentTemplate() {\n      return this.ddconfig?.templates?.content;\n    }\n    get minimizeIconTemplate() {\n      return this.ddconfig?.templates?.minimizeicon;\n    }\n    get maximizeIconTemplate() {\n      return this.ddconfig?.templates?.maximizeicon;\n    }\n    get closeIconTemplate() {\n      return this.ddconfig?.templates?.closeicon;\n    }\n    get maskClass() {\n      const positions = ['left', 'right', 'top', 'topleft', 'topright', 'bottom', 'bottomleft', 'bottomright'];\n      const pos = positions.find(item => item === this.position);\n      return {\n        'p-dialog-mask': true,\n        'p-overlay-mask p-overlay-mask-enter': this.ddconfig.modal || this.ddconfig.dismissableMask,\n        [`p-dialog-${pos}`]: pos\n      };\n    }\n    get dialogId() {\n      return this.attrSelector;\n    }\n    zIndexForLayering;\n    constructor(renderer, ddconfig, dialogRef, zone, parentDialog) {\n      super();\n      this.renderer = renderer;\n      this.ddconfig = ddconfig;\n      this.dialogRef = dialogRef;\n      this.zone = zone;\n      this.parentDialog = parentDialog;\n    }\n    ngOnInit() {\n      super.ngOnInit();\n      if (this.breakpoints) {\n        this.createStyle();\n      }\n    }\n    createStyle() {\n      if (isPlatformBrowser(this.platformId)) {\n        if (!this.styleElement) {\n          this.styleElement = this.renderer.createElement('style');\n          this.styleElement.type = 'text/css';\n          this.renderer.appendChild(this.document.head, this.styleElement);\n          let innerHTML = '';\n          for (let breakpoint in this.breakpoints) {\n            innerHTML += `\n                        @media screen and (max-width: ${breakpoint}) {\n                            .p-dialog[id=${this.dialogId}]:not(.p-dialog-maximized) {\n                                width: ${this.breakpoints[breakpoint]} !important;\n                            }\n                        }\n                    `;\n          }\n          this.renderer.setProperty(this.styleElement, 'innerHTML', innerHTML);\n          setAttribute(this.styleElement, 'nonce', this.config?.csp()?.nonce);\n        }\n      }\n    }\n    destroyStyle() {\n      if (this.styleElement) {\n        this.renderer.removeChild(this.document.head, this.styleElement);\n        this.styleElement = null;\n      }\n    }\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      this.loadChildComponent(this.childComponentType);\n      this.ariaLabelledBy = this.getAriaLabelledBy();\n      this.cd.detectChanges();\n    }\n    getAriaLabelledBy() {\n      return this.header !== null ? uuid('pn_id_') + '_header' : null;\n    }\n    loadChildComponent(componentType) {\n      let viewContainerRef = this.insertionPoint?.viewContainerRef;\n      viewContainerRef?.clear();\n      this.componentRef = viewContainerRef?.createComponent(componentType);\n      if (this.inputValues) {\n        Object.entries(this.inputValues).forEach(([key, value]) => {\n          this.componentRef.setInput(key, value);\n        });\n      }\n      this.dialogRef.onChildComponentLoaded.next(this.componentRef.instance);\n    }\n    moveOnTop() {\n      if (this.ddconfig.autoZIndex !== false) {\n        ZIndexUtils.set('modal', this.container, (this.ddconfig.baseZIndex || 0) + this.config.zIndex.modal);\n        this.wrapper.style.zIndex = String(parseInt(this.container.style.zIndex, 10) - 1);\n      } else {\n        this.zIndexForLayering = ZIndexUtils.generateZIndex('modal', (this.ddconfig.baseZIndex || 0) + this.config.zIndex.modal);\n      }\n    }\n    onAnimationStart(event) {\n      switch (event.toState) {\n        case 'visible':\n          this.container = event.element;\n          this.wrapper = this.container.parentElement;\n          this.moveOnTop();\n          if (this.parent) {\n            this.unbindGlobalListeners();\n          }\n          this.bindGlobalListeners();\n          this.container?.setAttribute(this.id, '');\n          if (this.ddconfig.modal !== false) {\n            this.enableModality();\n          }\n          if (this.ddconfig.focusOnShow !== false) {\n            this.focus();\n          }\n          break;\n        case 'void':\n          if (this.wrapper && this.ddconfig.modal !== false) {\n            addClass(this.wrapper, 'p-overlay-mask-leave');\n          }\n          break;\n      }\n    }\n    onAnimationEnd(event) {\n      if (event.toState === 'void') {\n        if (this.parentContent) {\n          this.focus(this.parentContent);\n        }\n        this.onContainerDestroy();\n        this.dialogRef.destroy();\n      }\n    }\n    onContainerDestroy() {\n      this.unbindGlobalListeners();\n      if (this.container && this.ddconfig.autoZIndex !== false) {\n        ZIndexUtils.clear(this.container);\n      }\n      if (this.zIndexForLayering) {\n        ZIndexUtils.revertZIndex(this.zIndexForLayering);\n      }\n      if (this.ddconfig.modal !== false) {\n        this.disableModality();\n      }\n      this.container = null;\n    }\n    close() {\n      this.visible = false;\n      this.cd.markForCheck();\n    }\n    hide() {\n      if (this.dialogRef) {\n        this.dialogRef.close();\n      }\n    }\n    enableModality() {\n      if (this.ddconfig.dismissableMask) {\n        this.maskClickListener = this.renderer.listen(this.wrapper, 'mousedown', event => {\n          if (this.wrapper && this.wrapper.isSameNode(event.target)) {\n            this.hide();\n          }\n        });\n      }\n      if (this.ddconfig.modal !== false) {\n        addClass(this.document.body, 'p-overflow-hidden');\n      }\n    }\n    disableModality() {\n      if (this.wrapper) {\n        if (this.ddconfig.dismissableMask) {\n          this.unbindMaskClickListener();\n        }\n        if (this.ddconfig.modal !== false) {\n          removeClass(this.document.body, 'p-overflow-hidden');\n        }\n        if (!this.cd.destroyed) {\n          this.cd.detectChanges();\n        }\n      }\n    }\n    focus(focusParentElement = this.contentViewChild.nativeElement) {\n      let focusable = DomHandler.getFocusableElement(focusParentElement, '[autofocus]');\n      if (focusable) {\n        this.zone.runOutsideAngular(() => {\n          setTimeout(() => focusable.focus(), 5);\n        });\n        return;\n      }\n      const focusableElement = DomHandler.getFocusableElement(focusParentElement);\n      if (focusableElement) {\n        this.zone.runOutsideAngular(() => {\n          setTimeout(() => focusableElement.focus(), 5);\n        });\n      } else if (this.footerViewChild) {\n        // If the content section is empty try to focus on footer\n        this.focus(this.footerViewChild.nativeElement);\n      } else if (!focusableElement && this.headerViewChild) {\n        this.focus(this.headerViewChild.nativeElement);\n      }\n    }\n    maximize() {\n      this.maximized = !this.maximized;\n      if (this.maximized) {\n        addClass(this.document.body, 'p-overflow-hidden');\n      } else {\n        removeClass(this.document.body, 'p-overflow-hidden');\n      }\n      this.dialogRef.maximize({\n        maximized: this.maximized\n      });\n    }\n    initResize(event) {\n      if (this.ddconfig.resizable) {\n        if (!this.documentResizeListener) {\n          this.bindDocumentResizeListeners();\n        }\n        this.resizing = true;\n        this.lastPageX = event.pageX;\n        this.lastPageY = event.pageY;\n        addClass(this.document.body, 'p-unselectable-text');\n        this.dialogRef.resizeInit(event);\n      }\n    }\n    onResize(event) {\n      if (this.resizing) {\n        let deltaX = event.pageX - this.lastPageX;\n        let deltaY = event.pageY - this.lastPageY;\n        let containerWidth = getOuterWidth(this.container);\n        let containerHeight = getOuterHeight(this.container);\n        let contentHeight = getOuterHeight(this.contentViewChild.nativeElement);\n        let newWidth = containerWidth + deltaX;\n        let newHeight = containerHeight + deltaY;\n        let minWidth = this.container.style.minWidth;\n        let minHeight = this.container.style.minHeight;\n        let offset = this.container.getBoundingClientRect();\n        let viewport = getViewport();\n        let hasBeenDragged = !parseInt(this.container.style.top) || !parseInt(this.container.style.left);\n        if (hasBeenDragged) {\n          newWidth += deltaX;\n          newHeight += deltaY;\n        }\n        if ((!minWidth || newWidth > parseInt(minWidth)) && offset.left + newWidth < viewport.width) {\n          this._style.width = newWidth + 'px';\n          this.container.style.width = this._style.width;\n        }\n        if ((!minHeight || newHeight > parseInt(minHeight)) && offset.top + newHeight < viewport.height) {\n          this.contentViewChild.nativeElement.style.height = contentHeight + newHeight - containerHeight + 'px';\n          if (this._style.height) {\n            this._style.height = newHeight + 'px';\n            this.container.style.height = this._style.height;\n          }\n        }\n        this.lastPageX = event.pageX;\n        this.lastPageY = event.pageY;\n      }\n    }\n    resizeEnd(event) {\n      if (this.resizing) {\n        this.resizing = false;\n        removeClass(this.document.body, 'p-unselectable-text');\n        this.dialogRef.resizeEnd(event);\n      }\n    }\n    initDrag(event) {\n      if (hasClass(event.target, 'p-dialog-header-icon') || hasClass(event.target.parentElement, 'p-dialog-header-icon')) {\n        return;\n      }\n      if (this.ddconfig.draggable) {\n        this.dragging = true;\n        this.lastPageX = event.pageX;\n        this.lastPageY = event.pageY;\n        this.container.style.margin = '0';\n        addClass(this.document.body, 'p-unselectable-text');\n        this.dialogRef.dragStart(event);\n      }\n    }\n    onDrag(event) {\n      if (this.dragging) {\n        let containerWidth = getOuterWidth(this.container);\n        let containerHeight = getOuterHeight(this.container);\n        let deltaX = event.pageX - this.lastPageX;\n        let deltaY = event.pageY - this.lastPageY;\n        let offset = this.container.getBoundingClientRect();\n        let leftPos = offset.left + deltaX;\n        let topPos = offset.top + deltaY;\n        let viewport = getViewport();\n        this.container.style.position = 'fixed';\n        if (this.keepInViewport) {\n          if (leftPos >= this.minX && leftPos + containerWidth < viewport.width) {\n            this._style.left = leftPos + 'px';\n            this.lastPageX = event.pageX;\n            this.container.style.left = leftPos + 'px';\n          }\n          if (topPos >= this.minY && topPos + containerHeight < viewport.height) {\n            this._style.top = topPos + 'px';\n            this.lastPageY = event.pageY;\n            this.container.style.top = topPos + 'px';\n          }\n        } else {\n          this.lastPageX = event.pageX;\n          this.container.style.left = leftPos + 'px';\n          this.lastPageY = event.pageY;\n          this.container.style.top = topPos + 'px';\n        }\n      }\n    }\n    endDrag(event) {\n      if (this.dragging) {\n        this.dragging = false;\n        removeClass(this.document.body, 'p-unselectable-text');\n        this.dialogRef.dragEnd(event);\n        this.cd.detectChanges();\n      }\n    }\n    resetPosition() {\n      this.container.style.position = '';\n      this.container.style.left = '';\n      this.container.style.top = '';\n      this.container.style.margin = '';\n    }\n    bindDocumentDragListener() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.zone.runOutsideAngular(() => {\n          this.documentDragListener = this.renderer.listen(this.document, 'mousemove', this.onDrag.bind(this));\n        });\n      }\n    }\n    bindDocumentDragEndListener() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.zone.runOutsideAngular(() => {\n          this.documentDragEndListener = this.renderer.listen(this.document, 'mouseup', this.endDrag.bind(this));\n        });\n      }\n    }\n    unbindDocumentDragEndListener() {\n      if (this.documentDragEndListener) {\n        this.documentDragEndListener();\n        this.documentDragListener = null;\n      }\n    }\n    unbindDocumentDragListener() {\n      if (this.documentDragListener) {\n        this.documentDragListener();\n        this.documentDragListener = null;\n      }\n    }\n    bindDocumentResizeListeners() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.zone.runOutsideAngular(() => {\n          this.documentResizeListener = this.renderer.listen(this.document, 'mousemove', this.onResize.bind(this));\n          this.documentResizeEndListener = this.renderer.listen(this.document, 'mouseup', this.resizeEnd.bind(this));\n        });\n      }\n    }\n    unbindDocumentResizeListeners() {\n      if (this.documentResizeListener && this.documentResizeEndListener) {\n        this.documentResizeListener();\n        this.documentResizeEndListener();\n        this.documentResizeListener = null;\n        this.documentResizeEndListener = null;\n      }\n    }\n    bindGlobalListeners() {\n      if (this.ddconfig.closeOnEscape !== false) {\n        this.bindDocumentEscapeListener();\n      }\n      if (this.ddconfig.resizable) {\n        this.bindDocumentResizeListeners();\n      }\n      if (this.ddconfig.draggable) {\n        this.bindDocumentDragListener();\n        this.bindDocumentDragEndListener();\n      }\n    }\n    unbindGlobalListeners() {\n      this.unbindDocumentEscapeListener();\n      this.unbindDocumentResizeListeners();\n      this.unbindDocumentDragListener();\n      this.unbindDocumentDragEndListener();\n    }\n    bindDocumentEscapeListener() {\n      const documentTarget = this.maskViewChild ? this.maskViewChild.nativeElement.ownerDocument : 'document';\n      this.documentEscapeListener = this.renderer.listen(documentTarget, 'keydown', event => {\n        if (event.which == 27) {\n          const currentZIndex = ZIndexUtils.getCurrent();\n          if (parseInt(this.container.style.zIndex) == currentZIndex || this.zIndexForLayering == currentZIndex) {\n            this.hide();\n          }\n        }\n      });\n    }\n    unbindDocumentEscapeListener() {\n      if (this.documentEscapeListener) {\n        this.documentEscapeListener();\n        this.documentEscapeListener = null;\n      }\n    }\n    unbindMaskClickListener() {\n      if (this.maskClickListener) {\n        this.maskClickListener();\n        this.maskClickListener = null;\n      }\n    }\n    ngOnDestroy() {\n      this.onContainerDestroy();\n      if (this.componentRef) {\n        this.componentRef.destroy();\n      }\n      this.destroyStyle();\n      super.ngOnDestroy();\n    }\n    static ɵfac = function DynamicDialogComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DynamicDialogComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DynamicDialogConfig), i0.ɵɵdirectiveInject(DynamicDialogRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(DynamicDialogComponent, 12));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: DynamicDialogComponent,\n      selectors: [[\"p-dynamicDialog\"], [\"p-dynamicdialog\"], [\"p-dynamic-dialog\"]],\n      viewQuery: function DynamicDialogComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(DynamicDialogContent, 5);\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(_c2, 5);\n          i0.ɵɵviewQuery(_c3, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.insertionPoint = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.maskViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerViewChild = _t.first);\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([DynamicDialogStyle]), i0.ɵɵInheritDefinitionFeature],\n      decls: 3,\n      vars: 9,\n      consts: [[\"mask\", \"\"], [\"container\", \"\"], [\"content\", \"\"], [\"titlebar\", \"\"], [\"footer\", \"\"], [3, \"ngStyle\", \"ngClass\"], [\"role\", \"dialog\", \"pFocusTrap\", \"\", 3, \"ngClass\", \"ngStyle\", \"style\", \"class\", \"pFocusTrapDisabled\", \"width\", \"height\", 4, \"ngIf\"], [\"role\", \"dialog\", \"pFocusTrap\", \"\", 3, \"ngClass\", \"ngStyle\", \"pFocusTrapDisabled\"], [\"style\", \"z-index: 90;\", 3, \"ngClass\", \"mousedown\", 4, \"ngIf\"], [3, \"ngClass\", \"mousedown\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [4, \"ngIf\"], [4, \"ngComponentOutlet\"], [3, \"ngClass\", 4, \"ngIf\"], [2, \"z-index\", \"90\", 3, \"mousedown\", \"ngClass\"], [3, \"mousedown\", \"ngClass\"], [3, \"ngClass\", \"id\"], [3, \"ngClass\"], [\"rounded\", \"\", \"text\", \"\", 3, \"styleClass\", \"tabindex\", \"onClick\", \"keydown.enter\", 4, \"ngIf\"], [\"rounded\", \"\", \"text\", \"\", \"severity\", \"secondary\", 3, \"styleClass\", \"ariaLabel\", \"onClick\", \"keydown.enter\", 4, \"ngIf\"], [\"rounded\", \"\", \"text\", \"\", 3, \"onClick\", \"keydown.enter\", \"styleClass\", \"tabindex\"], [4, \"ngTemplateOutlet\"], [\"rounded\", \"\", \"text\", \"\", \"severity\", \"secondary\", 3, \"onClick\", \"keydown.enter\", \"styleClass\", \"ariaLabel\"], [\"pDynamicDialogContent\", \"\"]],\n      template: function DynamicDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 5, 0);\n          i0.ɵɵtemplate(2, DynamicDialogComponent_div_2_Template, 9, 30, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.ddconfig.maskStyleClass);\n          i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction3(5, _c4, ctx.position === \"left\" || ctx.position === \"topleft\" || ctx.position === \"bottomleft\" ? \"flex-start\" : ctx.position === \"right\" || ctx.position === \"topright\" || ctx.position === \"bottomright\" ? \"flex-end\" : \"center\", ctx.position === \"top\" || ctx.position === \"topleft\" || ctx.position === \"topright\" ? \"flex-start\" : ctx.position === \"bottom\" || ctx.position === \"bottomleft\" || ctx.position === \"bottomright\" ? \"flex-end\" : \"center\", ctx.ddconfig.modal ? \"auto\" : \"none\"))(\"ngClass\", ctx.maskClass);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.visible);\n        }\n      },\n      dependencies: [CommonModule, i3.NgClass, i3.NgComponentOutlet, i3.NgIf, i3.NgTemplateOutlet, i3.NgStyle, SharedModule, DynamicDialogContent, WindowMaximizeIcon, WindowMinimizeIcon, TimesIcon, Button, FocusTrap],\n      encapsulation: 2,\n      data: {\n        animation: [trigger('animation', [transition('void => visible', [useAnimation(showAnimation)]), transition('visible => void', [useAnimation(hideAnimation)])])]\n      }\n    });\n  }\n  return DynamicDialogComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DynamicDialogModule = /*#__PURE__*/(() => {\n  class DynamicDialogModule {\n    static ɵfac = function DynamicDialogModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DynamicDialogModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: DynamicDialogModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [DynamicDialogComponent, SharedModule, SharedModule]\n    });\n  }\n  return DynamicDialogModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass DynamicDialogInjector {\n  _parentInjector;\n  _additionalTokens;\n  constructor(_parentInjector, _additionalTokens) {\n    this._parentInjector = _parentInjector;\n    this._additionalTokens = _additionalTokens;\n  }\n  get(token, notFoundValue, options) {\n    const value = this._additionalTokens.get(token);\n    if (value) return value;\n    return this._parentInjector.get(token, notFoundValue);\n  }\n}\n\n/**\n * Dynamic Dialog component methods.\n * @group Service\n */\nlet DialogService = /*#__PURE__*/(() => {\n  class DialogService {\n    appRef;\n    injector;\n    document;\n    dialogComponentRefMap = new Map();\n    constructor(appRef, injector, document) {\n      this.appRef = appRef;\n      this.injector = injector;\n      this.document = document;\n    }\n    /**\n     * Displays the dialog using the dynamic dialog object options.\n     * @param {*} componentType - Dynamic component for content template.\n     * @param {DynamicDialogConfig} config - DynamicDialog object.\n     * @returns {DynamicDialogRef} DynamicDialog instance.\n     * @group Method\n     */\n    open(componentType, config) {\n      if (!this.duplicationPermission(componentType, config)) {\n        return null;\n      }\n      const dialogRef = this.appendDialogComponentToBody(config, componentType);\n      this.dialogComponentRefMap.get(dialogRef).instance.childComponentType = componentType;\n      this.dialogComponentRefMap.get(dialogRef).instance.inputValues = config.inputValues;\n      return dialogRef;\n    }\n    /**\n     * Returns the dynamic dialog component instance.\n     * @param {ref} DynamicDialogRef - DynamicDialog instance.\n     * @group Method\n     */\n    getInstance(ref) {\n      return this.dialogComponentRefMap.get(ref).instance;\n    }\n    appendDialogComponentToBody(config, componentType) {\n      const map = new WeakMap();\n      map.set(DynamicDialogConfig, config);\n      const dialogRef = new DynamicDialogRef();\n      map.set(DynamicDialogRef, dialogRef);\n      const sub = dialogRef.onClose.subscribe(() => {\n        this.dialogComponentRefMap.get(dialogRef).instance.close();\n      });\n      const destroySub = dialogRef.onDestroy.subscribe(() => {\n        this.removeDialogComponentFromBody(dialogRef);\n        destroySub.unsubscribe();\n        sub.unsubscribe();\n      });\n      const componentRef = createComponent(DynamicDialogComponent, {\n        environmentInjector: this.appRef.injector,\n        elementInjector: new DynamicDialogInjector(this.injector, map)\n      });\n      this.appRef.attachView(componentRef.hostView);\n      const domElem = componentRef.hostView.rootNodes[0];\n      if (!config.appendTo || config.appendTo === 'body') {\n        this.document.body.appendChild(domElem);\n      } else {\n        appendChild(config.appendTo, domElem);\n      }\n      this.dialogComponentRefMap.set(dialogRef, componentRef);\n      return dialogRef;\n    }\n    removeDialogComponentFromBody(dialogRef) {\n      if (!dialogRef || !this.dialogComponentRefMap.has(dialogRef)) {\n        return;\n      }\n      const dialogComponentRef = this.dialogComponentRefMap.get(dialogRef);\n      this.appRef.detachView(dialogComponentRef.hostView);\n      dialogComponentRef.destroy();\n      dialogComponentRef.changeDetectorRef.detectChanges();\n      this.dialogComponentRefMap.delete(dialogRef);\n    }\n    duplicationPermission(componentType, config) {\n      if (config.duplicate) {\n        return true;\n      }\n      let permission = true;\n      for (const [key, value] of this.dialogComponentRefMap) {\n        if (value.instance.childComponentType === componentType) {\n          permission = false;\n          break;\n        }\n      }\n      return permission;\n    }\n    static ɵfac = function DialogService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DialogService)(i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DialogService,\n      factory: DialogService.ɵfac\n    });\n  }\n  return DialogService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DialogService, DynamicDialogClasses, DynamicDialogComponent, DynamicDialogConfig, DynamicDialogInjector, DynamicDialogModule, DynamicDialogRef, DynamicDialogStyle };\n","import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, ContentChildren, ContentChild, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"start\"];\nconst _c1 = [\"end\"];\nconst _c2 = [\"center\"];\nconst _c3 = [\"*\"];\nfunction Toolbar_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Toolbar_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtemplate(1, Toolbar_div_2_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-pc-section\", \"start\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.startTemplate || ctx_r0._startTemplate);\n  }\n}\nfunction Toolbar_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Toolbar_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, Toolbar_div_3_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-pc-section\", \"center\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.centerTemplate || ctx_r0._centerTemplate);\n  }\n}\nfunction Toolbar_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Toolbar_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, Toolbar_div_4_ng_container_1_Template, 1, 0, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-pc-section\", \"end\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.endTemplate || ctx_r0._endTemplate);\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-toolbar {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    padding: ${dt('toolbar.padding')};\n    background: ${dt('toolbar.background')};\n    border: 1px solid ${dt('toolbar.border.color')};\n    color: ${dt('toolbar.color')};\n    border-radius: ${dt('toolbar.border.radius')};\n    gap: ${dt('toolbar.gap')};\n}\n\n.p-toolbar-start,\n.p-toolbar-center,\n.p-toolbar-end {\n    display: flex;\n    align-items: center;\n}\n`;\nconst classes = {\n  root: 'p-toolbar p-component',\n  start: 'p-toolbar-start',\n  center: 'p-toolbar-center',\n  end: 'p-toolbar-end'\n};\nlet ToolbarStyle = /*#__PURE__*/(() => {\n  class ToolbarStyle extends BaseStyle {\n    name = 'toolbar';\n    theme = theme;\n    classes = classes;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵToolbarStyle_BaseFactory;\n      return function ToolbarStyle_Factory(__ngFactoryType__) {\n        return (ɵToolbarStyle_BaseFactory || (ɵToolbarStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ToolbarStyle)))(__ngFactoryType__ || ToolbarStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ToolbarStyle,\n      factory: ToolbarStyle.ɵfac\n    });\n  }\n  return ToolbarStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * Toolbar is a grouping component for buttons and other content.\n *\n * [Live Demo](https://www.primeng.org/toolbar/)\n *\n * @module toolbarstyle\n *\n */\nvar ToolbarClasses = /*#__PURE__*/function (ToolbarClasses) {\n  /**\n   * Class name of the root element\n   */\n  ToolbarClasses[\"root\"] = \"p-toolbar\";\n  /**\n   * Class name of the start element\n   */\n  ToolbarClasses[\"start\"] = \"p-toolbar-start\";\n  /**\n   * Class name of the center element\n   */\n  ToolbarClasses[\"center\"] = \"p-toolbar-center\";\n  /**\n   * Class name of the end element\n   */\n  ToolbarClasses[\"end\"] = \"p-toolbar-end\";\n  return ToolbarClasses;\n}(ToolbarClasses || {});\n/**\n * Toolbar is a grouping component for buttons and other content.\n * @group Components\n */\nlet Toolbar = /*#__PURE__*/(() => {\n  class Toolbar extends BaseComponent {\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Defines a string value that labels an interactive element.\n     * @group Props\n     */\n    ariaLabelledBy;\n    _componentStyle = inject(ToolbarStyle);\n    getBlockableElement() {\n      return this.el.nativeElement.children[0];\n    }\n    /**\n     * Defines template option for start.\n     * @group Templates\n     */\n    startTemplate;\n    /**\n     * Defines template option for end.\n     * @group Templates\n     */\n    endTemplate;\n    /**\n     * Defines template option for center.\n     * @group Templates\n     */\n    centerTemplate;\n    templates;\n    _startTemplate;\n    _endTemplate;\n    _centerTemplate;\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'start':\n          case 'left':\n            this._startTemplate = item.template;\n            break;\n          case 'end':\n          case 'right':\n            this._endTemplate = item.template;\n            break;\n          case 'center':\n            this._centerTemplate = item.template;\n            break;\n        }\n      });\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵToolbar_BaseFactory;\n      return function Toolbar_Factory(__ngFactoryType__) {\n        return (ɵToolbar_BaseFactory || (ɵToolbar_BaseFactory = i0.ɵɵgetInheritedFactory(Toolbar)))(__ngFactoryType__ || Toolbar);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Toolbar,\n      selectors: [[\"p-toolbar\"]],\n      contentQueries: function Toolbar_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c1, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c2, 4);\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.startTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.endTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.centerTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      inputs: {\n        style: \"style\",\n        styleClass: \"styleClass\",\n        ariaLabelledBy: \"ariaLabelledBy\"\n      },\n      features: [i0.ɵɵProvidersFeature([ToolbarStyle]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c3,\n      decls: 5,\n      vars: 9,\n      consts: [[\"role\", \"toolbar\", 3, \"ngClass\", \"ngStyle\"], [\"class\", \"p-toolbar-start\", 4, \"ngIf\"], [\"class\", \"p-toolbar-center\", 4, \"ngIf\"], [\"class\", \"p-toolbar-end\", 4, \"ngIf\"], [1, \"p-toolbar-start\"], [4, \"ngTemplateOutlet\"], [1, \"p-toolbar-center\"], [1, \"p-toolbar-end\"]],\n      template: function Toolbar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵprojection(1);\n          i0.ɵɵtemplate(2, Toolbar_div_2_Template, 2, 2, \"div\", 1)(3, Toolbar_div_3_Template, 2, 2, \"div\", 2)(4, Toolbar_div_4_Template, 2, 2, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.styleClass);\n          i0.ɵɵproperty(\"ngClass\", \"p-toolbar p-component\")(\"ngStyle\", ctx.style);\n          i0.ɵɵattribute(\"aria-labelledby\", ctx.ariaLabelledBy)(\"data-pc-name\", \"toolbar\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.startTemplate || ctx._startTemplate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.centerTemplate || ctx._centerTemplate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.endTemplate || ctx._endTemplate);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, SharedModule],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return Toolbar;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ToolbarModule = /*#__PURE__*/(() => {\n  class ToolbarModule {\n    static ɵfac = function ToolbarModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToolbarModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ToolbarModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [Toolbar, SharedModule, SharedModule]\n    });\n  }\n  return ToolbarModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Toolbar, ToolbarClasses, ToolbarModule, ToolbarStyle };\n","export const API_URL: string = \"https://repzly-latest.onrender.com/api\";","export class RefreshTokenRequest {\r\n    refreshTokenId: number;\r\n\r\n    constructor(tokenId: number) {\r\n        this.refreshTokenId = tokenId;     \r\n    }\r\n}","export class InvalidTokenError extends Error {}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n    let code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = \"0\" + code;\n    }\n    return \"%\" + code;\n  }));\n}\nfunction base64UrlDecode(str) {\n  let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw new Error(\"base64 string is not of the correct length\");\n  }\n  try {\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n}\nexport function jwtDecode(token, options) {\n  if (typeof token !== \"string\") {\n    throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n  }\n  options || (options = {});\n  const pos = options.header === true ? 0 : 1;\n  const part = token.split(\".\")[pos];\n  if (typeof part !== \"string\") {\n    throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n  }\n  let decoded;\n  try {\n    decoded = base64UrlDecode(part);\n  } catch (e) {\n    throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n  }\n  try {\n    return JSON.parse(decoded);\n  } catch (e) {\n    throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n  }\n}","// jwt.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { API_URL } from '../../../globals';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoginRequestDto } from '../../user/login/dtos/login-request-dto';\r\nimport { EMPTY, Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport { Token } from '../token';\r\nimport { RefreshTokenRequest } from '../refresh-token-request';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtService {\r\n  private authStateInitialized = false;\r\n  private loggedInSubject = new BehaviorSubject<boolean | null>(null); // Start with null to indicate not initialized\r\n  public authState$ = this.loggedInSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    // We'll initialize auth state via provideAppInitializer instead\r\n  }\r\n\r\n  // Make this public so it can be called by provideAppInitializer\r\n  public initAuthState(): void {\r\n    // This function will be called before the app renders\r\n    // Get token synchronously\r\n    const token = this.getToken();\r\n\r\n    if (token) {\r\n      try {\r\n        const decoded = this.decodeToken(token);\r\n        if (decoded) {\r\n          // Check if token is expired\r\n          const currentTime = Date.now() / 1000;\r\n          if (decoded.exp && decoded.exp > currentTime) {\r\n            this.loggedInSubject.next(true);\r\n          } else {\r\n            // Token expired\r\n            this.logout();\r\n          }\r\n        } else {\r\n          this.logout();\r\n        }\r\n      } catch (e) {\r\n        this.logout();\r\n      }\r\n    } else {\r\n      this.loggedInSubject.next(false);\r\n    }\r\n\r\n    this.authStateInitialized = true;\r\n  }\r\n\r\n  logout(): void {\r\n    if (typeof window !== 'undefined' && window.sessionStorage) {\r\n      sessionStorage.removeItem(\"accessToken\");\r\n      sessionStorage.removeItem(\"refreshToken\");\r\n      this.loggedInSubject.next(false);\r\n    }\r\n  }\r\n\r\n  sendLoginRequest(request: LoginRequestDto): Observable<any> {\r\n    return this.http.post(API_URL + \"/auth/login\", request);\r\n  }\r\n\r\n  refreshToken(): Observable<any> {\r\n    let refreshTokenId: any = \"\";\r\n    if (typeof window !== 'undefined' && window.sessionStorage) {\r\n      refreshTokenId = sessionStorage.getItem(\"refreshToken\");\r\n    } else {\r\n      return EMPTY;\r\n    }\r\n    if (refreshTokenId == null) {\r\n      this.logout();\r\n      return throwError(() => new Error('No refresh token available'));\r\n    }\r\n    let body: RefreshTokenRequest = new RefreshTokenRequest(Number(refreshTokenId));\r\n    return this.http.post(API_URL + \"/auth/refresh-token\", body);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    // Return the current value synchronously, but consider null as not logged in\r\n    return this.loggedInSubject.value === true;\r\n  }\r\n\r\n\r\n  isAuthInitialized(): boolean {\r\n    return this.loggedInSubject.value !== null;\r\n  }\r\n\r\n  getLoggedInUser(): Observable<any> {\r\n    let token: string | null = this.getToken();\r\n    let decodedToken = null;\r\n    let username = null;\r\n    if (token != null) {\r\n      decodedToken = jwtDecode(token);\r\n      username = decodedToken.sub;\r\n    }\r\n    return this.http.get(API_URL + \"/user/me?username=\" + username);\r\n  }\r\n\r\n  getToken(): string | null {\r\n    if (typeof window !== 'undefined' && window.sessionStorage) {\r\n      return sessionStorage.getItem(\"accessToken\");\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getRefreshToken(): string | null {\r\n    if (typeof window !== 'undefined' && window.sessionStorage) {\r\n      return sessionStorage.getItem(\"refreshToken\");\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setTokens(token: Token) {\r\n    if (typeof window !== 'undefined' && window.sessionStorage) {\r\n      sessionStorage.setItem(\"accessToken\", token.accessToken);\r\n      sessionStorage.setItem(\"refreshToken\", token.refreshToken);\r\n      this.loggedInSubject.next(true);\r\n    }\r\n  }\r\n\r\n  decodeToken(token: string) {\r\n    try {\r\n      return jwtDecode(token);\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n}","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Input, Component, NgModule } from '@angular/core';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"*\"];\nconst theme = ({\n  dt\n}) => `\n.p-inputgroup,\n.p-inputgroup .p-floatlabel,\n.p-inputgroup .p-iftalabel {\n    display: flex;\n    align-items: stretch;\n    width: 100%;\n}\n\n.p-inputgroup .p-inputtext,\n.p-inputgroup .p-inputwrapper {\n    flex: 1 1 auto;\n    width: 1%;\n}\n\n.p-inputgroupaddon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: ${dt('inputgroup.addon.padding')};\n    background: ${dt('inputgroup.addon.background')};\n    color: ${dt('inputgroup.addon.color')};\n    border-block-start: 1px solid ${dt('inputgroup.addon.border.color')};\n    border-block-end: 1px solid ${dt('inputgroup.addon.border.color')};\n    min-width: ${dt('inputgroup.addon.min.width')};\n}\n\n.p-inputgroupaddon:first-child,\n.p-inputgroupaddon + .p-inputgroupaddon {\n    border-inline-start: 1px solid ${dt('inputgroup.addon.border.color')};\n}\n\n.p-inputgroupaddon:last-child {\n    border-inline-end: 1px solid ${dt('inputgroup.addon.border.color')};\n}\n\n.p-inputgroupaddon:has(.p-button) {\n    padding: 0;\n    overflow: hidden;\n}\n\n.p-inputgroupaddon .p-button {\n    border-radius: 0;\n}\n\n.p-inputgroup > .p-component,\n.p-inputgroup > .p-inputwrapper > .p-component,\n.p-inputgroup:first-child > p-button > .p-button,\n.p-inputgroup > .p-floatlabel > .p-component,\n.p-inputgroup > .p-floatlabel > .p-inputwrapper > .p-component,\n.p-inputgroup > .p-iftalabel > .p-component,\n.p-inputgroup > .p-iftalabel > .p-inputwrapper > .p-component {\n    border-radius: 0;\n    margin: 0;\n}\n\n.p-inputgroupaddon:first-child,\n.p-inputgroup > .p-component:first-child,\n.p-inputgroup > .p-inputwrapper:first-child > .p-component,\n.p-inputgroup > .p-floatlabel:first-child > .p-component,\n.p-inputgroup > .p-floatlabel:first-child > .p-inputwrapper > .p-component,\n.p-inputgroup > .p-iftalabel:first-child > .p-component,\n.p-inputgroup > .p-iftalabel:first-child > .p-inputwrapper > .p-component {\n    border-start-start-radius: ${dt('inputgroup.addon.border.radius')};\n    border-end-start-radius: ${dt('inputgroup.addon.border.radius')};\n}\n\n.p-inputgroupaddon:last-child,\n.p-inputgroup > .p-component:last-child,\n.p-inputgroup > .p-inputwrapper:last-child > .p-component,\n.p-inputgroup > .p-floatlabel:last-child > .p-component,\n.p-inputgroup > .p-floatlabel:last-child > .p-inputwrapper > .p-component,\n.p-inputgroup > .p-iftalabel:last-child > .p-component,\n.p-inputgroup > .p-iftalabel:last-child > .p-inputwrapper > .p-component {\n    border-start-end-radius: ${dt('inputgroup.addon.border.radius')};\n    border-end-end-radius: ${dt('inputgroup.addon.border.radius')};\n}\n\n.p-inputgroup .p-component:focus,\n.p-inputgroup .p-component.p-focus,\n.p-inputgroup .p-inputwrapper-focus,\n.p-inputgroup .p-component:focus ~ label,\n.p-inputgroup .p-component.p-focus ~ label,\n.p-inputgroup .p-inputwrapper-focus ~ label {\n    z-index: 1;\n}\n\n.p-inputgroup > .p-button:not(.p-button-icon-only) {\n    width: auto;\n}\n\n/*For PrimeNG*/\n\n.p-inputgroup p-button:first-child, .p-inputgroup p-button:last-child {\n    display: inline-flex;\n}\n\n.p-inputgroup:has(> p-button:first-child) .p-button{\n    border-start-start-radius: ${dt('inputgroup.addon.border.radius')};\n    border-end-start-radius: ${dt('inputgroup.addon.border.radius')};\n}\n\n.p-inputgroup:has(> p-button:last-child) .p-button {\n    border-start-end-radius: ${dt('inputgroup.addon.border.radius')};\n    border-end-end-radius: ${dt('inputgroup.addon.border.radius')};\n}\n`;\nconst classes = {\n  root: ({\n    props\n  }) => ['p-inputgroup', {\n    'p-inputgroup-fluid': props.fluid\n  }]\n};\nlet InputGroupStyle = /*#__PURE__*/(() => {\n  class InputGroupStyle extends BaseStyle {\n    name = 'inputgroup';\n    theme = theme;\n    classes = classes;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵInputGroupStyle_BaseFactory;\n      return function InputGroupStyle_Factory(__ngFactoryType__) {\n        return (ɵInputGroupStyle_BaseFactory || (ɵInputGroupStyle_BaseFactory = i0.ɵɵgetInheritedFactory(InputGroupStyle)))(__ngFactoryType__ || InputGroupStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: InputGroupStyle,\n      factory: InputGroupStyle.ɵfac\n    });\n  }\n  return InputGroupStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * InputGroup displays text, icon, buttons and other content can be grouped next to an input.\n *\n * [Live Demo](https://www.primeng.org/inputgroup/)\n *\n * @module inputgroupstyle\n *\n */\nvar InputGroupClasses = /*#__PURE__*/function (InputGroupClasses) {\n  /**\n   * Class name of the root element\n   */\n  InputGroupClasses[\"root\"] = \"p-inputgroup\";\n  return InputGroupClasses;\n}(InputGroupClasses || {});\n/**\n * InputGroup displays text, icon, buttons and other content can be grouped next to an input.\n * @group Components\n */\nlet InputGroup = /*#__PURE__*/(() => {\n  class InputGroup extends BaseComponent {\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    _componentStyle = inject(InputGroupStyle);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵInputGroup_BaseFactory;\n      return function InputGroup_Factory(__ngFactoryType__) {\n        return (ɵInputGroup_BaseFactory || (ɵInputGroup_BaseFactory = i0.ɵɵgetInheritedFactory(InputGroup)))(__ngFactoryType__ || InputGroup);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: InputGroup,\n      selectors: [[\"p-inputgroup\"], [\"p-inputGroup\"], [\"p-input-group\"]],\n      hostAttrs: [1, \"p-inputgroup\"],\n      hostVars: 5,\n      hostBindings: function InputGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-pc-name\", \"inputgroup\");\n          i0.ɵɵstyleMap(ctx.style);\n          i0.ɵɵclassMap(ctx.styleClass);\n        }\n      },\n      inputs: {\n        style: \"style\",\n        styleClass: \"styleClass\"\n      },\n      features: [i0.ɵɵProvidersFeature([InputGroupStyle]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function InputGroup_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      dependencies: [CommonModule, SharedModule],\n      encapsulation: 2\n    });\n  }\n  return InputGroup;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet InputGroupModule = /*#__PURE__*/(() => {\n  class InputGroupModule {\n    static ɵfac = function InputGroupModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InputGroupModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: InputGroupModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [InputGroup, SharedModule, SharedModule]\n    });\n  }\n  return InputGroupModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputGroup, InputGroupClasses, InputGroupModule, InputGroupStyle };\n","import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, HostBinding, Input, Component, NgModule } from '@angular/core';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"*\"];\nconst classes = {\n  root: 'p-inputgroupaddon'\n};\nlet InputGroupAddonStyle = /*#__PURE__*/(() => {\n  class InputGroupAddonStyle extends BaseStyle {\n    name = 'inputgroupaddon';\n    classes = classes;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵInputGroupAddonStyle_BaseFactory;\n      return function InputGroupAddonStyle_Factory(__ngFactoryType__) {\n        return (ɵInputGroupAddonStyle_BaseFactory || (ɵInputGroupAddonStyle_BaseFactory = i0.ɵɵgetInheritedFactory(InputGroupAddonStyle)))(__ngFactoryType__ || InputGroupAddonStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: InputGroupAddonStyle,\n      factory: InputGroupAddonStyle.ɵfac\n    });\n  }\n  return InputGroupAddonStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * InputGroupAddon displays text, icon, buttons and other content can be grouped next to an input.\n * @group Components\n */\nlet InputGroupAddon = /*#__PURE__*/(() => {\n  class InputGroupAddon extends BaseComponent {\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    _componentStyle = inject(InputGroupAddonStyle);\n    get hostStyle() {\n      return this.style;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵInputGroupAddon_BaseFactory;\n      return function InputGroupAddon_Factory(__ngFactoryType__) {\n        return (ɵInputGroupAddon_BaseFactory || (ɵInputGroupAddon_BaseFactory = i0.ɵɵgetInheritedFactory(InputGroupAddon)))(__ngFactoryType__ || InputGroupAddon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: InputGroupAddon,\n      selectors: [[\"p-inputgroup-addon\"], [\"p-inputGroupAddon\"]],\n      hostVars: 7,\n      hostBindings: function InputGroupAddon_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-pc-name\", \"inputgroupaddon\");\n          i0.ɵɵstyleMap(ctx.hostStyle);\n          i0.ɵɵclassMap(ctx.styleClass);\n          i0.ɵɵclassProp(\"p-inputgroupaddon\", true);\n        }\n      },\n      inputs: {\n        style: \"style\",\n        styleClass: \"styleClass\"\n      },\n      features: [i0.ɵɵProvidersFeature([InputGroupAddonStyle]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function InputGroupAddon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      dependencies: [CommonModule],\n      encapsulation: 2\n    });\n  }\n  return InputGroupAddon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet InputGroupAddonModule = /*#__PURE__*/(() => {\n  class InputGroupAddonModule {\n    static ɵfac = function InputGroupAddonModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InputGroupAddonModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: InputGroupAddonModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [InputGroupAddon, SharedModule, SharedModule]\n    });\n  }\n  return InputGroupAddonModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputGroupAddon, InputGroupAddonModule, InputGroupAddonStyle };\n","import { trigger, transition, style, animate } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, signal, inject, booleanAttribute, ContentChildren, ContentChild, Output, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { TimesIcon } from 'primeng/icons';\nimport { Ripple } from 'primeng/ripple';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"container\"];\nconst _c1 = [\"icon\"];\nconst _c2 = [\"closeicon\"];\nconst _c3 = [\"*\"];\nconst _c4 = (a0, a1) => ({\n  showTransitionParams: a0,\n  hideTransitionParams: a1\n});\nconst _c5 = a0 => ({\n  value: \"visible()\",\n  params: a0\n});\nconst _c6 = a0 => ({\n  closeCallback: a0\n});\nfunction Message_Conditional_0_Conditional_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Message_Conditional_0_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Message_Conditional_0_Conditional_2_ng_container_0_Template, 1, 0, \"ng-container\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconTemplate || ctx_r0.iconTemplate);\n  }\n}\nfunction Message_Conditional_0_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.icon);\n  }\n}\nfunction Message_Conditional_0_div_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.cx(\"text\"))(\"innerHTML\", ctx_r0.text, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction Message_Conditional_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, Message_Conditional_0_div_4_span_1_Template, 1, 2, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.escape);\n  }\n}\nfunction Message_Conditional_0_ng_template_5_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.cx(\"text\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.text);\n  }\n}\nfunction Message_Conditional_0_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Message_Conditional_0_ng_template_5_span_0_Template, 2, 2, \"span\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.escape && ctx_r0.text);\n  }\n}\nfunction Message_Conditional_0_Conditional_7_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Message_Conditional_0_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Message_Conditional_0_Conditional_7_ng_container_0_Template, 1, 0, \"ng-container\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.containerTemplate || ctx_r0.containerTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c6, ctx_r0.close.bind(ctx_r0)));\n  }\n}\nfunction Message_Conditional_0_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.cx(\"text\"));\n  }\n}\nfunction Message_Conditional_0_Conditional_9_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 13);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.closeIcon);\n  }\n}\nfunction Message_Conditional_0_Conditional_9_Conditional_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Message_Conditional_0_Conditional_9_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Message_Conditional_0_Conditional_9_Conditional_2_ng_container_0_Template, 1, 0, \"ng-container\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.closeIconTemplate || ctx_r0._closeIconTemplate);\n  }\n}\nfunction Message_Conditional_0_Conditional_9_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"TimesIcon\", 14);\n  }\n}\nfunction Message_Conditional_0_Conditional_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function Message_Conditional_0_Conditional_9_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.close($event));\n    });\n    i0.ɵɵtemplate(1, Message_Conditional_0_Conditional_9_Conditional_1_Template, 1, 1, \"i\", 13)(2, Message_Conditional_0_Conditional_9_Conditional_2_Template, 1, 1, \"ng-container\")(3, Message_Conditional_0_Conditional_9_Conditional_3_Template, 1, 0, \"TimesIcon\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"aria-label\", ctx_r0.closeAriaLabel);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.closeIcon ? 1 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.closeIconTemplate || ctx_r0._closeIconTemplate ? 2 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(!ctx_r0.closeIconTemplate && !ctx_r0._closeIconTemplate && !ctx_r0.closeIcon ? 3 : -1);\n  }\n}\nfunction Message_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵtemplate(2, Message_Conditional_0_Conditional_2_Template, 1, 1, \"ng-container\")(3, Message_Conditional_0_Conditional_3_Template, 1, 1, \"i\", 3)(4, Message_Conditional_0_div_4_Template, 2, 1, \"div\", 4)(5, Message_Conditional_0_ng_template_5_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(7, Message_Conditional_0_Conditional_7_Template, 1, 4, \"ng-container\")(8, Message_Conditional_0_Conditional_8_Template, 2, 1, \"span\", 5)(9, Message_Conditional_0_Conditional_9_Template, 4, 4, \"button\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const escapeOut_r3 = i0.ɵɵreference(6);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.containerClass)(\"@messageAnimation\", i0.ɵɵpureFunction1(13, _c5, i0.ɵɵpureFunction2(10, _c4, ctx_r0.showTransitionOptions, ctx_r0.hideTransitionOptions)));\n    i0.ɵɵattribute(\"aria-live\", \"polite\")(\"role\", \"alert\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r0.iconTemplate || ctx_r0._iconTemplate ? 2 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(ctx_r0.icon ? 3 : -1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.escape)(\"ngIfElse\", escapeOut_r3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵconditional(ctx_r0.containerTemplate || ctx_r0._containerTemplate ? 7 : 8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(ctx_r0.closable ? 9 : -1);\n  }\n}\nconst theme = ({\n  dt\n}) => `\n.p-message {\n    border-radius: ${dt('message.border.radius')};\n    outline-width: ${dt('message.border.width')};\n    outline-style: solid;\n}\n\n.p-message-content {\n    display: flex;\n    align-items: center;\n    padding: ${dt('message.content.padding')};\n    gap: ${dt('message.content.gap')};\n    height: 100%;\n}\n\n.p-message-icon {\n    flex-shrink: 0;\n}\n\n.p-message-close-button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-shrink: 0;\n    margin-inline-start: auto;\n    overflow: hidden;\n    position: relative;\n    width: ${dt('message.close.button.width')};\n    height: ${dt('message.close.button.height')};\n    border-radius: ${dt('message.close.button.border.radius')};\n    background: transparent;\n    transition: background ${dt('message.transition.duration')}, color ${dt('message.transition.duration')}, outline-color ${dt('message.transition.duration')}, box-shadow ${dt('message.transition.duration')}, opacity 0.3s;\n    outline-color: transparent;\n    color: inherit;\n    padding: 0;\n    border: none;\n    cursor: pointer;\n    user-select: none;\n}\n\n.p-message-close-icon {\n    font-size: ${dt('message.close.icon.size')};\n    width: ${dt('message.close.icon.size')};\n    height: ${dt('message.close.icon.size')};\n}\n\n.p-message-close-button:focus-visible {\n    outline-width: ${dt('message.close.button.focus.ring.width')};\n    outline-style: ${dt('message.close.button.focus.ring.style')};\n    outline-offset: ${dt('message.close.button.focus.ring.offset')};\n}\n\n.p-message-info {\n    background: ${dt('message.info.background')};\n    outline-color: ${dt('message.info.border.color')};\n    color: ${dt('message.info.color')};\n    box-shadow: ${dt('message.info.shadow')};\n}\n\n.p-message-info .p-message-close-button:focus-visible {\n    outline-color: ${dt('message.info.close.button.focus.ring.color')};\n    box-shadow: ${dt('message.info.close.button.focus.ring.shadow')};\n}\n\n.p-message-info .p-message-close-button:hover {\n    background: ${dt('message.info.close.button.hover.background')};\n}\n\n.p-message-info.p-message-outlined {\n    color: ${dt('message.info.outlined.color')};\n    outline-color: ${dt('message.info.outlined.border.color')};\n}\n\n.p-message-info.p-message-simple {\n    color: ${dt('message.info.simple.color')};\n}\n\n.p-message-success {\n    background: ${dt('message.success.background')};\n    outline-color: ${dt('message.success.border.color')};\n    color: ${dt('message.success.color')};\n    box-shadow: ${dt('message.success.shadow')};\n}\n\n.p-message-success .p-message-close-button:focus-visible {\n    outline-color: ${dt('message.success.close.button.focus.ring.color')};\n    box-shadow: ${dt('message.success.close.button.focus.ring.shadow')};\n}\n\n.p-message-success .p-message-close-button:hover {\n    background: ${dt('message.success.close.button.hover.background')};\n}\n\n.p-message-success.p-message-outlined {\n    color: ${dt('message.success.outlined.color')};\n    outline-color: ${dt('message.success.outlined.border.color')};\n}\n\n.p-message-success.p-message-simple {\n    color: ${dt('message.success.simple.color')};\n}\n\n.p-message-warn {\n    background: ${dt('message.warn.background')};\n    outline-color: ${dt('message.warn.border.color')};\n    color: ${dt('message.warn.color')};\n    box-shadow: ${dt('message.warn.shadow')};\n}\n\n.p-message-warn .p-message-close-button:focus-visible {\n    outline-color: ${dt('message.warn.close.button.focus.ring.color')};\n    box-shadow: ${dt('message.warn.close.button.focus.ring.shadow')};\n}\n\n.p-message-warn .p-message-close-button:hover {\n    background: ${dt('message.warn.close.button.hover.background')};\n}\n\n.p-message-warn.p-message-outlined {\n    color: ${dt('message.warn.outlined.color')};\n    outline-color: ${dt('message.warn.outlined.border.color')};\n}\n\n.p-message-warn.p-message-simple {\n    color: ${dt('message.warn.simple.color')};\n}\n\n.p-message-error {\n    background: ${dt('message.error.background')};\n    outline-color: ${dt('message.error.border.color')};\n    color: ${dt('message.error.color')};\n    box-shadow: ${dt('message.error.shadow')};\n}\n\n.p-message-error .p-message-close-button:focus-visible {\n    outline-color: ${dt('message.error.close.button.focus.ring.color')};\n    box-shadow: ${dt('message.error.close.button.focus.ring.shadow')};\n}\n\n.p-message-error .p-message-close-button:hover {\n    background: ${dt('message.error.close.button.hover.background')};\n}\n\n.p-message-error.p-message-outlined {\n    color: ${dt('message.error.outlined.color')};\n    outline-color: ${dt('message.error.outlined.border.color')};\n}\n\n.p-message-error.p-message-simple {\n    color: ${dt('message.error.simple.color')};\n}\n\n.p-message-secondary {\n    background: ${dt('message.secondary.background')};\n    outline-color: ${dt('message.secondary.border.color')};\n    color: ${dt('message.secondary.color')};\n    box-shadow: ${dt('message.secondary.shadow')};\n}\n\n.p-message-secondary .p-message-close-button:focus-visible {\n    outline-color: ${dt('message.secondary.close.button.focus.ring.color')};\n    box-shadow: ${dt('message.secondary.close.button.focus.ring.shadow')};\n}\n\n.p-message-secondary .p-message-close-button:hover {\n    background: ${dt('message.secondary.close.button.hover.background')};\n}\n\n.p-message-secondary.p-message-outlined {\n    color: ${dt('message.secondary.outlined.color')};\n    outline-color: ${dt('message.secondary.outlined.border.color')};\n}\n\n.p-message-secondary.p-message-simple {\n    color: ${dt('message.secondary.simple.color')};\n}\n\n.p-message-contrast {\n    background: ${dt('message.contrast.background')};\n    outline-color: ${dt('message.contrast.border.color')};\n    color: ${dt('message.contrast.color')};\n    box-shadow: ${dt('message.contrast.shadow')};\n}\n\n.p-message-contrast .p-message-close-button:focus-visible {\n    outline-color: ${dt('message.contrast.close.button.focus.ring.color')};\n    box-shadow: ${dt('message.contrast.close.button.focus.ring.shadow')};\n}\n\n.p-message-contrast .p-message-close-button:hover {\n    background: ${dt('message.contrast.close.button.hover.background')};\n}\n\n.p-message-contrast.p-message-outlined {\n    color: ${dt('message.contrast.outlined.color')};\n    outline-color: ${dt('message.contrast.outlined.border.color')};\n}\n\n.p-message-contrast.p-message-simple {\n    color: ${dt('message.contrast.simple.color')};\n}\n\n.p-message-text {\n    font-size: ${dt('message.text.font.size')};\n    font-weight: ${dt('message.text.font.weight')};\n}\n\n.p-message-icon {\n    font-size: ${dt('message.icon.size')};\n    width: ${dt('message.icon.size')};\n    height: ${dt('message.icon.size')};\n}\n\n.p-message-enter-from {\n    opacity: 0;\n}\n\n.p-message-enter-active {\n    transition: opacity 0.3s;\n}\n\n.p-message.p-message-leave-from {\n    max-height: 1000px;\n}\n\n.p-message.p-message-leave-to {\n    max-height: 0;\n    opacity: 0;\n    margin: 0;\n}\n\n.p-message-leave-active {\n    overflow: hidden;\n    transition: max-height 0.45s cubic-bezier(0, 1, 0, 1), opacity 0.3s, margin 0.3s;\n}\n\n.p-message-leave-active .p-message-close-button {\n    opacity: 0;\n}\n\n.p-message-sm .p-message-content {\n    padding: ${dt('message.content.sm.padding')};\n}\n\n.p-message-sm .p-message-text {\n    font-size: ${dt('message.text.sm.font.size')};\n}\n\n.p-message-sm .p-message-icon {\n    font-size: ${dt('message.icon.sm.size')};\n    width: ${dt('message.icon.sm.size')};\n    height: ${dt('message.icon.sm.size')};\n}\n\n.p-message-sm .p-message-close-icon {\n    font-size: ${dt('message.close.icon.sm.size')};\n    width: ${dt('message.close.icon.sm.size')};\n    height: ${dt('message.close.icon.sm.size')};\n}\n\n.p-message-lg .p-message-content {\n    padding: ${dt('message.content.lg.padding')};\n}\n\n.p-message-lg .p-message-text {\n    font-size: ${dt('message.text.lg.font.size')};\n}\n\n.p-message-lg .p-message-icon {\n    font-size: ${dt('message.icon.lg.size')};\n    width: ${dt('message.icon.lg.size')};\n    height: ${dt('message.icon.lg.size')};\n}\n\n.p-message-lg .p-message-close-icon {\n    font-size: ${dt('message.close.icon.lg.size')};\n    width: ${dt('message.close.icon.lg.size')};\n    height: ${dt('message.close.icon.lg.size')};\n}\n\n.p-message-outlined {\n    background: transparent;\n    outline-width: ${dt('message.outlined.border.width')};\n}\n\n.p-message-simple {\n    background: transparent;\n    outline-color: transparent;\n    box-shadow: none;\n}\n\n.p-message-simple .p-message-content {\n    padding: ${dt('message.simple.content.padding')};\n}\n\n.p-message-outlined .p-message-close-button:hover,\n.p-message-simple .p-message-close-button:hover {\n    background: transparent;\n}`;\nconst classes = {\n  root: ({\n    props\n  }) => ['p-message p-component p-message-' + props.severity, {\n    'p-message-simple': props.variant === 'simple'\n  }],\n  content: 'p-message-content',\n  icon: 'p-message-icon',\n  text: 'p-message-text',\n  closeButton: 'p-message-close-button',\n  closeIcon: 'p-message-close-icon'\n};\nlet MessageStyle = /*#__PURE__*/(() => {\n  class MessageStyle extends BaseStyle {\n    name = 'message';\n    theme = theme;\n    classes = classes;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMessageStyle_BaseFactory;\n      return function MessageStyle_Factory(__ngFactoryType__) {\n        return (ɵMessageStyle_BaseFactory || (ɵMessageStyle_BaseFactory = i0.ɵɵgetInheritedFactory(MessageStyle)))(__ngFactoryType__ || MessageStyle);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MessageStyle,\n      factory: MessageStyle.ɵfac\n    });\n  }\n  return MessageStyle;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n *\n * Message groups a collection of contents in tabs.\n *\n * [Live Demo](https://www.primeng.org/message/)\n *\n * @module messagestyle\n *\n */\nvar MessageClasses = /*#__PURE__*/function (MessageClasses) {\n  /**\n   * Class name of the root element\n   */\n  MessageClasses[\"root\"] = \"p-message\";\n  /**\n   * Class name of the content element\n   */\n  MessageClasses[\"content\"] = \"p-message-content\";\n  /**\n   * Class name of the icon element\n   */\n  MessageClasses[\"icon\"] = \"p-message-icon\";\n  /**\n   * Class name of the text element\n   */\n  MessageClasses[\"text\"] = \"p-message-text\";\n  /**\n   * Class name of the close button element\n   */\n  MessageClasses[\"closeButton\"] = \"p-message-close-button\";\n  /**\n   * Class name of the close icon element\n   */\n  MessageClasses[\"closeIcon\"] = \"p-message-close-icon\";\n  return MessageClasses;\n}(MessageClasses || {});\n/**\n * Message groups a collection of contents in tabs.\n * @group Components\n */\nlet Message = /*#__PURE__*/(() => {\n  class Message extends BaseComponent {\n    /**\n     * Severity level of the message.\n     * @defaultValue 'info'\n     * @group Props\n     */\n    severity = 'info';\n    /**\n     * Text content.\n     * @group Props\n     */\n    text;\n    /**\n     * Whether displaying messages would be escaped or not.\n     * @deprecated Use content projection instead '<p-message>Content</p-message>'.\n     * @group Props\n     */\n    escape = true;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Whether the message can be closed manually using the close icon.\n     * @group Props\n     * @defaultValue false\n     */\n    closable = false;\n    /**\n     * Icon to display in the message.\n     * @group Props\n     * @defaultValue undefined\n     */\n    icon;\n    /**\n     * Icon to display in the message close button.\n     * @group Props\n     * @defaultValue undefined\n     */\n    closeIcon;\n    /**\n     * Delay in milliseconds to close the message automatically.\n     * @defaultValue undefined\n     */\n    life;\n    /**\n     * Transition options of the show animation.\n     * @defaultValue '300ms ease-out'\n     * @group Props\n     */\n    showTransitionOptions = '300ms ease-out';\n    /**\n     * Transition options of the hide animation.\n     * @defaultValue '200ms cubic-bezier(0.86, 0, 0.07, 1)'\n     * @group Props\n     */\n    hideTransitionOptions = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\n    /**\n     * Defines the size of the component.\n     * @group Props\n     */\n    size;\n    /**\n     * Specifies the input variant of the component.\n     * @group Props\n     */\n    variant;\n    /**\n     * Emits when the message is closed.\n     * @param {{ originalEvent: Event }} event - The event object containing the original event.\n     * @group Emits\n     */\n    onClose = new EventEmitter();\n    get closeAriaLabel() {\n      return this.config.translation.aria ? this.config.translation.aria.close : undefined;\n    }\n    get containerClass() {\n      const variantClass = this.variant === 'outlined' ? 'p-message-outlined' : this.variant === 'simple' ? 'p-message-simple' : '';\n      const sizeClass = this.size === 'small' ? 'p-message-sm' : this.size === 'large' ? 'p-message-lg' : '';\n      return `p-message-${this.severity} ${variantClass} ${sizeClass}`.trim() + (this.styleClass ? ' ' + this.styleClass : '');\n    }\n    visible = signal(true);\n    _componentStyle = inject(MessageStyle);\n    /**\n     * Custom template of the message container.\n     * @group Templates\n     */\n    containerTemplate;\n    /**\n     * Custom template of the message icon.\n     * @group Templates\n     */\n    iconTemplate;\n    /**\n     * Custom template of the close icon.\n     * @group Templates\n     */\n    closeIconTemplate;\n    templates;\n    _containerTemplate;\n    _iconTemplate;\n    _closeIconTemplate;\n    ngOnInit() {\n      super.ngOnInit();\n      if (this.life) {\n        setTimeout(() => {\n          this.visible.set(false);\n        }, this.life);\n      }\n    }\n    ngAfterContentInit() {\n      this.templates?.forEach(item => {\n        switch (item.getType()) {\n          case 'container':\n            this._containerTemplate = item.template;\n            break;\n          case 'icon':\n            this._iconTemplate = item.template;\n            break;\n          case 'closeicon':\n            this._closeIconTemplate = item.template;\n            break;\n        }\n      });\n    }\n    /**\n     * Closes the message.\n     * @param {Event} event - Browser event.\n     * @group Method\n     */\n    close(event) {\n      this.visible.set(false);\n      this.onClose.emit({\n        originalEvent: event\n      });\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMessage_BaseFactory;\n      return function Message_Factory(__ngFactoryType__) {\n        return (ɵMessage_BaseFactory || (ɵMessage_BaseFactory = i0.ɵɵgetInheritedFactory(Message)))(__ngFactoryType__ || Message);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Message,\n      selectors: [[\"p-message\"]],\n      contentQueries: function Message_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c1, 4);\n          i0.ɵɵcontentQuery(dirIndex, _c2, 4);\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iconTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.closeIconTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      inputs: {\n        severity: \"severity\",\n        text: \"text\",\n        escape: [2, \"escape\", \"escape\", booleanAttribute],\n        style: \"style\",\n        styleClass: \"styleClass\",\n        closable: [2, \"closable\", \"closable\", booleanAttribute],\n        icon: \"icon\",\n        closeIcon: \"closeIcon\",\n        life: \"life\",\n        showTransitionOptions: \"showTransitionOptions\",\n        hideTransitionOptions: \"hideTransitionOptions\",\n        size: \"size\",\n        variant: \"variant\"\n      },\n      outputs: {\n        onClose: \"onClose\"\n      },\n      features: [i0.ɵɵProvidersFeature([MessageStyle]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c3,\n      decls: 1,\n      vars: 1,\n      consts: [[\"escapeOut\", \"\"], [1, \"p-message\", \"p-component\", 3, \"ngClass\"], [1, \"p-message-content\"], [1, \"p-message-icon\", 3, \"ngClass\"], [4, \"ngIf\", \"ngIfElse\"], [3, \"ngClass\"], [\"pRipple\", \"\", \"type\", \"button\", 1, \"p-message-close-button\"], [4, \"ngTemplateOutlet\"], [3, \"ngClass\", \"innerHTML\", 4, \"ngIf\"], [3, \"ngClass\", \"innerHTML\"], [3, \"ngClass\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"pRipple\", \"\", \"type\", \"button\", 1, \"p-message-close-button\", 3, \"click\"], [1, \"p-message-close-icon\", 3, \"ngClass\"], [\"styleClass\", \"p-message-close-icon\"]],\n      template: function Message_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, Message_Conditional_0_Template, 10, 15, \"div\", 1);\n        }\n        if (rf & 2) {\n          i0.ɵɵconditional(ctx.visible() ? 0 : -1);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, TimesIcon, Ripple, SharedModule],\n      encapsulation: 2,\n      data: {\n        animation: [trigger('messageAnimation', [transition(':enter', [style({\n          opacity: 0,\n          transform: 'translateY(-25%)'\n        }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n          height: 0,\n          marginTop: 0,\n          marginBottom: 0,\n          marginLeft: 0,\n          marginRight: 0,\n          opacity: 0\n        }))])])]\n      },\n      changeDetection: 0\n    });\n  }\n  return Message;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MessageModule = /*#__PURE__*/(() => {\n  class MessageModule {\n    static ɵfac = function MessageModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MessageModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MessageModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [Message, SharedModule, SharedModule]\n    });\n  }\n  return MessageModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Message, MessageClasses, MessageModule, MessageStyle };\n"],"mappings":"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","names":["HttpHandler","HttpBackend","HttpHeaders","_HttpHeaders","headers","line","index","name","value","values","lcName","update","other","key","clone","base","toDelete","existing","headerValues","fn","HttpUrlEncodingCodec","key","standardEncoding","value","paramParser","rawParams","codec","map","param","eqIdx","val","list","STANDARD_ENCODING_REGEX","STANDARD_ENCODING_REPLACEMENTS","v","s","t","valueToString","HttpParams","_HttpParams","options","RuntimeError","values","res","params","updates","_value","eKey","update","clone","base","idx","HttpContext","token","value","mightHaveBody","method","isArrayBuffer","isBlob","isFormData","isUrlSearchParams","CONTENT_TYPE_HEADER","ACCEPT_HEADER","X_REQUEST_URL_HEADER","TEXT_CONTENT_TYPE","JSON_CONTENT_TYPE","ACCEPT_HEADER_VALUE","HttpRequest","_HttpRequest","url","third","fourth","options","HttpHeaders","HttpParams","params","qIdx","sep","update","responseType","transferCache","body","withCredentials","reportProgress","headers","context","name","param","HttpEventType","HttpResponseBase","init","defaultStatus","defaultStatusText","HttpHeaderResponse","_HttpHeaderResponse","HttpResponse","_HttpResponse","HttpErrorResponse","HTTP_STATUS_CODE_OK","HTTP_STATUS_CODE_NO_CONTENT","addBody","options","body","HttpClient","handler","first","url","req","HttpRequest","headers","HttpHeaders","params","HttpParams","events$","of","concatMap","res$","filter","event","HttpResponse","map","res","RuntimeError","callbackParam","__ngFactoryType__","ɵɵinject","HttpHandler","ɵɵdefineInjectable","XSSI_PREFIX$1","getResponseUrl$1","response","xRequestUrl","X_REQUEST_URL_HEADER","FETCH_BACKEND","InjectionToken","FetchBackend","inject","FetchFactory","args","NgZone","request","Observable","observer","aborter","noop","error","HttpErrorResponse","signal","__async","init","fetchPromise","__spreadValues","silenceSuperfluousUnhandledPromiseRejection","HttpEventType","statusText","status","HttpHeaderResponse","contentLength","chunks","reader","receivedLength","decoder","partialText","reqZone","done","value","reportProgress","chunksAll","contentType","CONTENT_TYPE_HEADER","HTTP_STATUS_CODE_OK","binContent","text","credentials","name","values","ACCEPT_HEADER","ACCEPT_HEADER_VALUE","detectedType","totalLength","position","chunk","promise","interceptorChainEndFn","finalHandlerFn","adaptLegacyInterceptorToChain","chainTailFn","interceptor","initialRequest","downstreamRequest","chainedInterceptorFn","interceptorFn","injector","runInInjectionContext","HTTP_INTERCEPTORS","HTTP_INTERCEPTOR_FNS","HTTP_ROOT_INTERCEPTOR_FNS","REQUESTS_CONTRIBUTE_TO_STABILITY","legacyInterceptorFnFactory","chain","pendingTasks","PendingTasksInternal","taskId","finalize","HttpInterceptorHandler","HttpHandler","inject","PendingTasksInternal","REQUESTS_CONTRIBUTE_TO_STABILITY","backend","injector","initialRequest","dedupedInterceptorFns","HTTP_INTERCEPTOR_FNS","HTTP_ROOT_INTERCEPTOR_FNS","nextSequencedFn","interceptorFn","chainedInterceptorFn","interceptorChainEndFn","taskId","downstreamRequest","finalize","__ngFactoryType__","ɵɵinject","HttpBackend","EnvironmentInjector","ɵɵdefineInjectable","XSSI_PREFIX","X_REQUEST_URL_REGEXP","X_REQUEST_URL_HEADER","getResponseUrl","xhr","HttpXhrBackend","xhrFactory","req","RuntimeError","from","of","switchMap","Observable","observer","name","values","ACCEPT_HEADER","ACCEPT_HEADER_VALUE","CONTENT_TYPE_HEADER","detectedType","responseType","reqBody","headerResponse","partialFromXhr","statusText","headers","HttpHeaders","url","HttpHeaderResponse","onLoad","status","body","HTTP_STATUS_CODE_NO_CONTENT","HTTP_STATUS_CODE_OK","ok","originalBody","error","HttpResponse","HttpErrorResponse","onError","res","sentHeaders","onDownProgress","event","progressEvent","HttpEventType","onUpProgress","progress","__ngFactoryType__","ɵɵinject","XhrFactory","ɵɵdefineInjectable","XSRF_ENABLED","InjectionToken","XSRF_DEFAULT_COOKIE_NAME","XSRF_COOKIE_NAME","XSRF_DEFAULT_HEADER_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","HttpXsrfCookieExtractor","doc","platform","cookieName","cookieString","parseCookieValue","DOCUMENT","PLATFORM_ID","xsrfInterceptorFn","next","lcUrl","inject","token","headerName","HttpFeatureKind","makeHttpFeature","kind","providers","provideHttpClient","features","HttpClient","HttpXhrBackend","HttpInterceptorHandler","HttpHandler","HttpBackend","inject","FETCH_BACKEND","HTTP_INTERCEPTOR_FNS","xsrfInterceptorFn","XSRF_ENABLED","HttpXsrfTokenExtractor","HttpXsrfCookieExtractor","feature","makeEnvironmentProviders","LEGACY_INTERCEPTOR_FN","InjectionToken","withInterceptorsFromDi","makeHttpFeature","HttpFeatureKind","legacyInterceptorFnFactory","HTTP_INTERCEPTOR_FNS","withFetch","makeHttpFeature","HttpFeatureKind","FetchBackend","FETCH_BACKEND","HttpBackend","HTTP_TRANSFER_CACHE_ORIGIN_MAP","InjectionToken","BODY","HEADERS","STATUS","STATUS_TEXT","REQ_URL","RESPONSE_TYPE","CACHE_OPTIONS","ALLOWED_METHODS","transferCacheInterceptorFn","req","next","_a","inject","isCacheActive","globalOptions","__objRest","requestOptions","requestMethod","hasAuthHeaders","transferState","TransferState","RuntimeError","requestUrl","storeKey","makeCacheKey","response","headersToInclude","undecodedBody","responseType","httpHeaders","status","statusText","url","body","headers","HttpHeaders","of","HttpResponse","tap","event","sortAndConcatParams","params","k","makeCacheKey","request","mappedRequestUrl","method","responseType","encodedParams","serializedBody","key","hash","generateHash","value","char","withHttpTransferCache","cacheOptions","CACHE_OPTIONS","performanceMarkFeature","__spreadValues","HTTP_ROOT_INTERCEPTOR_FNS","transferCacheInterceptorFn","APP_BOOTSTRAP_LISTENER","appRef","inject","ApplicationRef","cacheState","GenericBrowserDomAdapter","DomAdapter","BrowserDomAdapter","_BrowserDomAdapter","setRootDomAdapter","el","evt","listener","options","node","tagName","doc","target","href","getBaseElementHref","relativePath","baseElement","name","parseCookieValue","url","BrowserXhr","__ngFactoryType__","ɵɵdefineInjectable","EVENT_MANAGER_PLUGINS","InjectionToken","EventManager","plugins","_zone","plugin","element","eventName","handler","options","RuntimeError","ɵɵinject","NgZone","EventManagerPlugin","_doc","APP_ID_ATTRIBUTE_NAME","removeElements","elements","createStyleElement","style","doc","styleElement","addServerStyles","appId","inline","external","createLinkElement","url","linkElement","SharedStylesHost","nonce","platformId","isPlatformServer","styles","urls","value","usages","creator","record","host","hostNode","DOCUMENT","APP_ID","CSP_NONCE","PLATFORM_ID","NAMESPACE_URIS","COMPONENT_REGEX","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT","REMOVE_STYLES_ON_COMPONENT_DESTROY","InjectionToken","shimContentAttribute","componentShortId","COMPONENT_REGEX","shimHostAttribute","shimStylesContent","compId","styles","s","DomRendererFactory2","eventManager","sharedStylesHost","appId","removeStylesOnCompDestroy","doc","platformId","ngZone","nonce","tracingService","isPlatformServer","DefaultDomRenderer2","element","type","ViewEncapsulation","__spreadProps","__spreadValues","renderer","EmulatedEncapsulationDomRenderer2","NoneEncapsulationDomRenderer","rendererByCompId","platformIsServer","ShadowDomRenderer","componentId","__ngFactoryType__","ɵɵinject","EventManager","SharedStylesHost","APP_ID","REMOVE_STYLES_ON_COMPONENT_DESTROY","DOCUMENT","PLATFORM_ID","NgZone","CSP_NONCE","TracingService","ɵɵdefineInjectable","name","namespace","NAMESPACE_URIS","value","parent","newChild","isTemplateNode","refChild","_parent","oldChild","selectorOrNode","preserveContent","el","RuntimeError","node","namespaceUri","style","flags","RendererStyleFlags2","target","event","callback","options","getDOM","wrappedCallback","eventHandler","isTemplateNode","node","ShadowDomRenderer","DefaultDomRenderer2","eventManager","sharedStylesHost","hostEl","component","doc","ngZone","nonce","platformIsServer","tracingService","styles","shimStylesContent","style","styleEl","styleUrls","styleUrl","linkEl","createLinkElement","parent","newChild","refChild","_parent","oldChild","NoneEncapsulationDomRenderer","removeStylesOnCompDestroy","compId","EmulatedEncapsulationDomRenderer2","appId","shimContentAttribute","shimHostAttribute","element","name","el","DomEventsPlugin","EventManagerPlugin","eventName","handler","options","target","callback","__ngFactoryType__","ɵɵinject","DOCUMENT","ɵɵdefineInjectable","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","event","KeyEventsPlugin","parsedEvent","outsideHandler","getDOM","parts","domEventName","key","fullKey","codeIX","modifierName","index","result","fullKeyCode","keycode","modifierGetter","zone","keyName","bootstrapApplication","rootComponent","internalCreateApplication","__spreadValues","createProvidersConfig","createProvidersConfig","options","BROWSER_MODULE_PROVIDERS","INTERNAL_BROWSER_PLATFORM_PROVIDERS","initDomAdapter","BrowserDomAdapter","errorHandler","ErrorHandler","_document","setDocument","INTERNAL_BROWSER_PLATFORM_PROVIDERS","PLATFORM_ID","PLATFORM_BROWSER_ID","PLATFORM_INITIALIZER","DOCUMENT","BROWSER_MODULE_PROVIDERS","INJECTOR_SCOPE","ErrorHandler","errorHandler","EVENT_MANAGER_PLUGINS","DomEventsPlugin","DOCUMENT","KeyEventsPlugin","DomRendererFactory2","SharedStylesHost","EventManager","RendererFactory2","XhrFactory","BrowserXhr","Title","_doc","newTitle","__ngFactoryType__","ɵɵinject","DOCUMENT","ɵɵdefineInjectable","DomSanitizer","__ngFactoryType__","ɵɵdefineInjectable","__ngConditionalFactory__","ɵɵinject","DomSanitizerImpl","_doc","ctx","value","SecurityContext","allowSanitizationBypassAndThrow","unwrapSafeValue","_sanitizeHtml","RuntimeError","_sanitizeUrl","bypassSanitizationTrustHtml","bypassSanitizationTrustStyle","bypassSanitizationTrustScript","bypassSanitizationTrustUrl","bypassSanitizationTrustResourceUrl","DOCUMENT","HydrationFeatureKind","hydrationFeature","ɵkind","ɵproviders","ɵoptions","withEventReplay","hydrationFeature","HydrationFeatureKind","provideClientHydration","features","providers","featuresKind","hasHttpTransferCacheOptions","HydrationFeatureKind","ɵproviders","ɵkind","makeEnvironmentProviders","withDomHydration","withHttpTransferCache","PRIMARY_OUTLET","RouteTitleKey","ParamsAsMap","params","name","v","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","route","parts","posParams","index","part","segment","shallowEqualArrays","a","b","i","shallowEqual","k1","getDataKeys","k2","key","equalArraysOrString","obj","aSorted","bSorted","val","last","wrapIntoObservable","value","isObservable","isPromise","from","of","pathCompareMap","equalSegmentGroups","containsSegmentGroup","paramCompareMap","equalParams","containsParams","containsTree","container","containee","options","matrixParams","equalPath","matrixParamsMatch","c","containsSegmentGroupHelper","containeePaths","current","next","containerPaths","containeeSegment","UrlTree","root","UrlSegmentGroup","queryParams","fragment","DEFAULT_SERIALIZER","children","serializePaths","UrlSegment","path","parameters","serializePath","equalSegments","as","bs","mapChildrenIntoArray","fn","res","childOutlet","child","UrlSerializer","__ngFactoryType__","ɵɵdefineInjectable","DefaultUrlSerializer","url","p","UrlParser","tree","serializeSegment","query","serializeQueryParams","encodeUriFragment","primary","k","encodeUriString","s","encodeUriQuery","encodeUriSegment","decode","decodeQuery","serializeMatrixParams","strParams","SEGMENT_RE","matchSegments","str","match","MATRIX_PARAM_SEGMENT_RE","matchMatrixKeySegments","QUERY_PARAM_RE","matchQueryParams","QUERY_PARAM_VALUE_RE","matchUrlQueryParamValue","RuntimeError","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","outletName","createRoot","rootCandidate","squashSegmentGroup","newChildren","childCandidate","grandChildOutlet","grandChild","mergeTrivialChildren","isUrlTree","createUrlTreeFromSnapshot","relativeTo","commands","relativeToUrlSegmentGroup","createSegmentGroupFromRoute","createUrlTreeFromSegmentGroup","targetGroup","createSegmentGroupFromRouteRecursive","currentRoute","childOutlets","childSnapshot","rootSegmentGroup","nav","computeNavigation","position","findStartingPositionForTargetGroup","newSegmentGroup","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","isCommandWithOutlets","oldRoot","oldSegmentGroup","qp","replaceSegment","newRoot","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","cmdWithOutlet","cmd","cmdIdx","outlets","urlPart","partIndex","Position","processChildren","target","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","getOutlets","startIndex","m","prefixedWith","slicedCommands","createNewSegmentGroup","o","childrenOfEmptyChild","outlet","currentCommandIndex","currentPathIndex","noMatch","curr","compare","paths","createNewSegmentChildren","stringify","IMPERATIVE_NAVIGATION","EventType","RouterEvent","id","NavigationStart","navigationTrigger","restoredState","NavigationEnd","urlAfterRedirects","NavigationCancellationCode","NavigationSkippedCode","NavigationCancel","reason","code","NavigationSkipped","NavigationError","error","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","RouteConfigLoadEnd","ChildActivationStart","snapshot","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","anchor","pos","BeforeActivateRoutes","RedirectRequest","navigationBehaviorOptions","getOrCreateRouteInjectorIfNeeded","route","currentInjector","createEnvironmentInjector","getOutlet","route","PRIMARY_OUTLET","sortByMatchingOutlets","routes","outletName","sortedConfig","r","getClosestRouteInjector","snapshot","s","OutletContext","rootInjector","ChildrenOutletContexts","childName","outlet","context","contexts","__ngFactoryType__","ɵɵinject","EnvironmentInjector","ɵɵdefineInjectable","Tree","root","t","p","n","findNode","findPath","c","cc","value","node","child","path","TreeNode","children","nodeChildrenAsMap","map","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","emptyUrl","BehaviorSubject","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","ActivatedRouteSnapshot","RouterStateSnapshot","urlSubject","paramsSubject","queryParamsSubject","fragmentSubject","dataSubject","component","futureSnapshot","d","RouteTitleKey","of","convertToParamMap","getInherited","parent","paramsInheritanceStrategy","inherited","routeConfig","__spreadValues","hasStaticTitle","url","params","queryParams","data","resolve","segment","matched","serializeNode","state","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqual","shallowEqualArrays","equalParamsAndUrlSegments","a","b","equalUrlParams","equalSegments","parentsMismatch","config","ROUTER_OUTLET_DATA","InjectionToken","RouterOutlet","EventEmitter","input","inject","ViewContainerRef","ChangeDetectorRef","INPUT_BINDER","changes","firstChange","previousValue","RuntimeError","cmp","ref","activatedRoute","environmentInjector","location","childContexts","injector","OutletInjector","ɵɵdefineDirective","ɵɵNgOnChangesFeature","_OutletInjector","parentInjector","outletData","token","notFoundValue","RoutedComponentInputBinder","dataSubscription","combineLatest","switchMap","index","mirror","reflectComponentType","templateName","createRouterState","routeReuseStrategy","curr","prevState","createNode","createOrReuseChildren","detachedRouteHandle","tree","createActivatedRoute","RedirectCommand","redirectTo","navigationBehaviorOptions","NAVIGATION_CANCELING_ERROR","redirectingNavigationError","urlSerializer","redirect","isUrlTree","error","navigationCancelingError","NavigationCancellationCode","message","code","isRedirectingNavigationCancelingError","isNavigationCancelingError","activateRoutes","rootContexts","routeReuseStrategy","forwardEvent","inputBindingEnabled","map","t","ActivateRoutes","futureState","currState","parentContexts","futureRoot","currRoot","advanceActivatedRoute","futureNode","currNode","contexts","children","nodeChildrenAsMap","futureChild","childOutletName","v","parentContext","future","curr","context","route","treeNode","componentRef","c","ActivationEnd","ChildActivationEnd","stored","CanActivate","path","CanDeactivate","component","getAllRouteGuards","getChildRouteGuards","getCanActivateChild","p","canActivateChild","getTokenOrFunctionIdentity","tokenOrFunction","injector","NOT_FOUND","result","isInjectable","futurePath","checks","prevChildren","getRouteGuards","k","deactivateRouteAndItsChildren","shouldRun","shouldRunGuardsAndResolvers","mode","equalPath","shallowEqual","equalParamsAndUrlSegments","r","childName","node","isFunction","isBoolean","isCanLoad","guard","isCanActivate","isCanActivateChild","isCanDeactivate","isCanMatch","isEmptyError","e","EmptyError","INITIAL_VALUE","prioritizedGuardValue","switchMap","obs","combineLatest","o","take","startWith","results","isRedirect","filter","item","val","isUrlTree","RedirectCommand","checkGuards","mergeMap","targetSnapshot","currentSnapshot","canActivateChecks","canDeactivateChecks","of","__spreadProps","__spreadValues","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","guardsResult","futureRSS","currRSS","from","check","runCanDeactivate","first","futureSnapshot","concatMap","concat","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","snapshot","ActivationStart","ChildActivationStart","futureARS","canActivate","canActivateObservables","defer","closestInjector","getClosestRouteInjector","guardVal","runInInjectionContext","wrapIntoObservable","canActivateChildGuardsMapped","_","d","guardsMapped","currARS","canDeactivateObservables","runCanLoadGuards","segments","urlSerializer","canLoad","canLoadObservables","injectionToken","redirectIfUrlTree","pipe","tap","redirectingNavigationError","runCanMatchGuards","canMatch","canMatchObservables","NoMatch","segmentGroup","AbsoluteRedirect","urlTree","noMatch$1","throwError","namedOutletsRedirect","redirectTo","throwError","RuntimeError","canLoadFails","route","navigationCancelingError","NavigationCancellationCode","ApplyRedirects","urlSerializer","urlTree","res","c","of","PRIMARY_OUTLET","segments","posParams","currentSnapshot","injector","redirectToFn","queryParams","fragment","routeConfig","url","outlet","params","data","title","newRedirect","runInInjectionContext","UrlTree","AbsoluteRedirect","newTree","newRoot","redirectToParams","actualParams","k","v","sourceName","group","updatedSegments","children","name","child","UrlSegmentGroup","redirectToSegments","actualSegments","s","redirectToUrlSegment","pos","idx","noMatch","matchWithChecks","segmentGroup","result","match","getOrCreateRouteInjectorIfNeeded","runCanMatchGuards","map","__spreadValues","createWildcardMatchResult","defaultUrlMatcher","parameters","last","split","consumedSegments","slicedSegments","config","containsEmptyPathMatchesWithNamedOutlets","createChildrenForEmptyPaths","containsEmptyPathMatches","addEmptyPathsToChildrenIfNeeded","routes","emptyPathMatch","getOutlet","primarySegment","r","noLeftoversInUrl","NoLeftoversInUrl","recognize$1","configLoader","rootComponentType","paramsInheritanceStrategy","Recognizer","MAX_ALLOWED_REDIRECTS","e","rootSegmentGroup","rootSnapshot","rootNode","TreeNode","routeState","RouterStateSnapshot","tree","createUrlTreeFromSnapshot","ActivatedRouteSnapshot","catchError","NoMatch","parentRoute","childOutlets","from","concatMap","childOutlet","sortedConfig","sortByMatchingOutlets","scan","outletChildren","defaultIfEmpty","mergeMap","noMatch$1","mergedChildren","mergeEmptyPathMatches","sortActivatedRouteSnapshots","allowRedirects","first","x","isEmptyError","rawSegment","matched","positionalParamSegments","remainingSegments","getData","getResolve","inherited","getInherited","newSegments","matchResult","switchMap","childConfig","childInjector","snapshot","matchedOnOutlet","runCanLoadGuards","shouldLoadResult","tap","cfg","nodes","a","b","hasEmptyPathConfig","node","mergedNodes","duplicateEmptyPathNode","resultNode","mergedNode","getData","route","getResolve","recognize","injector","configLoader","rootComponentType","config","serializer","paramsInheritanceStrategy","mergeMap","t","recognize$1","map","targetSnapshot","urlAfterRedirects","__spreadProps","__spreadValues","resolveData","canActivateChecks","of","routesWithResolversToRun","check","routesNeedingDataUpdates","newRoute","flattenRouteTree","routesProcessed","from","concatMap","runResolve","getInherited","tap","takeLast","_","EMPTY","descendants","child","futureARS","futureRSS","resolve","hasStaticTitle","RouteTitleKey","resolveNode","resolvedData","keys","getDataKeys","data","key","getResolver","first","value","RedirectCommand","redirectingNavigationError","DefaultUrlSerializer","catchError","e","isEmptyError","throwError","injectionToken","closestInjector","getClosestRouteInjector","resolver","getTokenOrFunctionIdentity","resolverValue","runInInjectionContext","wrapIntoObservable","switchTap","next","switchMap","v","nextResult","TitleStrategy","snapshot","pageTitle","PRIMARY_OUTLET","__ngFactoryType__","ɵɵdefineInjectable","inject","DefaultTitleStrategy","title","ɵɵinject","Title","ROUTER_CONFIGURATION","InjectionToken","ɵEmptyOutletComponent","ɵɵdefineComponent","rf","ctx","ɵɵelement","RouterOutlet","standardizeConfig","r","children","c","ROUTES","RouterConfigLoader","Compiler","loadRunner","maybeUnwrapDefaultExport","component","finalize","loader","ConnectableObservable","Subject","refCount","parentInjector","loadChildren","compiler","onLoadEndListener","NgModuleFactory$1","factoryOrRoutes","rawRoutes","requireStandaloneComponents","isWrappedDefaultExport","input","UrlHandlingStrategy","DefaultUrlHandlingStrategy","url","newUrlPart","wholeUrl","CREATE_VIEW_TRANSITION","VIEW_TRANSITION_OPTIONS","createViewTransition","to","transitionOptions","document","DOCUMENT","NgZone","resolveViewTransitionStarted","viewTransitionStarted","transition","createRenderPromise","onViewTransitionCreated","afterNextRender","NAVIGATION_ERROR_HANDLER","NavigationTransitions","EnvironmentInjector","DestroyRef","UrlSerializer","ChildrenOutletContexts","Location","INPUT_BINDER","onLoadStart","RouteConfigLoadStart","onLoadEnd","RouteConfigLoadEnd","request","id","router","initialUrlTree","initialRouterState","BehaviorSubject","IMPERATIVE_NAVIGATION","filter","overallTransitionState","completed","errored","NavigationCancellationCode","urlTransition","onSameUrlNavigation","reason","NavigationSkipped","NavigationSkippedCode","NavigationStart","routesRecognized","RoutesRecognized","extractedUrl","source","restoredState","extras","navStart","createEmptyState","guardsStart","GuardsCheckStart","getAllRouteGuards","checkGuards","evt","guardsEnd","GuardsCheckEnd","resolveStart","ResolveStart","dataResolved","resolveEnd","ResolveEnd","loadComponents","loaders","loadedComponent","combineLatest","defaultIfEmpty","take","currentSnapshot","targetRouterState","createRouterState","BeforeActivateRoutes","activateRoutes","NavigationEnd","takeUntil","err","isNavigationCancelingError","NavigationCancel","isRedirectingNavigationCancelingError","RedirectRequest","navigationError","NavigationError","navigationErrorHandlerResult","message","cancellationCode","ee","code","navCancel","currentBrowserUrl","targetBrowserUrl","isBrowserTriggeredNavigation","RouteReuseStrategy","DefaultRouteReuseStrategy","BaseRouteReuseStrategy","detachedTree","future","curr","ɵDefaultRouteReuseStrategy_BaseFactory","ɵɵgetInheritedFactory","StateManager","HistoryStateManager","UrlTree","listener","event","currentTransition","rawUrl","path","currentBrowserPageId","state","navigation","restoringFromCaughtError","targetPagePosition","navigationId","routerPageId","ɵHistoryStateManager_BaseFactory","afterNextNavigation","action","result","exactMatchOptions","subsetMatchOptions","Router","Console","PendingTasksInternal","Subscription","subscription","currentNavigation","opts","mergedTree","isPublicRouterEvent","stateCopy","urlTree","commands","navigationExtras","relativeTo","queryParams","fragment","queryParamsHandling","preserveFragment","f","q","relativeToUrlSegmentGroup","relativeToSnapshot","createSegmentGroupFromRoute","createUrlTreeFromSegmentGroup","isUrlTree","validateCommands","matchOptions","options","containsTree","params","priorPromise","reject","promise","res","rej","taskId","RuntimeError","RouterLink","tabIndexAttribute","renderer","el","locationStrategy","tagName","s","newTabIndex","changes","commandsOrUrlTree","button","ctrlKey","shiftKey","altKey","metaKey","sanitizedValue","ɵɵsanitizeUrlOrResourceUrl","attrName","attrValue","nativeElement","ɵɵdirectiveInject","ActivatedRoute","ɵɵinjectAttribute","Renderer2","ElementRef","LocationStrategy","ɵɵdefineDirective","ɵɵlistener","$event","ɵɵattribute","booleanAttribute","ɵɵNgOnChangesFeature","RouterLinkActive","EventEmitter","element","cdr","link","mergeAll","allLinkChanges","classes","hasActiveLinks","isActiveMatchOptions","isActiveCheckFn","ChangeDetectorRef","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","PreloadingStrategy","RouterPreloader","router","compiler","injector","preloadingStrategy","loader","filter","NavigationEnd","concatMap","routes","res","route","createEnvironmentInjector","injectorForCurrentRoute","injectorForChildren","from","mergeAll","loadedChildren$","of","recursiveLoadChildren$","mergeMap","config","loadComponent$","__ngFactoryType__","ɵɵinject","Router","Compiler","EnvironmentInjector","PreloadingStrategy","RouterConfigLoader","ɵɵdefineInjectable","ROUTER_SCROLLER","InjectionToken","RouterScroller","urlSerializer","transitions","viewportScroller","zone","options","NavigationStart","NavigationSkipped","NavigationSkippedCode","Scroll","routerEvent","anchor","ɵɵinvalidFactory","provideRouter","features","makeEnvironmentProviders","ROUTES","ActivatedRoute","rootRoute","APP_BOOTSTRAP_LISTENER","getBootstrapListener","feature","routerFeature","kind","providers","getBootstrapListener","injector","inject","Injector","bootstrappedComponentRef","ref","ApplicationRef","router","Router","bootstrapDone","BOOTSTRAP_DONE","INITIAL_NAVIGATION","ROUTER_PRELOADER","InjectFlags","ROUTER_SCROLLER","InjectionToken","Subject","withEnabledBlockingInitialNavigation","routerFeature","APP_INITIALIZER","locationInitialized","LOCATION_INITIALIZED","resolve","afterNextNavigation","NavigationTransitions","of","withDisabledInitialNavigation","ROUTER_PRELOADER","InjectionToken","withPreloading","preloadingStrategy","routerFeature","RouterPreloader","PreloadingStrategy","withComponentInputBinding","routerFeature","RoutedComponentInputBinder","INPUT_BINDER","withViewTransitions","options","providers","CREATE_VIEW_TRANSITION","createViewTransition","VIEW_TRANSITION_OPTIONS","__spreadValues","ROUTER_PROVIDERS","Location","UrlSerializer","DefaultUrlSerializer","Router","ChildrenOutletContexts","ActivatedRoute","rootRoute","RouterConfigLoader","RouterModule","routes","config","ROUTES","NAVIGATION_ERROR_HANDLER","ROUTER_CONFIGURATION","provideHashLocationStrategy","providePathLocationStrategy","provideRouterScroller","withPreloading","provideInitialNavigation","withComponentInputBinding","withViewTransitions","provideRouterInitializer","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ROUTER_SCROLLER","viewportScroller","inject","ViewportScroller","zone","NgZone","transitions","NavigationTransitions","urlSerializer","RouterScroller","LocationStrategy","HashLocationStrategy","PathLocationStrategy","provideInitialNavigation","config","withDisabledInitialNavigation","withEnabledBlockingInitialNavigation","ROUTER_INITIALIZER","InjectionToken","provideRouterInitializer","getBootstrapListener","APP_BOOTSTRAP_LISTENER","BaseControlValueAccessor","_","_renderer","_elementRef","key","value","fn","isDisabled","__ngFactoryType__","ɵɵdirectiveInject","Renderer2","ElementRef","ɵɵdefineDirective","BuiltInControlValueAccessor","ɵBuiltInControlValueAccessor_BaseFactory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","NG_VALUE_ACCESSOR","InjectionToken","DEFAULT_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","DefaultValueAccessor","_isAndroid","userAgent","getDOM","COMPOSITION_BUFFER_MODE","InjectionToken","BaseControlValueAccessor","renderer","elementRef","_compositionMode","value","normalizedValue","__ngFactoryType__","ɵɵdirectiveInject","Renderer2","ElementRef","ɵɵdefineDirective","rf","ctx","ɵɵlistener","$event","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","isEmptyInputValue","hasValidLength","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","min","minValidator","max","maxValidator","control","requiredValidator","requiredTrueValidator","emailValidator","minLength","minLengthValidator","maxLength","maxLengthValidator","pattern","patternValidator","nullValidator","validators","compose","composeAsync","regex","regexStr","isPresent","o","toObservable","isPromise","from","mergeErrors","arrayOfErrors","res","errors","__spreadValues","executeValidators","validator","isValidatorFn","normalizeValidators","c","presentValidators","composeValidators","observables","forkJoin","map","composeAsyncValidators","mergeValidators","controlValidators","dirValidator","getControlValidators","getControlAsyncValidators","makeValidatorsArray","hasValidator","addValidators","currentValidators","current","v","removeValidators","AbstractControlDirective","fn","errorCode","path","ControlContainer","NgControl","AbstractControlStatus","cd","ngControlStatusHost","ngGroupStatusHost","__spreadProps","NgControlStatus","ɵɵclassProp","NgControlStatusGroup","VALID","INVALID","PENDING","DISABLED","ControlEvent","ValueChangeEvent","value","source","PristineChangeEvent","pristine","TouchedChangeEvent","touched","StatusChangeEvent","status","FormSubmittedEvent","FormResetEvent","pickValidators","validatorOrOpts","isOptionsObj","coerceToValidator","validator","composeValidators","pickAsyncValidators","asyncValidator","coerceToAsyncValidator","composeAsyncValidators","assertControlPresent","parent","isGroup","key","controls","RuntimeError","assertAllValuesPresent","control","_","AbstractControl","validators","asyncValidators","validatorFn","asyncValidatorFn","untracked","v","computed","signal","Subject","addValidators","removeValidators","hasValidator","opts","changed","sourceControl","__spreadProps","__spreadValues","skipPristineCheck","changeFn","shouldHaveEmitted","ctrl","emitEvent","obs","toObservable","errors","path","currPath","name","errorCode","x","changedControl","EventEmitter","newPristine","fn","onlySelf","parentDirty","FormGroup","options","controlName","acc","subtreeUpdated","updated","child","cb","condition","initValue","res","FormRecord","FormGroup","CALL_SET_DISABLED_STATE","InjectionToken","setDisabledStateDefault","controlPath","name","parent","setUpControl","control","dir","callSetDisabledState","setUpValidators","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setUpDisabledChangeHandler","cleanUpControl","validateControlPresenceOnChange","noop","cleanUpValidators","registerOnValidatorChange","validators","onChange","validator","onDisabledChange","isDisabled","getControlValidators","mergeValidators","asyncValidators","getControlAsyncValidators","onValidatorChange","isControlUpdated","updatedValidators","updatedAsyncValidators","asyncValidator","newValue","updateControl","emitModelEvent","setUpFormContainer","cleanUpFormContainer","isPropertyUpdated","changes","viewModel","change","isBuiltInAccessor","valueAccessor","BuiltInControlValueAccessor","syncPendingControls","form","directives","dir","control","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","v","DefaultValueAccessor","removeListItem$1","list","el","index","removeListItem","list","el","index","isFormControlState","formState","FormControl","AbstractControl","validatorOrOpts","asyncValidator","pickValidators","pickAsyncValidators","isOptionsObj","value","options","changeFn","condition","fn","cb","isFormControl","control","FormControl","AbstractFormGroupDirective","ControlContainer","controlPath","ɵAbstractFormGroupDirective_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","ɵɵInheritDefinitionFeature","formControlBinding$1","NgControl","forwardRef","NgModel","resolvedPromise","FormControl","EventEmitter","parent","validators","asyncValidators","valueAccessors","_changeDetectorRef","callSetDisabledState","selectValueAccessor","changes","oldName","isPropertyUpdated","newValue","setUpControl","value","disabledValue","isDisabled","booleanAttribute","controlName","controlPath","__ngFactoryType__","ɵɵdirectiveInject","ControlContainer","NG_VALIDATORS","NG_ASYNC_VALIDATORS","NG_VALUE_ACCESSOR","ChangeDetectorRef","CALL_SET_DISABLED_STATE","ɵɵdefineDirective","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ɵNgNoValidate","NG_MODEL_WITH_FORM_CONTROL_WARNING","InjectionToken","formDirectiveProvider","ControlContainer","forwardRef","FormGroupDirective","untracked","value","computed","signal","EventEmitter","validators","asyncValidators","callSetDisabledState","changes","cleanUpValidators","dir","ctrl","setUpControl","cleanUpControl","removeListItem$1","$event","syncPendingControls","FormSubmittedEvent","FormResetEvent","oldCtrl","newCtrl","isFormControl","setUpFormContainer","cleanUpFormContainer","setUpValidators","__ngFactoryType__","ɵɵdirectiveInject","NG_VALIDATORS","NG_ASYNC_VALIDATORS","CALL_SET_DISABLED_STATE","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","formGroupNameProvider","FormGroupName","AbstractFormGroupDirective","parent","_hasInvalidParent","formArrayNameProvider","FormArrayName","controlPath","controlNameBinding","NgControl","FormControlName","isDisabled","valueAccessors","_ngModelWarningConfig","selectValueAccessor","isPropertyUpdated","newValue","NG_VALUE_ACCESSOR","NG_MODEL_WITH_FORM_CONTROL_WARNING","ɵInternalFormsSharedModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","FormArray","AbstractControl","controls","validatorOrOpts","asyncValidator","pickValidators","pickAsyncValidators","index","control","options","adjustedIndex","value","assertAllValuesPresent","newValue","assertControlPresent","subtreeUpdated","updated","child","cb","condition","name","isAbstractControlOptions","options","FormBuilder","nnfb","controls","reducedControls","newOptions","FormGroup","FormRecord","formState","validatorOrOpts","asyncValidator","FormControl","__spreadProps","__spreadValues","createdControls","c","FormArray","controlName","AbstractControl","value","validator","__ngFactoryType__","ɵɵdefineInjectable","FormsModule","opts","CALL_SET_DISABLED_STATE","setDisabledStateDefault","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ɵInternalFormsSharedModule","ReactiveFormsModule","NG_MODEL_WITH_FORM_CONTROL_WARNING","DomHandler","element","className","styles","i","classNames","cNames","child","selector","children","num","attributeName","overlay","target","appendTo","calculateMinWidth","gutter","getClosestRelativeElement","el","elementDimensions","targetHeight","targetOffset","windowScrollTop","windowScrollLeft","viewport","relativeElementOffset","top","left","horizontalOverflow","targetLeftOffsetInSpaceOfRelativeElement","elementOuterHeight","elementOuterWidth","targetOuterHeight","targetOuterWidth","parents","scrollableParents","overflowRegex","overflowCheck","node","styleDeclaration","parent","scrollSelectors","selectors","elementHeight","elementWidth","dimensions","container","item","borderTopValue","borderTop","paddingTopValue","paddingTop","containerRect","offset","scroll","itemHeight","duration","last","opacity","tick","ms","interval","gap","fading","doc","p","f","margin","width","style","height","win","d","e","g","w","h","rect","replacementElement","parentNode","ua","msie","trident","rv","edge","obj","scrollDiv","scrollbarWidth","scrollbarHeight","methodName","args","matched","match","value","options","focusableElements","visibleFocusableElements","focusableElement","computedStyle","reverse","index","focusedIndex","type","name","attributes","attribute","computedStyles","rule","cv","v","_cv","_k","_v","c","key","matchedEvent","ConnectedOverlayScrollHandler","listener","AutoFocus","BaseComponent","inject","PLATFORM_ID","DOCUMENT","ElementRef","isPlatformBrowser","focusableElements","DomHandler","ɵAutoFocus_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","booleanAttribute","ɵɵInheritDefinitionFeature","AutoFocusModule","ɵɵdefineNgModule","ɵɵdefineInjector","theme","dt","classes","props","instance","isNotEmpty","isEmpty","BadgeStyle","BaseStyle","ɵBadgeStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","Badge","BaseComponent","input","booleanAttribute","inject","BadgeStyle","computed","classes","isNotEmpty","isEmpty","ɵBadge_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","rf","ctx","ɵɵstyleMap","ɵɵclassMap","ɵɵstyleProp","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵtext","ɵɵtextInterpolate","CommonModule","SharedModule","BadgeModule","ɵɵdefineNgModule","ɵɵdefineInjector","_c0","css","BaseIconStyle","BaseStyle","ɵBaseIconStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","BaseIcon","BaseComponent","isLabelEmpty","isEmpty","ɵBaseIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","booleanAttribute","ɵɵProvidersFeature","BaseIconStyle","ɵɵInheritDefinitionFeature","_c0","rf","ctx","ɵɵprojectionDef","ɵɵprojection","AngleDownIcon","BaseIcon","ɵAngleDownIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","AngleRightIcon","BaseIcon","ɵAngleRightIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","CheckIcon","BaseIcon","ɵCheckIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","ChevronDownIcon","BaseIcon","ɵChevronDownIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","ChevronRightIcon","BaseIcon","ɵChevronRightIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","ExclamationTriangleIcon","BaseIcon","uuid","ɵExclamationTriangleIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","ɵɵadvance","ɵɵproperty","InfoCircleIcon","BaseIcon","uuid","ɵInfoCircleIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","ɵɵadvance","ɵɵproperty","SpinnerIcon","BaseIcon","uuid","ɵSpinnerIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","ɵɵadvance","ɵɵproperty","TimesIcon","BaseIcon","ɵTimesIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","TimesCircleIcon","BaseIcon","uuid","ɵTimesCircleIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","ɵɵadvance","ɵɵproperty","WindowMaximizeIcon","BaseIcon","uuid","ɵWindowMaximizeIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","ɵɵadvance","ɵɵproperty","WindowMinimizeIcon","BaseIcon","uuid","ɵWindowMinimizeIcon_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","ɵɵadvance","ɵɵproperty","theme","dt","classes","RippleStyle","BaseStyle","ɵRippleStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","Ripple","BaseComponent","inject","NgZone","RippleStyle","effect","isPlatformBrowser","event","ink","removeClass","getHeight","getWidth","d","getOuterWidth","getOuterHeight","offset","getOffset","x","y","addClass","children","i","remove","__ngFactoryType__","ɵɵdefineDirective","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","RippleModule","ɵɵdefineNgModule","ɵɵdefineInjector","_c0","_c1","_c2","_c3","_c4","a0","Button_ng_container_2_Template","rf","ctx","ɵɵelementContainer","Button_ng_container_3_ng_container_1_span_1_Template","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","ɵɵattribute","Button_ng_container_3_ng_container_1_SpinnerIcon_2_Template","Button_ng_container_3_ng_container_1_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ɵɵadvance","Button_ng_container_3_2_ng_template_0_Template","Button_ng_container_3_2_Template","Button_ng_container_3_Template","ɵɵpureFunction1","Button_ng_container_4_span_1_Template","ɵɵclassMap","Button_ng_container_4_2_ng_template_0_Template","Button_ng_container_4_2_Template","Button_ng_container_4_Template","Button_span_5_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtextInterpolate","Button_p_badge_6_Template","theme","dt","classes","instance","props","ButtonStyle","BaseStyle","ɵButtonStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","INTERNAL_BUTTON_CLASSES","ButtonLabel","BaseComponent","inject","ButtonStyle","ɵButtonLabel_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","rf","ctx","ɵɵclassProp","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ButtonIcon","ɵButtonIcon_BaseFactory","ButtonDirective","val","contentChild","computed","k","v","addClass","simpleChanges","buttonProps","props","property","styleClass","isEmpty","fluidComponent","findSingle","labelElement","iconElement","iconPosClass","iconClass","ɵButtonDirective_BaseFactory","dirIndex","ɵɵcontentQuerySignal","ɵɵqueryAdvance","booleanAttribute","ɵɵNgOnChangesFeature","Button","EventEmitter","item","value","acc","key","ɵButton_BaseFactory","ɵɵdefineComponent","ɵɵcontentQuery","_c0","_c1","_c2","PrimeTemplate","_t","ɵɵqueryRefresh","ɵɵloadQuery","numberAttribute","_c3","ɵɵprojectionDef","ɵɵelementStart","ɵɵlistener","$event","ɵɵprojection","ɵɵtemplate","Button_ng_container_2_Template","Button_ng_container_3_Template","Button_ng_container_4_Template","Button_span_5_Template","Button_p_badge_6_Template","ɵɵelementEnd","ɵɵproperty","ɵɵattribute","ɵɵadvance","CommonModule","NgClass","NgIf","NgTemplateOutlet","NgStyle","Ripple","AutoFocus","SpinnerIcon","BadgeModule","Badge","SharedModule","ButtonModule","ɵɵdefineNgModule","ɵɵdefineInjector","theme","dt","classes","instance","props","InputTextStyle","BaseStyle","ɵInputTextStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","InputText","BaseComponent","inject","InputTextStyle","fluidComponent","isEmpty","ngModel","__ngFactoryType__","ɵɵdirectiveInject","NgModel","ɵɵdefineDirective","rf","ctx","ɵɵlistener","$event","tmp_1_0","ɵɵclassProp","booleanAttribute","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","InputTextModule","ɵɵdefineNgModule","ɵɵdefineInjector","ObjectUtils","_ObjectUtils","value","empty","obj1","obj2","field","arrA","arrB","i","length","key","dateA","dateB","regexpA","regexpB","keys","data","fields","len","obj","from","to","target","item","index","arr","sourceArr","injected","list","val","str","input","value1","value2","locale","order","result","emptyValue1","emptyValue2","nullSortOrder","finalSortOrder","__spreadValues","char","params","callback","a","b","css","lastId","UniqueComponentId","prefix","ZIndexUtils","zIndexes","generateZIndex","baseZIndex","lastZIndex","newZIndex","revertZIndex","zIndex","getCurrentZIndex","getZIndex","el","zindexutils","transformToBoolean","_c0","_c1","a0","a1","a2","a3","_c2","_c3","_c4","ToastItem_Conditional_2_ng_container_0_Template","rf","ctx","ɵɵelementContainer","ToastItem_Conditional_2_Template","ɵɵtemplate","ctx_r1","ɵɵnextContext","ɵɵproperty","ɵɵpureFunction2","ToastItem_Conditional_3_ng_container_1_span_1_Template","ɵɵelement","ToastItem_Conditional_3_ng_container_1_span_2_Case_1_Template","ɵɵattribute","ToastItem_Conditional_3_ng_container_1_span_2_Case_2_Template","ToastItem_Conditional_3_ng_container_1_span_2_Case_3_Template","ToastItem_Conditional_3_ng_container_1_span_2_Case_4_Template","ToastItem_Conditional_3_ng_container_1_span_2_Case_5_Template","ToastItem_Conditional_3_ng_container_1_span_2_Template","ɵɵelementStart","ɵɵelementEnd","tmp_7_0","ɵɵadvance","ɵɵconditional","ToastItem_Conditional_3_ng_container_1_Template","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","ɵɵtextInterpolate1","ɵɵtextInterpolate","ToastItem_Conditional_3_ng_container_2_Template","ToastItem_Conditional_3_Conditional_3_Conditional_2_span_0_Template","ToastItem_Conditional_3_Conditional_3_Conditional_2_Template","ToastItem_Conditional_3_Conditional_3_Conditional_3_Template","ToastItem_Conditional_3_Conditional_3_Template","_r3","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","ToastItem_Conditional_3_Template","ɵɵclassMap","ɵɵpureFunction1","_c5","_c6","Toast_p_toastItem_2_Template","_r1","msg_r3","i_r4","theme","dt","inlineStyles","instance","_position","classes","ToastStyle","BaseStyle","ɵToastStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","ToastItem","BaseComponent","EventEmitter","inject","ToastStyle","zone","event","__ngFactoryType__","ɵɵdirectiveInject","NgZone","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","_c0","_t","ɵɵqueryRefresh","ɵɵloadQuery","numberAttribute","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","ɵɵresetView","ɵɵtemplate","ToastItem_Conditional_2_Template","ToastItem_Conditional_3_Template","ɵɵelementEnd","ɵɵclassMap","ɵɵproperty","ɵɵpureFunction1","_c2","ɵɵpureFunction4","_c1","ɵɵattribute","ɵɵadvance","ɵɵconditional","CommonModule","NgClass","NgIf","NgTemplateOutlet","CheckIcon","ExclamationTriangleIcon","InfoCircleIcon","TimesIcon","TimesCircleIcon","SharedModule","trigger","state","style","transition","animate","Toast","value","MessageService","uuid","messages","filteredMessages","m","key","item","message","allow","collection","zindexutils","isEmpty","innerHTML","breakpoint","breakpointStyle","styleProp","setAttribute","ɵToast_BaseFactory","ɵɵgetInheritedFactory","dirIndex","ɵɵcontentQuery","_c5","_c6","PrimeTemplate","booleanAttribute","Toast_p_toastItem_2_Template","ɵɵstyleMap","NgForOf","NgStyle","query","animateChild","ToastModule","ɵɵdefineNgModule","ɵɵdefineInjector","theme","dt","classes","TooltipStyle","BaseStyle","ɵTooltipStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","Tooltip","BaseComponent","val","uuid","inject","TooltipStyle","zone","viewContainer","isPlatformBrowser","tooltipEvent","target","simpleChange","__spreadValues","hasClass","duration","tooltipArrow","appendChild","targetEl","e","fadeIn","zindexutils","content","TemplateRef","embeddedViewRef","node","position","positionPriority","index","alignmentFn","offset","targetLeft","getWindowScrollLeft","targetTop","getWindowScrollTop","findSingle","el","offsetLeft","getOuterWidth","offsetTop","getOuterHeight","hostOffset","left","top","option","defaultClassName","width","height","viewport","getViewport","ConnectedOverlayScrollHandler","removeChild","__ngFactoryType__","ɵɵdirectiveInject","NgZone","ViewContainerRef","ɵɵdefineDirective","booleanAttribute","numberAttribute","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","TooltipModule","ɵɵdefineNgModule","ɵɵdefineInjector","_c0","_c1","a0","_c2","_c3","MenuItemContent_ng_container_1_a_1_ng_container_1_Template","rf","ctx","ɵɵelementContainer","MenuItemContent_ng_container_1_a_1_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r1","ɵɵnextContext","itemContent_r3","ɵɵreference","ɵɵproperty","ɵɵpureFunction1","ɵɵattribute","ɵɵsanitizeUrl","ɵɵadvance","MenuItemContent_ng_container_1_a_2_ng_container_1_Template","MenuItemContent_ng_container_1_a_2_Template","ɵɵpureFunction0","MenuItemContent_ng_container_1_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","MenuItemContent_ng_container_2_1_ng_template_0_Template","MenuItemContent_ng_container_2_1_Template","MenuItemContent_ng_container_2_Template","MenuItemContent_ng_template_3_span_0_Template","ɵɵelement","ɵɵclassMap","MenuItemContent_ng_template_3_span_1_Template","ɵɵtext","ɵɵtextInterpolate","MenuItemContent_ng_template_3_ng_template_2_Template","ɵɵpipe","ɵɵpipeBind1","ɵɵsanitizeHtml","MenuItemContent_ng_template_3_p_badge_4_Template","MenuItemContent_ng_template_3_Template","ɵɵtemplateRefExtractor","htmlLabel_r4","_c4","_c5","_c6","_c7","_c8","_c9","_c10","_c11","_c12","a1","_c13","_c14","_c15","Menu_div_0_div_2_ng_container_1_Template","Menu_div_0_div_2_Template","tmp_5_0","Menu_div_0_5_ng_template_0_li_0_Template","Menu_div_0_5_ng_template_0_li_1_ng_container_1_span_1_Template","submenu_r3","Menu_div_0_5_ng_template_0_li_1_ng_container_1_ng_template_2_Template","Menu_div_0_5_ng_template_0_li_1_ng_container_1_Template","htmlSubmenuLabel_r4","Menu_div_0_5_ng_template_0_li_1_ng_container_2_Template","Menu_div_0_5_ng_template_0_li_1_Template","tmp_13_0","ctx_r4","i_r6","ɵɵpureFunction2","Menu_div_0_5_ng_template_0_ng_template_2_li_0_Template","Menu_div_0_5_ng_template_0_ng_template_2_li_1_Template","_r7","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ctx_r7","item_r9","j_r10","ɵɵresetView","Menu_div_0_5_ng_template_0_ng_template_2_Template","Menu_div_0_5_ng_template_0_Template","Menu_div_0_5_Template","Menu_div_0_6_ng_template_0_li_0_Template","Menu_div_0_6_ng_template_0_li_1_Template","_r11","ctx_r11","item_r13","i_r14","tmp_10_0","Menu_div_0_6_ng_template_0_Template","Menu_div_0_6_Template","Menu_div_0_div_7_ng_container_1_Template","Menu_div_0_div_7_Template","Menu_div_0_Template","_r1","tmp_19_0","theme","dt","classes","props","instance","MenuStyle","BaseStyle","ɵMenuStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","SafeHtmlPipe","platformId","sanitizer","value","isPlatformBrowser","__ngFactoryType__","ɵɵdirectiveInject","PLATFORM_ID","DomSanitizer","ɵɵdefinePipe","MenuItemContent","EventEmitter","menu","event","item","forwardRef","Menu","ɵɵdefineComponent","_c0","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵtemplate","MenuItemContent_ng_container_1_Template","MenuItemContent_ng_container_2_Template","MenuItemContent_ng_template_3_Template","ɵɵtemplateRefExtractor","ɵɵelementEnd","ɵɵattribute","ɵɵadvance","ɵɵproperty","CommonModule","NgClass","NgIf","NgTemplateOutlet","NgStyle","RouterModule","RouterLink","RouterLinkActive","Ripple","TooltipModule","BadgeModule","Badge","SharedModule","BaseComponent","computed","signal","inject","MenuStyle","overlayService","uuid","focus","zindexutils","relativePosition","absolutePosition","appendChild","isTouchDevice","id","index","childIndex","label","disabled","optionIndex","find","element","findSingle","anchorElement","matchedOptionIndex","link","links","order","originalEvent","documentTarget","isOutsideContainer","isOutsideTarget","window","ConnectedOverlayScrollHandler","subitem","OverlayService","dirIndex","ɵɵcontentQuery","_c4","_c5","_c6","_c7","_c8","PrimeTemplate","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c9","_c10","booleanAttribute","numberAttribute","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","Menu_div_0_Template","NgForOf","Tooltip","trigger","transition","style","animate","MenuModule","ɵɵdefineNgModule","ɵɵdefineInjector","ToastsPositionService","toastPosition","constructor","window","setToastPosition","innerWidth","addEventListener","width","getPosition","factory","ɵfac","providedIn","FocusTrap","BaseComponent","inject","PLATFORM_ID","DOCUMENT","isPlatformBrowser","changes","selector","tabindex","createFocusableElement","onFocus","createElement","event","currentTarget","relatedTarget","focusableElement","getFirstFocusableElement","focus","getLastFocusableElement","ɵFocusTrap_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","booleanAttribute","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","FocusTrapModule","ɵɵdefineNgModule","ɵɵdefineInjector","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","_c10","a0","a1","a2","_c11","_c12","_c13","_c14","Dialog_div_0_div_1_ng_container_2_ng_container_1_Template","rf","ctx","ɵɵelementContainer","Dialog_div_0_div_1_ng_container_2_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵproperty","Dialog_div_0_div_1_ng_template_3_div_0_Template","_r4","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵelementEnd","Dialog_div_0_div_1_ng_template_3_span_3_Template","ɵɵtext","ɵɵtextInterpolate","Dialog_div_0_div_1_ng_template_3_ng_container_4_Template","Dialog_div_0_div_1_ng_template_3_p_button_6_span_1_Template","ɵɵelement","Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_2_WindowMaximizeIcon_1_Template","Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_2_WindowMinimizeIcon_2_Template","Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_2_Template","Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_3_1_ng_template_0_Template","Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_3_1_Template","Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_3_Template","Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_4_1_ng_template_0_Template","Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_4_1_Template","Dialog_div_0_div_1_ng_template_3_p_button_6_ng_container_4_Template","Dialog_div_0_div_1_ng_template_3_p_button_6_Template","_r5","Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_ng_container_0_span_1_Template","Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_ng_container_0_TimesIcon_2_Template","Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_ng_container_0_Template","Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_span_1_1_ng_template_0_Template","Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_span_1_1_Template","Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_span_1_Template","Dialog_div_0_div_1_ng_template_3_p_button_7_ng_template_1_Template","Dialog_div_0_div_1_ng_template_3_p_button_7_Template","_r6","ɵɵtemplateRefExtractor","Dialog_div_0_div_1_ng_template_3_ng_container_11_Template","Dialog_div_0_div_1_ng_template_3_div_12_ng_container_3_Template","Dialog_div_0_div_1_ng_template_3_div_12_Template","ɵɵprojection","Dialog_div_0_div_1_ng_template_3_Template","_r3","ɵɵclassMap","ɵɵattribute","Dialog_div_0_div_1_Template","_r1","notHeadless_r7","ɵɵreference","ɵɵstyleMap","ɵɵpureFunction1","ɵɵpureFunction0","ɵɵpureFunction2","Dialog_div_0_Template","ɵɵpureFunction3","theme","dt","inlineStyles","instance","classes","pos","item","DialogStyle","BaseStyle","ɵDialogStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","showAnimation","animation","style","animate","hideAnimation","Dialog","BaseComponent","_positionLeft","_positionTop","_responsive","_breakpoint","value","__spreadValues","EventEmitter","uuid","inject","DialogStyle","TranslationKeys","NgZone","pos","item","durationString","transitionTimeRegex","totalMilliseconds","match","unit","focusParentElement","timeoutDuration","_focusableElements","DomHandler","focused","event","blockBodyScroll","scrollBlockers","unblockBodyScroll","zindexutils","isPlatformBrowser","innerHTML","breakpoint","setAttribute","hasClass","addClass","containerWidth","getOuterWidth","containerHeight","getOuterHeight","deltaX","deltaY","offset","containerComputedStyle","leftMargin","topMargin","leftPos","topPos","viewport","getViewport","removeClass","contentHeight","newWidth","newHeight","minWidth","minHeight","documentTarget","appendChild","ɵDialog_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","_c0","_c1","_c2","_c3","_c4","_c5","_c6","PrimeTemplate","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c7","booleanAttribute","numberAttribute","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","_c9","ɵɵprojectionDef","_c8","ɵɵtemplate","Dialog_div_0_Template","ɵɵproperty","CommonModule","NgClass","NgIf","NgTemplateOutlet","NgStyle","Button","FocusTrap","TimesIcon","WindowMaximizeIcon","WindowMinimizeIcon","SharedModule","trigger","transition","useAnimation","DialogModule","ɵɵdefineNgModule","ɵɵdefineInjector","_c0","_c1","_c2","_c3","_c4","a0","a1","a2","_c5","_c6","_c7","_c8","DynamicDialogComponent_div_2_div_2_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","ɵɵelementEnd","ɵɵproperty","DynamicDialogComponent_div_2_div_3_ng_container_2_Template","ɵɵelementContainer","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_1_WindowMaximizeIcon_1_Template","ɵɵelement","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_1_WindowMinimizeIcon_2_Template","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_1_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ɵɵadvance","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_2_1_ng_template_0_Template","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_2_1_Template","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_2_Template","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_3_1_ng_template_0_Template","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_3_1_Template","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_ng_container_3_Template","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_4_Template","_r5","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_ng_container_1_Template","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_span_2_1_ng_template_0_Template","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_span_2_1_Template","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_span_2_Template","DynamicDialogComponent_div_2_div_3_ng_container_3_p_button_5_Template","_r6","DynamicDialogComponent_div_2_div_3_ng_container_3_Template","ɵɵtext","ɵɵtextInterpolate","DynamicDialogComponent_div_2_div_3_Template","_r4","DynamicDialogComponent_div_2_6_ng_template_0_Template","DynamicDialogComponent_div_2_6_Template","DynamicDialogComponent_div_2_ng_container_7_Template","DynamicDialogComponent_div_2_div_8_ng_container_2_Template","ɵɵtextInterpolate1","DynamicDialogComponent_div_2_div_8_ng_container_3_Template","DynamicDialogComponent_div_2_div_8_Template","DynamicDialogComponent_div_2_Template","_r1","ɵɵstyleMap","ɵɵclassMap","ɵɵstyleProp","ɵɵpureFunction1","ɵɵpureFunction0","ɵɵpureFunction2","ɵɵattribute","DynamicDialogContent","viewContainerRef","__ngFactoryType__","ɵɵdirectiveInject","ViewContainerRef","ɵɵdefineDirective","DynamicDialogStyle","DialogStyle","ɵDynamicDialogStyle_BaseFactory","ɵɵgetInheritedFactory","ɵɵdefineInjectable","DynamicDialogConfig","DynamicDialogRef","result","event","value","Subject","showAnimation","animation","style","animate","hideAnimation","DynamicDialogComponent","BaseComponent","uuid","inject","DynamicDialogStyle","TranslationKeys","__spreadValues","domElements","contentElements","pos","item","renderer","ddconfig","dialogRef","zone","parentDialog","isPlatformBrowser","innerHTML","breakpoint","setAttribute","componentType","viewContainerRef","key","zindexutils","addClass","removeClass","focusParentElement","focusable","DomHandler","focusableElement","deltaX","deltaY","containerWidth","getOuterWidth","containerHeight","getOuterHeight","contentHeight","newWidth","newHeight","minWidth","minHeight","offset","viewport","getViewport","hasClass","leftPos","topPos","documentTarget","currentZIndex","__ngFactoryType__","ɵɵdirectiveInject","Renderer2","NgZone","ɵɵdefineComponent","rf","ctx","ɵɵviewQuery","DynamicDialogContent","_c0","_c1","_c2","_c3","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵelementStart","ɵɵtemplate","DynamicDialogComponent_div_2_Template","ɵɵelementEnd","ɵɵclassMap","ɵɵproperty","ɵɵpureFunction3","_c4","ɵɵadvance","CommonModule","NgClass","NgComponentOutlet","NgIf","NgTemplateOutlet","NgStyle","SharedModule","WindowMaximizeIcon","WindowMinimizeIcon","TimesIcon","Button","FocusTrap","trigger","transition","useAnimation","DynamicDialogModule","ɵɵdefineNgModule","ɵɵdefineInjector","DynamicDialogInjector","_parentInjector","_additionalTokens","token","notFoundValue","options","DialogService","appRef","injector","document","config","ref","map","sub","destroySub","componentRef","createComponent","domElem","appendChild","dialogComponentRef","permission","ɵɵinject","ApplicationRef","Injector","DOCUMENT","ɵɵdefineInjectable","_c0","_c1","_c2","_c3","Toolbar_div_2_ng_container_1_Template","rf","ctx","ɵɵelementContainer","Toolbar_div_2_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵattribute","ɵɵadvance","ɵɵproperty","Toolbar_div_3_ng_container_1_Template","Toolbar_div_3_Template","Toolbar_div_4_ng_container_1_Template","Toolbar_div_4_Template","theme","dt","classes","ToolbarStyle","BaseStyle","ɵToolbarStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","Toolbar","BaseComponent","inject","ToolbarStyle","item","ɵToolbar_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","_c0","_c1","_c2","PrimeTemplate","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","_c3","ɵɵprojectionDef","ɵɵelementStart","ɵɵprojection","ɵɵtemplate","Toolbar_div_2_Template","Toolbar_div_3_Template","Toolbar_div_4_Template","ɵɵelementEnd","ɵɵclassMap","ɵɵproperty","ɵɵattribute","ɵɵadvance","CommonModule","NgClass","NgIf","NgTemplateOutlet","NgStyle","SharedModule","ToolbarModule","ɵɵdefineNgModule","ɵɵdefineInjector","API_URL","RefreshTokenRequest","refreshTokenId","constructor","tokenId","InvalidTokenError","b64DecodeUnicode","str","m","p","code","base64UrlDecode","output","jwtDecode","token","options","pos","part","decoded","e","JwtService","http","authStateInitialized","loggedInSubject","BehaviorSubject","authState$","asObservable","constructor","initAuthState","token","getToken","decoded","decodeToken","currentTime","Date","now","exp","next","logout","window","sessionStorage","removeItem","sendLoginRequest","request","post","API_URL","refreshToken","refreshTokenId","getItem","EMPTY","throwError","Error","body","RefreshTokenRequest","Number","isLoggedIn","value","isAuthInitialized","getLoggedInUser","decodedToken","username","jwtDecode","sub","get","getRefreshToken","setTokens","setItem","accessToken","ɵɵinject","HttpClient","factory","ɵfac","providedIn","_c0","theme","dt","classes","props","InputGroupStyle","BaseStyle","ɵInputGroupStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","InputGroup","BaseComponent","inject","InputGroupStyle","ɵInputGroup_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","rf","ctx","ɵɵattribute","ɵɵstyleMap","ɵɵclassMap","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","_c0","ɵɵprojectionDef","ɵɵprojection","CommonModule","SharedModule","InputGroupModule","ɵɵdefineNgModule","ɵɵdefineInjector","_c0","classes","InputGroupAddonStyle","BaseStyle","ɵInputGroupAddonStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","InputGroupAddon","BaseComponent","inject","ɵInputGroupAddon_BaseFactory","ɵɵdefineComponent","rf","ctx","ɵɵattribute","ɵɵstyleMap","ɵɵclassMap","ɵɵclassProp","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵprojectionDef","ɵɵprojection","CommonModule","InputGroupAddonModule","ɵɵdefineNgModule","ɵɵdefineInjector","SharedModule","_c0","_c1","_c2","_c3","_c4","a0","a1","_c5","_c6","Message_Conditional_0_Conditional_2_ng_container_0_Template","rf","ctx","ɵɵelementContainer","Message_Conditional_0_Conditional_2_Template","ɵɵtemplate","ctx_r0","ɵɵnextContext","ɵɵproperty","Message_Conditional_0_Conditional_3_Template","ɵɵelement","Message_Conditional_0_div_4_span_1_Template","ɵɵsanitizeHtml","Message_Conditional_0_div_4_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","Message_Conditional_0_ng_template_5_span_0_Template","ɵɵtext","ɵɵtextInterpolate","Message_Conditional_0_ng_template_5_Template","Message_Conditional_0_Conditional_7_ng_container_0_Template","Message_Conditional_0_Conditional_7_Template","ɵɵpureFunction1","Message_Conditional_0_Conditional_8_Template","ɵɵprojection","Message_Conditional_0_Conditional_9_Conditional_1_Template","Message_Conditional_0_Conditional_9_Conditional_2_ng_container_0_Template","Message_Conditional_0_Conditional_9_Conditional_2_Template","Message_Conditional_0_Conditional_9_Conditional_3_Template","Message_Conditional_0_Conditional_9_Template","_r2","ɵɵgetCurrentView","ɵɵlistener","$event","ɵɵrestoreView","ɵɵresetView","ɵɵattribute","ɵɵconditional","Message_Conditional_0_Template","ɵɵtemplateRefExtractor","escapeOut_r3","ɵɵreference","ɵɵpureFunction2","theme","dt","classes","props","MessageStyle","BaseStyle","ɵMessageStyle_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineInjectable","Message","BaseComponent","EventEmitter","variantClass","sizeClass","signal","inject","MessageStyle","item","event","ɵMessage_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","_c0","_c1","_c2","PrimeTemplate","_t","ɵɵqueryRefresh","ɵɵloadQuery","booleanAttribute","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","_c3","ɵɵprojectionDef","ɵɵtemplate","Message_Conditional_0_Template","ɵɵconditional","CommonModule","NgClass","NgIf","NgTemplateOutlet","TimesIcon","Ripple","SharedModule","trigger","transition","style","animate","MessageModule","ɵɵdefineNgModule","ɵɵdefineInjector"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,34,36,37,38]}